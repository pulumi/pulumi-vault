// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Database.Inputs
{

    public sealed class SecretBackendConnectionElasticsearchGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity.
        /// </summary>
        [Input("caCert")]
        public Input<string>? CaCert { get; set; }

        /// <summary>
        /// The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity.
        /// </summary>
        [Input("caPath")]
        public Input<string>? CaPath { get; set; }

        /// <summary>
        /// The path to the certificate for the Elasticsearch client to present for communication.
        /// </summary>
        [Input("clientCert")]
        public Input<string>? ClientCert { get; set; }

        /// <summary>
        /// The path to the key for the Elasticsearch client to use for communication.
        /// </summary>
        [Input("clientKey")]
        public Input<string>? ClientKey { get; set; }

        /// <summary>
        /// Whether to disable certificate verification.
        /// </summary>
        [Input("insecure")]
        public Input<bool>? Insecure { get; set; }

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password to authenticate with.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// This, if set, is used to set the SNI host when connecting via TLS.
        /// </summary>
        [Input("tlsServerName")]
        public Input<string>? TlsServerName { get; set; }

        /// <summary>
        /// The URL for Elasticsearch's API. https requires certificate
        /// by trusted CA if used.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        /// <summary>
        /// The username to authenticate with.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// Template describing how dynamic usernames are generated.
        /// </summary>
        [Input("usernameTemplate")]
        public Input<string>? UsernameTemplate { get; set; }

        public SecretBackendConnectionElasticsearchGetArgs()
        {
        }
        public static new SecretBackendConnectionElasticsearchGetArgs Empty => new SecretBackendConnectionElasticsearchGetArgs();
    }
}
