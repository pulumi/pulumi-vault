// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Database.Inputs
{

    public sealed class SecretBackendConnectionSnowflakeGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Connection string to use to connect to the database.
        /// </summary>
        [Input("connectionUrl")]
        public Input<string>? ConnectionUrl { get; set; }

        /// <summary>
        /// Maximum number of seconds a connection may be reused.
        /// </summary>
        [Input("maxConnectionLifetime")]
        public Input<int>? MaxConnectionLifetime { get; set; }

        /// <summary>
        /// Maximum number of idle connections to the database.
        /// </summary>
        [Input("maxIdleConnections")]
        public Input<int>? MaxIdleConnections { get; set; }

        /// <summary>
        /// Maximum number of open connections to the database.
        /// </summary>
        [Input("maxOpenConnections")]
        public Input<int>? MaxOpenConnections { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The root credential password used in the connection URL
        /// </summary>
        [Obsolete(@"Snowflake is ending support for single-factor password authentication by November 2025. Refer to the documentation for more information on migrating to key-pair authentication.")]
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Version counter for root credential password write-only field
        /// </summary>
        [Input("passwordWoVersion")]
        public Input<int>? PasswordWoVersion { get; set; }

        /// <summary>
        /// Version counter for the private key key-pair credentials write-only field
        /// </summary>
        [Input("privateKeyWoVersion")]
        public Input<int>? PrivateKeyWoVersion { get; set; }

        /// <summary>
        /// The root credential username used in the connection URL
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// Username generation template.
        /// </summary>
        [Input("usernameTemplate")]
        public Input<string>? UsernameTemplate { get; set; }

        public SecretBackendConnectionSnowflakeGetArgs()
        {
        }
        public static new SecretBackendConnectionSnowflakeGetArgs Empty => new SecretBackendConnectionSnowflakeGetArgs();
    }
}
