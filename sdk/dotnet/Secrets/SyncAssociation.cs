// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Secrets
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Vault = Pulumi.Vault;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var kvv2 = new Vault.Mount("kvv2", new()
    ///     {
    ///         Path = "kvv2",
    ///         Type = "kv",
    ///         Options = 
    ///         {
    ///             { "version", "2" },
    ///         },
    ///         Description = "KV Version 2 secret engine mount",
    ///     });
    /// 
    ///     var token = new Vault.Kv.SecretV2("token", new()
    ///     {
    ///         Mount = kvv2.Path,
    ///         DataJson = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["dev"] = "B!gS3cr3t",
    ///             ["prod"] = "S3cureP4$$",
    ///         }),
    ///     });
    /// 
    ///     var gh = new Vault.Secrets.SyncGhDestination("gh", new()
    ///     {
    ///         AccessToken = @var.Access_token,
    ///         RepositoryOwner = @var.Repo_owner,
    ///         RepositoryName = "repo-name-example",
    ///         SecretNameTemplate = "vault_{{ .MountAccessor | lowercase }}_{{ .SecretPath | lowercase }}",
    ///     });
    /// 
    ///     var ghToken = new Vault.Secrets.SyncAssociation("ghToken", new()
    ///     {
    ///         Type = gh.Type,
    ///         Mount = kvv2.Path,
    ///         SecretName = token.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [VaultResourceType("vault:secrets/syncAssociation:SyncAssociation")]
    public partial class SyncAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Metadata for each subkey of the associated secret.
        /// </summary>
        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.SyncAssociationMetadata>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// Specifies the mount where the secret is located.
        /// </summary>
        [Output("mount")]
        public Output<string> Mount { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the destination.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the secret to synchronize.
        /// </summary>
        [Output("secretName")]
        public Output<string> SecretName { get; private set; } = null!;

        /// <summary>
        /// Specifies the destination type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SyncAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SyncAssociation(string name, SyncAssociationArgs args, CustomResourceOptions? options = null)
            : base("vault:secrets/syncAssociation:SyncAssociation", name, args ?? new SyncAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SyncAssociation(string name, Input<string> id, SyncAssociationState? state = null, CustomResourceOptions? options = null)
            : base("vault:secrets/syncAssociation:SyncAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SyncAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SyncAssociation Get(string name, Input<string> id, SyncAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new SyncAssociation(name, id, state, options);
        }
    }

    public sealed class SyncAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the mount where the secret is located.
        /// </summary>
        [Input("mount", required: true)]
        public Input<string> Mount { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the destination.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Specifies the name of the secret to synchronize.
        /// </summary>
        [Input("secretName", required: true)]
        public Input<string> SecretName { get; set; } = null!;

        /// <summary>
        /// Specifies the destination type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SyncAssociationArgs()
        {
        }
        public static new SyncAssociationArgs Empty => new SyncAssociationArgs();
    }

    public sealed class SyncAssociationState : global::Pulumi.ResourceArgs
    {
        [Input("metadatas")]
        private InputList<Inputs.SyncAssociationMetadataGetArgs>? _metadatas;

        /// <summary>
        /// Metadata for each subkey of the associated secret.
        /// </summary>
        public InputList<Inputs.SyncAssociationMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.SyncAssociationMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// Specifies the mount where the secret is located.
        /// </summary>
        [Input("mount")]
        public Input<string>? Mount { get; set; }

        /// <summary>
        /// Specifies the name of the destination.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Specifies the name of the secret to synchronize.
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        /// <summary>
        /// Specifies the destination type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public SyncAssociationState()
        {
        }
        public static new SyncAssociationState Empty => new SyncAssociationState();
    }
}
