// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault
{
    public static class GetNomadAccessToken
    {
        public static Task<GetNomadAccessTokenResult> InvokeAsync(GetNomadAccessTokenArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNomadAccessTokenResult>("vault:index/getNomadAccessToken:getNomadAccessToken", args ?? new GetNomadAccessTokenArgs(), options.WithDefaults());

        public static Output<GetNomadAccessTokenResult> Invoke(GetNomadAccessTokenInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNomadAccessTokenResult>("vault:index/getNomadAccessToken:getNomadAccessToken", args ?? new GetNomadAccessTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNomadAccessTokenArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The path to the Nomad secret backend to
        /// read credentials from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend", required: true)]
        public string Backend { get; set; } = null!;

        /// <summary>
        /// The name of the Nomad secret backend role to generate
        /// a token for, with no leading or trailing `/`s.
        /// </summary>
        [Input("role", required: true)]
        public string Role { get; set; } = null!;

        public GetNomadAccessTokenArgs()
        {
        }
    }

    public sealed class GetNomadAccessTokenInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The path to the Nomad secret backend to
        /// read credentials from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend", required: true)]
        public Input<string> Backend { get; set; } = null!;

        /// <summary>
        /// The name of the Nomad secret backend role to generate
        /// a token for, with no leading or trailing `/`s.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        public GetNomadAccessTokenInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNomadAccessTokenResult
    {
        /// <summary>
        /// The public identifier for a specific token. It can be used 
        /// to look up information about a token or to revoke a token.
        /// </summary>
        public readonly string AccessorId;
        public readonly string Backend;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Role;
        /// <summary>
        /// The token to be used when making requests to Nomad and should be kept private.
        /// </summary>
        public readonly string SecretId;

        [OutputConstructor]
        private GetNomadAccessTokenResult(
            string accessorId,

            string backend,

            string id,

            string role,

            string secretId)
        {
            AccessorId = accessorId;
            Backend = backend;
            Id = id;
            Role = role;
            SecretId = secretId;
        }
    }
}
