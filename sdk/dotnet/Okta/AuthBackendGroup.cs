// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Okta
{
    /// <summary>
    /// Provides a resource to create a group in an
    /// [Okta auth backend within Vault](https://www.vaultproject.io/docs/auth/okta.html).
    /// 
    /// 
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/r/okta_auth_backend_group.html.md.
    /// </summary>
    public partial class AuthBackendGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the group within the Okta
        /// </summary>
        [Output("groupName")]
        public Output<string> GroupName { get; private set; } = null!;

        /// <summary>
        /// The path where the Okta auth backend is mounted
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// Vault policies to associate with this group
        /// </summary>
        [Output("policies")]
        public Output<ImmutableArray<string>> Policies { get; private set; } = null!;


        /// <summary>
        /// Create a AuthBackendGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthBackendGroup(string name, AuthBackendGroupArgs args, CustomResourceOptions? options = null)
            : base("vault:okta/authBackendGroup:AuthBackendGroup", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private AuthBackendGroup(string name, Input<string> id, AuthBackendGroupState? state = null, CustomResourceOptions? options = null)
            : base("vault:okta/authBackendGroup:AuthBackendGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthBackendGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthBackendGroup Get(string name, Input<string> id, AuthBackendGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthBackendGroup(name, id, state, options);
        }
    }

    public sealed class AuthBackendGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the group within the Okta
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// The path where the Okta auth backend is mounted
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("policies")]
        private InputList<string>? _policies;

        /// <summary>
        /// Vault policies to associate with this group
        /// </summary>
        public InputList<string> Policies
        {
            get => _policies ?? (_policies = new InputList<string>());
            set => _policies = value;
        }

        public AuthBackendGroupArgs()
        {
        }
    }

    public sealed class AuthBackendGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the group within the Okta
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// The path where the Okta auth backend is mounted
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("policies")]
        private InputList<string>? _policies;

        /// <summary>
        /// Vault policies to associate with this group
        /// </summary>
        public InputList<string> Policies
        {
            get => _policies ?? (_policies = new InputList<string>());
            set => _policies = value;
        }

        public AuthBackendGroupState()
        {
        }
    }
}
