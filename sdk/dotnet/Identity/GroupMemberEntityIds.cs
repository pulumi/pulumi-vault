// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Identity
{
    /// <summary>
    /// Manages member entities for an Identity Group for Vault. The [Identity secrets engine](https://www.vaultproject.io/docs/secrets/identity/index.html) is the identity management solution for Vault.
    /// 
    /// ## Example Usage
    /// 
    /// ### Exclusive Member Entities
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vault = Pulumi.Vault;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @internal = new Vault.Identity.Group("internal", new()
    ///     {
    ///         Type = "internal",
    ///         ExternalMemberEntityIds = true,
    ///         Metadata = 
    ///         {
    ///             { "version", "2" },
    ///         },
    ///     });
    /// 
    ///     var user = new Vault.Identity.Entity("user");
    /// 
    ///     var members = new Vault.Identity.GroupMemberEntityIds("members", new()
    ///     {
    ///         Exclusive = true,
    ///         MemberEntityIds = new[]
    ///         {
    ///             user.Id,
    ///         },
    ///         GroupId = @internal.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Non-exclusive Member Entities
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vault = Pulumi.Vault;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @internal = new Vault.Identity.Group("internal", new()
    ///     {
    ///         Type = "internal",
    ///         ExternalMemberEntityIds = true,
    ///         Metadata = 
    ///         {
    ///             { "version", "2" },
    ///         },
    ///     });
    /// 
    ///     var testUser = new Vault.Identity.Entity("testUser");
    /// 
    ///     var secondTestUser = new Vault.Identity.Entity("secondTestUser");
    /// 
    ///     var devUser = new Vault.Identity.Entity("devUser");
    /// 
    ///     var test = new Vault.Identity.GroupMemberEntityIds("test", new()
    ///     {
    ///         MemberEntityIds = new[]
    ///         {
    ///             testUser.Id,
    ///             secondTestUser.Id,
    ///         },
    ///         Exclusive = false,
    ///         GroupId = @internal.Id,
    ///     });
    /// 
    ///     var others = new Vault.Identity.GroupMemberEntityIds("others", new()
    ///     {
    ///         MemberEntityIds = new[]
    ///         {
    ///             devUser.Id,
    ///         },
    ///         Exclusive = false,
    ///         GroupId = @internal.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [VaultResourceType("vault:identity/groupMemberEntityIds:GroupMemberEntityIds")]
    public partial class GroupMemberEntityIds : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defaults to `true`.
        /// 
        /// If `true`, this resource will take exclusive control of the member entities that belong to the group and will set it equal to what is specified in the resource.
        /// 
        /// If set to `false`, this resource will simply ensure that the member entities specified in the resource are present in the group. When destroying the resource, the resource will ensure that the member entities specified in the resource are removed.
        /// </summary>
        [Output("exclusive")]
        public Output<bool?> Exclusive { get; private set; } = null!;

        /// <summary>
        /// Group ID to assign member entities to.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the group that are assigned the member entities.  
        /// *Deprecated: The value for group_name may not always be accurate*
        /// *use* `data.vault_identity_group.*.group_name`, *or* `vault_identity_group.*.group_name` *instead.*
        /// </summary>
        [Output("groupName")]
        public Output<string> GroupName { get; private set; } = null!;

        /// <summary>
        /// List of member entities that belong to the group
        /// </summary>
        [Output("memberEntityIds")]
        public Output<ImmutableArray<string>> MemberEntityIds { get; private set; } = null!;

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;


        /// <summary>
        /// Create a GroupMemberEntityIds resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupMemberEntityIds(string name, GroupMemberEntityIdsArgs args, CustomResourceOptions? options = null)
            : base("vault:identity/groupMemberEntityIds:GroupMemberEntityIds", name, args ?? new GroupMemberEntityIdsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupMemberEntityIds(string name, Input<string> id, GroupMemberEntityIdsState? state = null, CustomResourceOptions? options = null)
            : base("vault:identity/groupMemberEntityIds:GroupMemberEntityIds", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupMemberEntityIds resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupMemberEntityIds Get(string name, Input<string> id, GroupMemberEntityIdsState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupMemberEntityIds(name, id, state, options);
        }
    }

    public sealed class GroupMemberEntityIdsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `true`.
        /// 
        /// If `true`, this resource will take exclusive control of the member entities that belong to the group and will set it equal to what is specified in the resource.
        /// 
        /// If set to `false`, this resource will simply ensure that the member entities specified in the resource are present in the group. When destroying the resource, the resource will ensure that the member entities specified in the resource are removed.
        /// </summary>
        [Input("exclusive")]
        public Input<bool>? Exclusive { get; set; }

        /// <summary>
        /// Group ID to assign member entities to.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        [Input("memberEntityIds")]
        private InputList<string>? _memberEntityIds;

        /// <summary>
        /// List of member entities that belong to the group
        /// </summary>
        public InputList<string> MemberEntityIds
        {
            get => _memberEntityIds ?? (_memberEntityIds = new InputList<string>());
            set => _memberEntityIds = value;
        }

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public GroupMemberEntityIdsArgs()
        {
        }
        public static new GroupMemberEntityIdsArgs Empty => new GroupMemberEntityIdsArgs();
    }

    public sealed class GroupMemberEntityIdsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `true`.
        /// 
        /// If `true`, this resource will take exclusive control of the member entities that belong to the group and will set it equal to what is specified in the resource.
        /// 
        /// If set to `false`, this resource will simply ensure that the member entities specified in the resource are present in the group. When destroying the resource, the resource will ensure that the member entities specified in the resource are removed.
        /// </summary>
        [Input("exclusive")]
        public Input<bool>? Exclusive { get; set; }

        /// <summary>
        /// Group ID to assign member entities to.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The name of the group that are assigned the member entities.  
        /// *Deprecated: The value for group_name may not always be accurate*
        /// *use* `data.vault_identity_group.*.group_name`, *or* `vault_identity_group.*.group_name` *instead.*
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("memberEntityIds")]
        private InputList<string>? _memberEntityIds;

        /// <summary>
        /// List of member entities that belong to the group
        /// </summary>
        public InputList<string> MemberEntityIds
        {
            get => _memberEntityIds ?? (_memberEntityIds = new InputList<string>());
            set => _memberEntityIds = value;
        }

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public GroupMemberEntityIdsState()
        {
        }
        public static new GroupMemberEntityIdsState Empty => new GroupMemberEntityIdsState();
    }
}
