// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Identity
{
    /// <summary>
    /// Creates an Identity Group Alias for Vault. The [Identity secrets engine](https://www.vaultproject.io/docs/secrets/identity/index.html) is the identity management solution for Vault.
    /// 
    /// Group aliases allows entity membership in external groups to be managed semi-automatically. External group serves as a mapping to a group that is outside of the identity store. External groups can have one (and only one) alias. This alias should map to a notion of group that is outside of the identity store. For example, groups in LDAP, and teams in GitHub. A username in LDAP, belonging to a group in LDAP, can get its entity ID added as a member of a group in Vault automatically during logins and token renewals. This works only if the group in Vault is an external group and has an alias that maps to the group in LDAP. If the user is removed from the group in LDAP, that change gets reflected in Vault only upon the subsequent login or renewal operation.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vault = Pulumi.Vault;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @group = new Vault.Identity.Group("group", new()
    ///     {
    ///         Type = "external",
    ///         Policies = new[]
    ///         {
    ///             "test",
    ///         },
    ///     });
    /// 
    ///     var github = new Vault.AuthBackend("github", new()
    ///     {
    ///         Type = "github",
    ///         Path = "github",
    ///     });
    /// 
    ///     var group_alias = new Vault.Identity.GroupAlias("group-alias", new()
    ///     {
    ///         Name = "Github_Team_Slug",
    ///         MountAccessor = github.Accessor,
    ///         CanonicalId = @group.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// The group alias can be imported with the group alias `id`, for example:
    /// 
    /// ```sh
    /// $ pulumi import vault:identity/groupAlias:GroupAlias group-alias id
    /// ```
    /// 
    /// Group aliases can also be imported using the UUID of the alias record, e.g.
    /// 
    /// ```sh
    /// $ pulumi import vault:identity/groupAlias:GroupAlias alias_name 63104e20-88e4-11eb-8d04-cf7ac9d60157
    /// ```
    /// </summary>
    [VaultResourceType("vault:identity/groupAlias:GroupAlias")]
    public partial class GroupAlias : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the group to which this is an alias.
        /// </summary>
        [Output("canonicalId")]
        public Output<string> CanonicalId { get; private set; } = null!;

        /// <summary>
        /// Mount accessor of the authentication backend to which this alias belongs to.
        /// </summary>
        [Output("mountAccessor")]
        public Output<string> MountAccessor { get; private set; } = null!;

        /// <summary>
        /// Name of the group alias to create.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;


        /// <summary>
        /// Create a GroupAlias resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupAlias(string name, GroupAliasArgs args, CustomResourceOptions? options = null)
            : base("vault:identity/groupAlias:GroupAlias", name, args ?? new GroupAliasArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupAlias(string name, Input<string> id, GroupAliasState? state = null, CustomResourceOptions? options = null)
            : base("vault:identity/groupAlias:GroupAlias", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupAlias resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupAlias Get(string name, Input<string> id, GroupAliasState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupAlias(name, id, state, options);
        }
    }

    public sealed class GroupAliasArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the group to which this is an alias.
        /// </summary>
        [Input("canonicalId", required: true)]
        public Input<string> CanonicalId { get; set; } = null!;

        /// <summary>
        /// Mount accessor of the authentication backend to which this alias belongs to.
        /// </summary>
        [Input("mountAccessor", required: true)]
        public Input<string> MountAccessor { get; set; } = null!;

        /// <summary>
        /// Name of the group alias to create.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public GroupAliasArgs()
        {
        }
        public static new GroupAliasArgs Empty => new GroupAliasArgs();
    }

    public sealed class GroupAliasState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the group to which this is an alias.
        /// </summary>
        [Input("canonicalId")]
        public Input<string>? CanonicalId { get; set; }

        /// <summary>
        /// Mount accessor of the authentication backend to which this alias belongs to.
        /// </summary>
        [Input("mountAccessor")]
        public Input<string>? MountAccessor { get; set; }

        /// <summary>
        /// Name of the group alias to create.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public GroupAliasState()
        {
        }
        public static new GroupAliasState Empty => new GroupAliasState();
    }
}
