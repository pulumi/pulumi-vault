// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault
{
    public static class GetAuthBackend
    {
        public static Task<GetAuthBackendResult> InvokeAsync(GetAuthBackendArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAuthBackendResult>("vault:index/getAuthBackend:getAuthBackend", args ?? new GetAuthBackendArgs(), options.WithVersion());
    }


    public sealed class GetAuthBackendArgs : Pulumi.InvokeArgs
    {
        [Input("path", required: true)]
        public string Path { get; set; } = null!;

        public GetAuthBackendArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAuthBackendResult
    {
        public readonly string Accessor;
        public readonly int DefaultLeaseTtlSeconds;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ListingVisibility;
        public readonly bool Local;
        public readonly int MaxLeaseTtlSeconds;
        public readonly string Path;
        public readonly string Type;

        [OutputConstructor]
        private GetAuthBackendResult(
            string accessor,

            int defaultLeaseTtlSeconds,

            string description,

            string id,

            string listingVisibility,

            bool local,

            int maxLeaseTtlSeconds,

            string path,

            string type)
        {
            Accessor = accessor;
            DefaultLeaseTtlSeconds = defaultLeaseTtlSeconds;
            Description = description;
            Id = id;
            ListingVisibility = listingVisibility;
            Local = local;
            MaxLeaseTtlSeconds = maxLeaseTtlSeconds;
            Path = path;
            Type = type;
        }
    }
}
