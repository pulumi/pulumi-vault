// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Saml
{
    /// <summary>
    /// Manages an SAML auth backend role in a Vault server. See the [Vault
    /// documentation](https://www.vaultproject.io/docs/auth/saml.html) for more
    /// information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vault = Pulumi.Vault;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Vault.Saml.AuthBackend("example", new()
    ///     {
    ///         Path = "saml",
    ///         IdpMetadataUrl = "https://company.okta.com/app/abc123eb9xnIfzlaf697/sso/saml/metadata",
    ///         EntityId = "https://my.vault/v1/auth/saml",
    ///         AcsUrls = new[]
    ///         {
    ///             "https://my.vault.primary/v1/auth/saml/callback",
    ///         },
    ///         DefaultRole = "default-role",
    ///     });
    /// 
    ///     var exampleAuthBackendRole = new Vault.Saml.AuthBackendRole("example", new()
    ///     {
    ///         Path = example.Path,
    ///         Name = "my-role",
    ///         GroupsAttribute = "groups",
    ///         BoundAttributes = 
    ///         {
    ///             { "group", "admin" },
    ///         },
    ///         BoundSubjects = new[]
    ///         {
    ///             "*example.com",
    ///         },
    ///         TokenPolicies = new[]
    ///         {
    ///             "writer",
    ///         },
    ///         TokenTtl = 86400,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SAML authentication backend roles can be imported using the `path`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import vault:saml/authBackendRole:AuthBackendRole example auth/saml/role/my-role
    /// ```
    /// </summary>
    [VaultResourceType("vault:saml/authBackendRole:AuthBackendRole")]
    public partial class AuthBackendRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Mapping of attribute names to values that are expected to
        /// exist in the SAML assertion.
        /// </summary>
        [Output("boundAttributes")]
        public Output<ImmutableDictionary<string, string>?> BoundAttributes { get; private set; } = null!;

        /// <summary>
        /// The type of matching assertion to perform on
        /// `BoundAttributesType`.
        /// </summary>
        [Output("boundAttributesType")]
        public Output<string> BoundAttributesType { get; private set; } = null!;

        /// <summary>
        /// List of subjects being asserted for SAML authentication.
        /// </summary>
        [Output("boundSubjects")]
        public Output<ImmutableArray<string>> BoundSubjects { get; private set; } = null!;

        /// <summary>
        /// The type of matching assertion to perform on `BoundSubjects`.
        /// </summary>
        [Output("boundSubjectsType")]
        public Output<string> BoundSubjectsType { get; private set; } = null!;

        /// <summary>
        /// The attribute to use to identify the set of groups to which the
        /// user belongs.
        /// </summary>
        [Output("groupsAttribute")]
        public Output<string?> GroupsAttribute { get; private set; } = null!;

        /// <summary>
        /// Unique name of the role.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `Namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;

        /// <summary>
        /// Path where the auth backend is mounted.
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// Specifies the blocks of IP addresses which are allowed to use the generated token
        /// </summary>
        [Output("tokenBoundCidrs")]
        public Output<ImmutableArray<string>> TokenBoundCidrs { get; private set; } = null!;

        /// <summary>
        /// Generated Token's Explicit Maximum TTL in seconds
        /// </summary>
        [Output("tokenExplicitMaxTtl")]
        public Output<int?> TokenExplicitMaxTtl { get; private set; } = null!;

        /// <summary>
        /// The maximum lifetime of the generated token
        /// </summary>
        [Output("tokenMaxTtl")]
        public Output<int?> TokenMaxTtl { get; private set; } = null!;

        /// <summary>
        /// If true, the 'default' policy will not automatically be added to generated tokens
        /// </summary>
        [Output("tokenNoDefaultPolicy")]
        public Output<bool?> TokenNoDefaultPolicy { get; private set; } = null!;

        /// <summary>
        /// The maximum number of times a token may be used, a value of zero means unlimited
        /// </summary>
        [Output("tokenNumUses")]
        public Output<int?> TokenNumUses { get; private set; } = null!;

        /// <summary>
        /// Generated Token's Period
        /// </summary>
        [Output("tokenPeriod")]
        public Output<int?> TokenPeriod { get; private set; } = null!;

        /// <summary>
        /// Generated Token's Policies
        /// </summary>
        [Output("tokenPolicies")]
        public Output<ImmutableArray<string>> TokenPolicies { get; private set; } = null!;

        /// <summary>
        /// The initial ttl of the token to generate in seconds
        /// </summary>
        [Output("tokenTtl")]
        public Output<int?> TokenTtl { get; private set; } = null!;

        /// <summary>
        /// The type of token to generate, service or batch
        /// </summary>
        [Output("tokenType")]
        public Output<string?> TokenType { get; private set; } = null!;


        /// <summary>
        /// Create a AuthBackendRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthBackendRole(string name, AuthBackendRoleArgs args, CustomResourceOptions? options = null)
            : base("vault:saml/authBackendRole:AuthBackendRole", name, args ?? new AuthBackendRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthBackendRole(string name, Input<string> id, AuthBackendRoleState? state = null, CustomResourceOptions? options = null)
            : base("vault:saml/authBackendRole:AuthBackendRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthBackendRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthBackendRole Get(string name, Input<string> id, AuthBackendRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthBackendRole(name, id, state, options);
        }
    }

    public sealed class AuthBackendRoleArgs : global::Pulumi.ResourceArgs
    {
        [Input("boundAttributes")]
        private InputMap<string>? _boundAttributes;

        /// <summary>
        /// Mapping of attribute names to values that are expected to
        /// exist in the SAML assertion.
        /// </summary>
        public InputMap<string> BoundAttributes
        {
            get => _boundAttributes ?? (_boundAttributes = new InputMap<string>());
            set => _boundAttributes = value;
        }

        /// <summary>
        /// The type of matching assertion to perform on
        /// `BoundAttributesType`.
        /// </summary>
        [Input("boundAttributesType")]
        public Input<string>? BoundAttributesType { get; set; }

        [Input("boundSubjects")]
        private InputList<string>? _boundSubjects;

        /// <summary>
        /// List of subjects being asserted for SAML authentication.
        /// </summary>
        public InputList<string> BoundSubjects
        {
            get => _boundSubjects ?? (_boundSubjects = new InputList<string>());
            set => _boundSubjects = value;
        }

        /// <summary>
        /// The type of matching assertion to perform on `BoundSubjects`.
        /// </summary>
        [Input("boundSubjectsType")]
        public Input<string>? BoundSubjectsType { get; set; }

        /// <summary>
        /// The attribute to use to identify the set of groups to which the
        /// user belongs.
        /// </summary>
        [Input("groupsAttribute")]
        public Input<string>? GroupsAttribute { get; set; }

        /// <summary>
        /// Unique name of the role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `Namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Path where the auth backend is mounted.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("tokenBoundCidrs")]
        private InputList<string>? _tokenBoundCidrs;

        /// <summary>
        /// Specifies the blocks of IP addresses which are allowed to use the generated token
        /// </summary>
        public InputList<string> TokenBoundCidrs
        {
            get => _tokenBoundCidrs ?? (_tokenBoundCidrs = new InputList<string>());
            set => _tokenBoundCidrs = value;
        }

        /// <summary>
        /// Generated Token's Explicit Maximum TTL in seconds
        /// </summary>
        [Input("tokenExplicitMaxTtl")]
        public Input<int>? TokenExplicitMaxTtl { get; set; }

        /// <summary>
        /// The maximum lifetime of the generated token
        /// </summary>
        [Input("tokenMaxTtl")]
        public Input<int>? TokenMaxTtl { get; set; }

        /// <summary>
        /// If true, the 'default' policy will not automatically be added to generated tokens
        /// </summary>
        [Input("tokenNoDefaultPolicy")]
        public Input<bool>? TokenNoDefaultPolicy { get; set; }

        /// <summary>
        /// The maximum number of times a token may be used, a value of zero means unlimited
        /// </summary>
        [Input("tokenNumUses")]
        public Input<int>? TokenNumUses { get; set; }

        /// <summary>
        /// Generated Token's Period
        /// </summary>
        [Input("tokenPeriod")]
        public Input<int>? TokenPeriod { get; set; }

        [Input("tokenPolicies")]
        private InputList<string>? _tokenPolicies;

        /// <summary>
        /// Generated Token's Policies
        /// </summary>
        public InputList<string> TokenPolicies
        {
            get => _tokenPolicies ?? (_tokenPolicies = new InputList<string>());
            set => _tokenPolicies = value;
        }

        /// <summary>
        /// The initial ttl of the token to generate in seconds
        /// </summary>
        [Input("tokenTtl")]
        public Input<int>? TokenTtl { get; set; }

        /// <summary>
        /// The type of token to generate, service or batch
        /// </summary>
        [Input("tokenType")]
        public Input<string>? TokenType { get; set; }

        public AuthBackendRoleArgs()
        {
        }
        public static new AuthBackendRoleArgs Empty => new AuthBackendRoleArgs();
    }

    public sealed class AuthBackendRoleState : global::Pulumi.ResourceArgs
    {
        [Input("boundAttributes")]
        private InputMap<string>? _boundAttributes;

        /// <summary>
        /// Mapping of attribute names to values that are expected to
        /// exist in the SAML assertion.
        /// </summary>
        public InputMap<string> BoundAttributes
        {
            get => _boundAttributes ?? (_boundAttributes = new InputMap<string>());
            set => _boundAttributes = value;
        }

        /// <summary>
        /// The type of matching assertion to perform on
        /// `BoundAttributesType`.
        /// </summary>
        [Input("boundAttributesType")]
        public Input<string>? BoundAttributesType { get; set; }

        [Input("boundSubjects")]
        private InputList<string>? _boundSubjects;

        /// <summary>
        /// List of subjects being asserted for SAML authentication.
        /// </summary>
        public InputList<string> BoundSubjects
        {
            get => _boundSubjects ?? (_boundSubjects = new InputList<string>());
            set => _boundSubjects = value;
        }

        /// <summary>
        /// The type of matching assertion to perform on `BoundSubjects`.
        /// </summary>
        [Input("boundSubjectsType")]
        public Input<string>? BoundSubjectsType { get; set; }

        /// <summary>
        /// The attribute to use to identify the set of groups to which the
        /// user belongs.
        /// </summary>
        [Input("groupsAttribute")]
        public Input<string>? GroupsAttribute { get; set; }

        /// <summary>
        /// Unique name of the role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace to provision the resource in.
        /// The value should not contain leading or trailing forward slashes.
        /// The `Namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Path where the auth backend is mounted.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("tokenBoundCidrs")]
        private InputList<string>? _tokenBoundCidrs;

        /// <summary>
        /// Specifies the blocks of IP addresses which are allowed to use the generated token
        /// </summary>
        public InputList<string> TokenBoundCidrs
        {
            get => _tokenBoundCidrs ?? (_tokenBoundCidrs = new InputList<string>());
            set => _tokenBoundCidrs = value;
        }

        /// <summary>
        /// Generated Token's Explicit Maximum TTL in seconds
        /// </summary>
        [Input("tokenExplicitMaxTtl")]
        public Input<int>? TokenExplicitMaxTtl { get; set; }

        /// <summary>
        /// The maximum lifetime of the generated token
        /// </summary>
        [Input("tokenMaxTtl")]
        public Input<int>? TokenMaxTtl { get; set; }

        /// <summary>
        /// If true, the 'default' policy will not automatically be added to generated tokens
        /// </summary>
        [Input("tokenNoDefaultPolicy")]
        public Input<bool>? TokenNoDefaultPolicy { get; set; }

        /// <summary>
        /// The maximum number of times a token may be used, a value of zero means unlimited
        /// </summary>
        [Input("tokenNumUses")]
        public Input<int>? TokenNumUses { get; set; }

        /// <summary>
        /// Generated Token's Period
        /// </summary>
        [Input("tokenPeriod")]
        public Input<int>? TokenPeriod { get; set; }

        [Input("tokenPolicies")]
        private InputList<string>? _tokenPolicies;

        /// <summary>
        /// Generated Token's Policies
        /// </summary>
        public InputList<string> TokenPolicies
        {
            get => _tokenPolicies ?? (_tokenPolicies = new InputList<string>());
            set => _tokenPolicies = value;
        }

        /// <summary>
        /// The initial ttl of the token to generate in seconds
        /// </summary>
        [Input("tokenTtl")]
        public Input<int>? TokenTtl { get; set; }

        /// <summary>
        /// The type of token to generate, service or batch
        /// </summary>
        [Input("tokenType")]
        public Input<string>? TokenType { get; set; }

        public AuthBackendRoleState()
        {
        }
        public static new AuthBackendRoleState Empty => new AuthBackendRoleState();
    }
}
