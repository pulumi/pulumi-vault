// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Azure
{
    public static class GetAccessCredentials
    {
        public static Task<GetAccessCredentialsResult> InvokeAsync(GetAccessCredentialsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccessCredentialsResult>("vault:azure/getAccessCredentials:getAccessCredentials", args ?? new GetAccessCredentialsArgs(), options.WithVersion());
    }


    public sealed class GetAccessCredentialsArgs : Pulumi.InvokeArgs
    {
        [Input("backend", required: true)]
        public string Backend { get; set; } = null!;

        [Input("maxCredValidationSeconds")]
        public int? MaxCredValidationSeconds { get; set; }

        [Input("numSecondsBetweenTests")]
        public int? NumSecondsBetweenTests { get; set; }

        [Input("numSequentialSuccesses")]
        public int? NumSequentialSuccesses { get; set; }

        [Input("role", required: true)]
        public string Role { get; set; } = null!;

        [Input("validateCreds")]
        public bool? ValidateCreds { get; set; }

        public GetAccessCredentialsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAccessCredentialsResult
    {
        public readonly string Backend;
        public readonly string ClientId;
        public readonly string ClientSecret;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int LeaseDuration;
        public readonly string LeaseId;
        public readonly bool LeaseRenewable;
        public readonly string LeaseStartTime;
        public readonly int? MaxCredValidationSeconds;
        public readonly int? NumSecondsBetweenTests;
        public readonly int? NumSequentialSuccesses;
        public readonly string Role;
        public readonly bool? ValidateCreds;

        [OutputConstructor]
        private GetAccessCredentialsResult(
            string backend,

            string clientId,

            string clientSecret,

            string id,

            int leaseDuration,

            string leaseId,

            bool leaseRenewable,

            string leaseStartTime,

            int? maxCredValidationSeconds,

            int? numSecondsBetweenTests,

            int? numSequentialSuccesses,

            string role,

            bool? validateCreds)
        {
            Backend = backend;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Id = id;
            LeaseDuration = leaseDuration;
            LeaseId = leaseId;
            LeaseRenewable = leaseRenewable;
            LeaseStartTime = leaseStartTime;
            MaxCredValidationSeconds = maxCredValidationSeconds;
            NumSecondsBetweenTests = numSecondsBetweenTests;
            NumSequentialSuccesses = numSequentialSuccesses;
            Role = role;
            ValidateCreds = validateCreds;
        }
    }
}
