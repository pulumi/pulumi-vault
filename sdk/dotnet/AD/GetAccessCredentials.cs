// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.AD
{
    public static class GetAccessCredentials
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetAccessCredentialsResult> InvokeAsync(GetAccessCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessCredentialsResult>("vault:ad/getAccessCredentials:getAccessCredentials", args ?? new GetAccessCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetAccessCredentialsResult> Invoke(GetAccessCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessCredentialsResult>("vault:ad/getAccessCredentials:getAccessCredentials", args ?? new GetAccessCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessCredentialsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The path to the AD secret backend to
        /// read credentials from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend", required: true)]
        public string Backend { get; set; } = null!;

        /// <summary>
        /// The namespace of the target resource.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        /// <summary>
        /// The name of the AD secret backend role to read
        /// credentials from, with no leading or trailing `/`s.
        /// </summary>
        [Input("role", required: true)]
        public string Role { get; set; } = null!;

        public GetAccessCredentialsArgs()
        {
        }
        public static new GetAccessCredentialsArgs Empty => new GetAccessCredentialsArgs();
    }

    public sealed class GetAccessCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The path to the AD secret backend to
        /// read credentials from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend", required: true)]
        public Input<string> Backend { get; set; } = null!;

        /// <summary>
        /// The namespace of the target resource.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The name of the AD secret backend role to read
        /// credentials from, with no leading or trailing `/`s.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        public GetAccessCredentialsInvokeArgs()
        {
        }
        public static new GetAccessCredentialsInvokeArgs Empty => new GetAccessCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessCredentialsResult
    {
        public readonly string Backend;
        /// <summary>
        /// The current set password on the Active Directory service account.
        /// </summary>
        public readonly string CurrentPassword;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current set password on the Active Directory service account, provided because AD is eventually consistent.
        /// </summary>
        public readonly string LastPassword;
        public readonly string? Namespace;
        public readonly string Role;
        /// <summary>
        /// The Active Directory service account username.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetAccessCredentialsResult(
            string backend,

            string currentPassword,

            string id,

            string lastPassword,

            string? @namespace,

            string role,

            string username)
        {
            Backend = backend;
            CurrentPassword = currentPassword;
            Id = id;
            LastPassword = lastPassword;
            Namespace = @namespace;
            Role = role;
            Username = username;
        }
    }
}
