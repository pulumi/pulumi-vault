// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.PkiSecret
{
    /// <summary>
    /// Allows setting the CMPv2 configuration on a PKI Secret Backend
    /// 
    /// ## Import
    /// 
    /// The PKI config cluster can be imported using the resource's `id`.
    /// In the case of the example above the `id` would be `pki-root/config/cmpv2`,
    /// where the `pki-root` component is the resource's `backend`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import vault:pkiSecret/backendConfigCmpv2:BackendConfigCmpv2 example pki-root/config/cmpv2
    /// ```
    /// </summary>
    [VaultResourceType("vault:pkiSecret/backendConfigCmpv2:BackendConfigCmpv2")]
    public partial class BackendConfigCmpv2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
        /// </summary>
        [Output("auditFields")]
        public Output<ImmutableArray<string>> AuditFields { get; private set; } = null!;

        /// <summary>
        /// Lists the mount accessors CMPv2 should delegate authentication requests towards (see below for nested schema).
        /// </summary>
        [Output("authenticators")]
        public Output<Outputs.BackendConfigCmpv2Authenticators> Authenticators { get; private set; } = null!;

        /// <summary>
        /// The path to the PKI secret backend to
        /// read the CMPv2 configuration from, with no leading or trailing `/`s.
        /// </summary>
        [Output("backend")]
        public Output<string> Backend { get; private set; } = null!;

        /// <summary>
        /// Specifies the behavior for requests using the non-role-qualified CMPv2 requests. Can be sign-verbatim or a role given by role:&lt;role_name&gt;.
        /// </summary>
        [Output("defaultPathPolicy")]
        public Output<string?> DefaultPathPolicy { get; private set; } = null!;

        /// <summary>
        /// A comma-separated list of validations not to perform on CMPv2 messages.
        /// 
        /// &lt;a id="nestedatt--authenticators"&gt;&lt;/a&gt;
        /// </summary>
        [Output("disabledValidations")]
        public Output<ImmutableArray<string>> DisabledValidations { get; private set; } = null!;

        /// <summary>
        /// If set, parse out fields from the provided CSR making them available for Sentinel policies.
        /// </summary>
        [Output("enableSentinelParsing")]
        public Output<bool?> EnableSentinelParsing { get; private set; } = null!;

        /// <summary>
        /// Specifies whether CMPv2 is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// A read-only timestamp representing the last time the configuration was updated.
        /// </summary>
        [Output("lastUpdated")]
        public Output<string> LastUpdated { get; private set; } = null!;

        /// <summary>
        /// The namespace of the target resource.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;


        /// <summary>
        /// Create a BackendConfigCmpv2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackendConfigCmpv2(string name, BackendConfigCmpv2Args args, CustomResourceOptions? options = null)
            : base("vault:pkiSecret/backendConfigCmpv2:BackendConfigCmpv2", name, args ?? new BackendConfigCmpv2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BackendConfigCmpv2(string name, Input<string> id, BackendConfigCmpv2State? state = null, CustomResourceOptions? options = null)
            : base("vault:pkiSecret/backendConfigCmpv2:BackendConfigCmpv2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackendConfigCmpv2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackendConfigCmpv2 Get(string name, Input<string> id, BackendConfigCmpv2State? state = null, CustomResourceOptions? options = null)
        {
            return new BackendConfigCmpv2(name, id, state, options);
        }
    }

    public sealed class BackendConfigCmpv2Args : global::Pulumi.ResourceArgs
    {
        [Input("auditFields")]
        private InputList<string>? _auditFields;

        /// <summary>
        /// Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
        /// </summary>
        public InputList<string> AuditFields
        {
            get => _auditFields ?? (_auditFields = new InputList<string>());
            set => _auditFields = value;
        }

        /// <summary>
        /// Lists the mount accessors CMPv2 should delegate authentication requests towards (see below for nested schema).
        /// </summary>
        [Input("authenticators")]
        public Input<Inputs.BackendConfigCmpv2AuthenticatorsArgs>? Authenticators { get; set; }

        /// <summary>
        /// The path to the PKI secret backend to
        /// read the CMPv2 configuration from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend", required: true)]
        public Input<string> Backend { get; set; } = null!;

        /// <summary>
        /// Specifies the behavior for requests using the non-role-qualified CMPv2 requests. Can be sign-verbatim or a role given by role:&lt;role_name&gt;.
        /// </summary>
        [Input("defaultPathPolicy")]
        public Input<string>? DefaultPathPolicy { get; set; }

        [Input("disabledValidations")]
        private InputList<string>? _disabledValidations;

        /// <summary>
        /// A comma-separated list of validations not to perform on CMPv2 messages.
        /// 
        /// &lt;a id="nestedatt--authenticators"&gt;&lt;/a&gt;
        /// </summary>
        public InputList<string> DisabledValidations
        {
            get => _disabledValidations ?? (_disabledValidations = new InputList<string>());
            set => _disabledValidations = value;
        }

        /// <summary>
        /// If set, parse out fields from the provided CSR making them available for Sentinel policies.
        /// </summary>
        [Input("enableSentinelParsing")]
        public Input<bool>? EnableSentinelParsing { get; set; }

        /// <summary>
        /// Specifies whether CMPv2 is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The namespace of the target resource.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public BackendConfigCmpv2Args()
        {
        }
        public static new BackendConfigCmpv2Args Empty => new BackendConfigCmpv2Args();
    }

    public sealed class BackendConfigCmpv2State : global::Pulumi.ResourceArgs
    {
        [Input("auditFields")]
        private InputList<string>? _auditFields;

        /// <summary>
        /// Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
        /// </summary>
        public InputList<string> AuditFields
        {
            get => _auditFields ?? (_auditFields = new InputList<string>());
            set => _auditFields = value;
        }

        /// <summary>
        /// Lists the mount accessors CMPv2 should delegate authentication requests towards (see below for nested schema).
        /// </summary>
        [Input("authenticators")]
        public Input<Inputs.BackendConfigCmpv2AuthenticatorsGetArgs>? Authenticators { get; set; }

        /// <summary>
        /// The path to the PKI secret backend to
        /// read the CMPv2 configuration from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend")]
        public Input<string>? Backend { get; set; }

        /// <summary>
        /// Specifies the behavior for requests using the non-role-qualified CMPv2 requests. Can be sign-verbatim or a role given by role:&lt;role_name&gt;.
        /// </summary>
        [Input("defaultPathPolicy")]
        public Input<string>? DefaultPathPolicy { get; set; }

        [Input("disabledValidations")]
        private InputList<string>? _disabledValidations;

        /// <summary>
        /// A comma-separated list of validations not to perform on CMPv2 messages.
        /// 
        /// &lt;a id="nestedatt--authenticators"&gt;&lt;/a&gt;
        /// </summary>
        public InputList<string> DisabledValidations
        {
            get => _disabledValidations ?? (_disabledValidations = new InputList<string>());
            set => _disabledValidations = value;
        }

        /// <summary>
        /// If set, parse out fields from the provided CSR making them available for Sentinel policies.
        /// </summary>
        [Input("enableSentinelParsing")]
        public Input<bool>? EnableSentinelParsing { get; set; }

        /// <summary>
        /// Specifies whether CMPv2 is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// A read-only timestamp representing the last time the configuration was updated.
        /// </summary>
        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        /// <summary>
        /// The namespace of the target resource.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public BackendConfigCmpv2State()
        {
        }
        public static new BackendConfigCmpv2State Empty => new BackendConfigCmpv2State();
    }
}
