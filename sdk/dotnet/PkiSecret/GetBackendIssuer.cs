// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.PkiSecret
{
    public static class GetBackendIssuer
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetBackendIssuerResult> InvokeAsync(GetBackendIssuerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackendIssuerResult>("vault:pkiSecret/getBackendIssuer:getBackendIssuer", args ?? new GetBackendIssuerArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetBackendIssuerResult> Invoke(GetBackendIssuerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackendIssuerResult>("vault:pkiSecret/getBackendIssuer:getBackendIssuer", args ?? new GetBackendIssuerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackendIssuerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The path to the PKI secret backend to
        /// read the issuer from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend", required: true)]
        public string Backend { get; set; } = null!;

        /// <summary>
        /// Reference to an existing issuer.
        /// </summary>
        [Input("issuerRef", required: true)]
        public string IssuerRef { get; set; } = null!;

        /// <summary>
        /// The namespace of the target resource.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        public GetBackendIssuerArgs()
        {
        }
        public static new GetBackendIssuerArgs Empty => new GetBackendIssuerArgs();
    }

    public sealed class GetBackendIssuerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The path to the PKI secret backend to
        /// read the issuer from, with no leading or trailing `/`s.
        /// </summary>
        [Input("backend", required: true)]
        public Input<string> Backend { get; set; } = null!;

        /// <summary>
        /// Reference to an existing issuer.
        /// </summary>
        [Input("issuerRef", required: true)]
        public Input<string> IssuerRef { get; set; } = null!;

        /// <summary>
        /// The namespace of the target resource.
        /// The value should not contain leading or trailing forward slashes.
        /// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
        /// *Available only for Vault Enterprise*.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public GetBackendIssuerInvokeArgs()
        {
        }
        public static new GetBackendIssuerInvokeArgs Empty => new GetBackendIssuerInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackendIssuerResult
    {
        public readonly string Backend;
        /// <summary>
        /// The CA chain as a list of format specific certificates.
        /// </summary>
        public readonly ImmutableArray<string> CaChains;
        /// <summary>
        /// Certificate associated with this issuer.
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the issuer.
        /// </summary>
        public readonly string IssuerId;
        /// <summary>
        /// Name of the issuer.
        /// </summary>
        public readonly string IssuerName;
        public readonly string IssuerRef;
        /// <summary>
        /// ID of the key used by the issuer.
        /// </summary>
        public readonly string KeyId;
        /// <summary>
        /// Behavior of a leaf's NotAfter field during issuance.
        /// </summary>
        public readonly string LeafNotAfterBehavior;
        /// <summary>
        /// Chain of issuer references to build this issuer's computed 
        /// CAChain field from, when non-empty.
        /// </summary>
        public readonly ImmutableArray<string> ManualChains;
        public readonly string? Namespace;
        /// <summary>
        /// Allowed usages for this issuer.
        /// </summary>
        public readonly string Usage;

        [OutputConstructor]
        private GetBackendIssuerResult(
            string backend,

            ImmutableArray<string> caChains,

            string certificate,

            string id,

            string issuerId,

            string issuerName,

            string issuerRef,

            string keyId,

            string leafNotAfterBehavior,

            ImmutableArray<string> manualChains,

            string? @namespace,

            string usage)
        {
            Backend = backend;
            CaChains = caChains;
            Certificate = certificate;
            Id = id;
            IssuerId = issuerId;
            IssuerName = issuerName;
            IssuerRef = issuerRef;
            KeyId = keyId;
            LeafNotAfterBehavior = leafNotAfterBehavior;
            ManualChains = manualChains;
            Namespace = @namespace;
            Usage = usage;
        }
    }
}
