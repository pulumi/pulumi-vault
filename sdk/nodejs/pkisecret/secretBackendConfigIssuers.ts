// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Allows setting the value of the default issuer. For more information, see the
 * [Vault documentation](https://developer.hashicorp.com/vault/api-docs/secret/pki#set-issuers-configuration)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const pki = new vault.Mount("pki", {
 *     path: "pki",
 *     type: "pki",
 *     defaultLeaseTtlSeconds: 3600,
 *     maxLeaseTtlSeconds: 86400,
 * });
 * const root = new vault.pkisecret.SecretBackendRootCert("root", {
 *     backend: pki.path,
 *     type: "internal",
 *     commonName: "test",
 *     ttl: "86400",
 * });
 * const example = new vault.pkisecret.SecretBackendIssuer("example", {
 *     backend: root.backend,
 *     issuerRef: root.issuerId,
 *     issuerName: "example-issuer",
 * });
 * const config = new vault.pkisecret.SecretBackendConfigIssuers("config", {
 *     backend: pki.path,
 *     "default": example.issuerId,
 *     defaultFollowsLatestIssuer: true,
 * });
 * ```
 *
 * ## Import
 *
 * PKI secret backend config issuers can be imported using the path, e.g.
 *
 * ```sh
 *  $ pulumi import vault:pkiSecret/secretBackendConfigIssuers:SecretBackendConfigIssuers config pki/config/issuers
 * ```
 */
export class SecretBackendConfigIssuers extends pulumi.CustomResource {
    /**
     * Get an existing SecretBackendConfigIssuers resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecretBackendConfigIssuersState, opts?: pulumi.CustomResourceOptions): SecretBackendConfigIssuers {
        return new SecretBackendConfigIssuers(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:pkiSecret/secretBackendConfigIssuers:SecretBackendConfigIssuers';

    /**
     * Returns true if the given object is an instance of SecretBackendConfigIssuers.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecretBackendConfigIssuers {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecretBackendConfigIssuers.__pulumiType;
    }

    /**
     * The path the PKI secret backend is mounted at, with no
     * leading or trailing `/`s.
     */
    public readonly backend!: pulumi.Output<string>;
    /**
     * Specifies the default issuer by ID.
     */
    public readonly default!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether a root creation
     * or an issuer import operation updates the default issuer to the newly added issuer.
     */
    public readonly defaultFollowsLatestIssuer!: pulumi.Output<boolean>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;

    /**
     * Create a SecretBackendConfigIssuers resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecretBackendConfigIssuersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecretBackendConfigIssuersArgs | SecretBackendConfigIssuersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecretBackendConfigIssuersState | undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["defaultFollowsLatestIssuer"] = state ? state.defaultFollowsLatestIssuer : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
        } else {
            const args = argsOrState as SecretBackendConfigIssuersArgs | undefined;
            if ((!args || args.backend === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backend'");
            }
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["defaultFollowsLatestIssuer"] = args ? args.defaultFollowsLatestIssuer : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecretBackendConfigIssuers.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecretBackendConfigIssuers resources.
 */
export interface SecretBackendConfigIssuersState {
    /**
     * The path the PKI secret backend is mounted at, with no
     * leading or trailing `/`s.
     */
    backend?: pulumi.Input<string>;
    /**
     * Specifies the default issuer by ID.
     */
    default?: pulumi.Input<string>;
    /**
     * Specifies whether a root creation
     * or an issuer import operation updates the default issuer to the newly added issuer.
     */
    defaultFollowsLatestIssuer?: pulumi.Input<boolean>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecretBackendConfigIssuers resource.
 */
export interface SecretBackendConfigIssuersArgs {
    /**
     * The path the PKI secret backend is mounted at, with no
     * leading or trailing `/`s.
     */
    backend: pulumi.Input<string>;
    /**
     * Specifies the default issuer by ID.
     */
    default?: pulumi.Input<string>;
    /**
     * Specifies whether a root creation
     * or an issuer import operation updates the default issuer to the newly added issuer.
     */
    defaultFollowsLatestIssuer?: pulumi.Input<boolean>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
}
