// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Transformation extends pulumi.CustomResource {
    /**
     * Get an existing Transformation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransformationState, opts?: pulumi.CustomResourceOptions): Transformation {
        return new Transformation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:transform/transformation:Transformation';

    /**
     * Returns true if the given object is an instance of Transformation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Transformation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Transformation.__pulumiType;
    }

    /**
     * The set of roles allowed to perform this transformation.
     */
    declare public readonly allowedRoles: pulumi.Output<string[] | undefined>;
    /**
     * If true, this transform can be deleted.
     * Otherwise, deletion is blocked while this value remains false. Default: `false`
     * *Only supported on vault-1.12+*
     */
    declare public readonly deletionAllowed: pulumi.Output<boolean | undefined>;
    /**
     * The character used to replace data when in masking mode
     */
    declare public readonly maskingCharacter: pulumi.Output<string | undefined>;
    /**
     * The name of the transformation.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    declare public readonly namespace: pulumi.Output<string | undefined>;
    /**
     * Path to where the back-end is mounted within Vault.
     */
    declare public readonly path: pulumi.Output<string>;
    /**
     * The name of the template to use.
     */
    declare public readonly template: pulumi.Output<string | undefined>;
    /**
     * Templates configured for transformation.
     */
    declare public readonly templates: pulumi.Output<string[]>;
    /**
     * The source of where the tweak value comes from. Only valid when in FPE mode.
     */
    declare public readonly tweakSource: pulumi.Output<string | undefined>;
    /**
     * The type of transformation to perform.
     */
    declare public readonly type: pulumi.Output<string | undefined>;

    /**
     * Create a Transformation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransformationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransformationArgs | TransformationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransformationState | undefined;
            resourceInputs["allowedRoles"] = state?.allowedRoles;
            resourceInputs["deletionAllowed"] = state?.deletionAllowed;
            resourceInputs["maskingCharacter"] = state?.maskingCharacter;
            resourceInputs["name"] = state?.name;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["path"] = state?.path;
            resourceInputs["template"] = state?.template;
            resourceInputs["templates"] = state?.templates;
            resourceInputs["tweakSource"] = state?.tweakSource;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as TransformationArgs | undefined;
            if (args?.path === undefined && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            resourceInputs["allowedRoles"] = args?.allowedRoles;
            resourceInputs["deletionAllowed"] = args?.deletionAllowed;
            resourceInputs["maskingCharacter"] = args?.maskingCharacter;
            resourceInputs["name"] = args?.name;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["path"] = args?.path;
            resourceInputs["template"] = args?.template;
            resourceInputs["templates"] = args?.templates;
            resourceInputs["tweakSource"] = args?.tweakSource;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Transformation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Transformation resources.
 */
export interface TransformationState {
    /**
     * The set of roles allowed to perform this transformation.
     */
    allowedRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, this transform can be deleted.
     * Otherwise, deletion is blocked while this value remains false. Default: `false`
     * *Only supported on vault-1.12+*
     */
    deletionAllowed?: pulumi.Input<boolean>;
    /**
     * The character used to replace data when in masking mode
     */
    maskingCharacter?: pulumi.Input<string>;
    /**
     * The name of the transformation.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path to where the back-end is mounted within Vault.
     */
    path?: pulumi.Input<string>;
    /**
     * The name of the template to use.
     */
    template?: pulumi.Input<string>;
    /**
     * Templates configured for transformation.
     */
    templates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The source of where the tweak value comes from. Only valid when in FPE mode.
     */
    tweakSource?: pulumi.Input<string>;
    /**
     * The type of transformation to perform.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Transformation resource.
 */
export interface TransformationArgs {
    /**
     * The set of roles allowed to perform this transformation.
     */
    allowedRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, this transform can be deleted.
     * Otherwise, deletion is blocked while this value remains false. Default: `false`
     * *Only supported on vault-1.12+*
     */
    deletionAllowed?: pulumi.Input<boolean>;
    /**
     * The character used to replace data when in masking mode
     */
    maskingCharacter?: pulumi.Input<string>;
    /**
     * The name of the transformation.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path to where the back-end is mounted within Vault.
     */
    path: pulumi.Input<string>;
    /**
     * The name of the template to use.
     */
    template?: pulumi.Input<string>;
    /**
     * Templates configured for transformation.
     */
    templates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The source of where the tweak value comes from. Only valid when in FPE mode.
     */
    tweakSource?: pulumi.Input<string>;
    /**
     * The type of transformation to perform.
     */
    type?: pulumi.Input<string>;
}
