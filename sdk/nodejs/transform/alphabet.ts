// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource supports the "/transform/alphabet/{name}" Vault endpoint.
 *
 * It queries an existing alphabet by the given name.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const mountTransform = new vault.Mount("mountTransform", {
 *     path: "transform",
 *     type: "transform",
 * });
 * const test = new vault.transform.Alphabet("test", {
 *     path: mountTransform.path,
 *     alphabet: "0123456789",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class Alphabet extends pulumi.CustomResource {
    /**
     * Get an existing Alphabet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlphabetState, opts?: pulumi.CustomResourceOptions): Alphabet {
        return new Alphabet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:transform/alphabet:Alphabet';

    /**
     * Returns true if the given object is an instance of Alphabet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Alphabet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Alphabet.__pulumiType;
    }

    /**
     * A string of characters that contains the alphabet set.
     */
    public readonly alphabet!: pulumi.Output<string | undefined>;
    /**
     * The name of the alphabet.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Path to where the back-end is mounted within Vault.
     */
    public readonly path!: pulumi.Output<string>;

    /**
     * Create a Alphabet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlphabetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlphabetArgs | AlphabetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlphabetState | undefined;
            resourceInputs["alphabet"] = state ? state.alphabet : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
        } else {
            const args = argsOrState as AlphabetArgs | undefined;
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            resourceInputs["alphabet"] = args ? args.alphabet : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Alphabet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Alphabet resources.
 */
export interface AlphabetState {
    /**
     * A string of characters that contains the alphabet set.
     */
    alphabet?: pulumi.Input<string>;
    /**
     * The name of the alphabet.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path to where the back-end is mounted within Vault.
     */
    path?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Alphabet resource.
 */
export interface AlphabetArgs {
    /**
     * A string of characters that contains the alphabet set.
     */
    alphabet?: pulumi.Input<string>;
    /**
     * The name of the alphabet.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path to where the back-end is mounted within Vault.
     */
    path: pulumi.Input<string>;
}
