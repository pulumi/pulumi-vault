// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * export = async () => {
 *     const main = await vault.getRaftAutopilotState({});
 *     return {
 *         "failure-tolerance": main.failureTolerance,
 *     };
 * }
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRaftAutopilotState(args?: GetRaftAutopilotStateArgs, opts?: pulumi.InvokeOptions): Promise<GetRaftAutopilotStateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getRaftAutopilotState:getRaftAutopilotState", {
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getRaftAutopilotState.
 */
export interface GetRaftAutopilotStateArgs {
    /**
     * The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: string;
}

/**
 * A collection of values returned by getRaftAutopilotState.
 */
export interface GetRaftAutopilotStateResult {
    /**
     * How many nodes could fail before the cluster becomes unhealthy.
     */
    readonly failureTolerance: number;
    /**
     * Cluster health status.
     */
    readonly healthy: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current leader of Vault.
     */
    readonly leader: string;
    readonly namespace?: string;
    /**
     * The cluster-level optimistic failure tolerance.
     */
    readonly optimisticFailureTolerance: number;
    /**
     * Additional output related to redundancy zones stored as a serialized map of strings.
     */
    readonly redundancyZones: {[key: string]: any};
    /**
     * Additional output related to redundancy zones.
     */
    readonly redundancyZonesJson: string;
    /**
     * Additionaly output related to servers in the cluster stored as a serialized map of strings.
     */
    readonly servers: {[key: string]: any};
    /**
     * Additionaly output related to servers in the cluster.
     */
    readonly serversJson: string;
    /**
     * Additional output related to upgrade information stored as a serialized map of strings.
     */
    readonly upgradeInfo: {[key: string]: any};
    /**
     * Additional output related to upgrade information.
     */
    readonly upgradeInfoJson: string;
    /**
     * The voters in the Vault cluster.
     */
    readonly voters: string[];
}
/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * export = async () => {
 *     const main = await vault.getRaftAutopilotState({});
 *     return {
 *         "failure-tolerance": main.failureTolerance,
 *     };
 * }
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRaftAutopilotStateOutput(args?: GetRaftAutopilotStateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRaftAutopilotStateResult> {
    return pulumi.output(args).apply((a: any) => getRaftAutopilotState(a, opts))
}

/**
 * A collection of arguments for invoking getRaftAutopilotState.
 */
export interface GetRaftAutopilotStateOutputArgs {
    /**
     * The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
}
