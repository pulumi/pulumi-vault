// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a role in an [AliCloud auth backend within Vault](https://www.vaultproject.io/docs/auth/alicloud.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const alicloud = new vault.AuthBackend("alicloud", {
 *     type: "alicloud",
 *     path: "alicloud",
 * });
 * const alicloudAuthBackendRole = new vault.alicloud.AuthBackendRole("alicloud", {
 *     backend: alicloud.path,
 *     role: "example",
 *     arn: "acs:ram:123456:tf:role/foobar",
 * });
 * ```
 *
 * ## Import
 *
 * Alicloud authentication roles can be imported using the `path`, e.g.
 *
 * ```sh
 * $ pulumi import vault:alicloud/authBackendRole:AuthBackendRole my_role auth/alicloud/role/my_role
 * ```
 */
export class AuthBackendRole extends pulumi.CustomResource {
    /**
     * Get an existing AuthBackendRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthBackendRoleState, opts?: pulumi.CustomResourceOptions): AuthBackendRole {
        return new AuthBackendRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:alicloud/authBackendRole:AuthBackendRole';

    /**
     * Returns true if the given object is an instance of AuthBackendRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthBackendRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthBackendRole.__pulumiType;
    }

    /**
     * The role's arn.
     */
    declare public readonly arn: pulumi.Output<string>;
    /**
     * Path to the mounted AliCloud auth backend.
     * Defaults to `alicloud`
     *
     * For more details on the usage of each argument consult the [Vault AliCloud API documentation](https://www.vaultproject.io/api-docs/auth/alicloud).
     */
    declare public readonly backend: pulumi.Output<string | undefined>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured namespace.
     * *Available only for Vault Enterprise*.
     */
    declare public readonly namespace: pulumi.Output<string | undefined>;
    /**
     * Name of the role. Must correspond with the name of
     * the role reflected in the arn.
     */
    declare public readonly role: pulumi.Output<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    declare public readonly tokenBoundCidrs: pulumi.Output<string[] | undefined>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    declare public readonly tokenExplicitMaxTtl: pulumi.Output<number | undefined>;
    /**
     * The maximum lifetime of the generated token
     */
    declare public readonly tokenMaxTtl: pulumi.Output<number | undefined>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    declare public readonly tokenNoDefaultPolicy: pulumi.Output<boolean | undefined>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    declare public readonly tokenNumUses: pulumi.Output<number | undefined>;
    /**
     * Generated Token's Period
     */
    declare public readonly tokenPeriod: pulumi.Output<number | undefined>;
    /**
     * Generated Token's Policies
     */
    declare public readonly tokenPolicies: pulumi.Output<string[] | undefined>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    declare public readonly tokenTtl: pulumi.Output<number | undefined>;
    /**
     * The type of token to generate, service or batch
     */
    declare public readonly tokenType: pulumi.Output<string | undefined>;

    /**
     * Create a AuthBackendRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthBackendRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthBackendRoleArgs | AuthBackendRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthBackendRoleState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["backend"] = state?.backend;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["role"] = state?.role;
            resourceInputs["tokenBoundCidrs"] = state?.tokenBoundCidrs;
            resourceInputs["tokenExplicitMaxTtl"] = state?.tokenExplicitMaxTtl;
            resourceInputs["tokenMaxTtl"] = state?.tokenMaxTtl;
            resourceInputs["tokenNoDefaultPolicy"] = state?.tokenNoDefaultPolicy;
            resourceInputs["tokenNumUses"] = state?.tokenNumUses;
            resourceInputs["tokenPeriod"] = state?.tokenPeriod;
            resourceInputs["tokenPolicies"] = state?.tokenPolicies;
            resourceInputs["tokenTtl"] = state?.tokenTtl;
            resourceInputs["tokenType"] = state?.tokenType;
        } else {
            const args = argsOrState as AuthBackendRoleArgs | undefined;
            if (args?.arn === undefined && !opts.urn) {
                throw new Error("Missing required property 'arn'");
            }
            if (args?.role === undefined && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["arn"] = args?.arn;
            resourceInputs["backend"] = args?.backend;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["role"] = args?.role;
            resourceInputs["tokenBoundCidrs"] = args?.tokenBoundCidrs;
            resourceInputs["tokenExplicitMaxTtl"] = args?.tokenExplicitMaxTtl;
            resourceInputs["tokenMaxTtl"] = args?.tokenMaxTtl;
            resourceInputs["tokenNoDefaultPolicy"] = args?.tokenNoDefaultPolicy;
            resourceInputs["tokenNumUses"] = args?.tokenNumUses;
            resourceInputs["tokenPeriod"] = args?.tokenPeriod;
            resourceInputs["tokenPolicies"] = args?.tokenPolicies;
            resourceInputs["tokenTtl"] = args?.tokenTtl;
            resourceInputs["tokenType"] = args?.tokenType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthBackendRole.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthBackendRole resources.
 */
export interface AuthBackendRoleState {
    /**
     * The role's arn.
     */
    arn?: pulumi.Input<string>;
    /**
     * Path to the mounted AliCloud auth backend.
     * Defaults to `alicloud`
     *
     * For more details on the usage of each argument consult the [Vault AliCloud API documentation](https://www.vaultproject.io/api-docs/auth/alicloud).
     */
    backend?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured namespace.
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Name of the role. Must correspond with the name of
     * the role reflected in the arn.
     */
    role?: pulumi.Input<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    tokenBoundCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    tokenExplicitMaxTtl?: pulumi.Input<number>;
    /**
     * The maximum lifetime of the generated token
     */
    tokenMaxTtl?: pulumi.Input<number>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    tokenNoDefaultPolicy?: pulumi.Input<boolean>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    tokenNumUses?: pulumi.Input<number>;
    /**
     * Generated Token's Period
     */
    tokenPeriod?: pulumi.Input<number>;
    /**
     * Generated Token's Policies
     */
    tokenPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    tokenTtl?: pulumi.Input<number>;
    /**
     * The type of token to generate, service or batch
     */
    tokenType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthBackendRole resource.
 */
export interface AuthBackendRoleArgs {
    /**
     * The role's arn.
     */
    arn: pulumi.Input<string>;
    /**
     * Path to the mounted AliCloud auth backend.
     * Defaults to `alicloud`
     *
     * For more details on the usage of each argument consult the [Vault AliCloud API documentation](https://www.vaultproject.io/api-docs/auth/alicloud).
     */
    backend?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured namespace.
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Name of the role. Must correspond with the name of
     * the role reflected in the arn.
     */
    role: pulumi.Input<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    tokenBoundCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    tokenExplicitMaxTtl?: pulumi.Input<number>;
    /**
     * The maximum lifetime of the generated token
     */
    tokenMaxTtl?: pulumi.Input<number>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    tokenNoDefaultPolicy?: pulumi.Input<boolean>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    tokenNumUses?: pulumi.Input<number>;
    /**
     * Generated Token's Period
     */
    tokenPeriod?: pulumi.Input<number>;
    /**
     * Generated Token's Policies
     */
    tokenPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    tokenTtl?: pulumi.Input<number>;
    /**
     * The type of token to generate, service or batch
     */
    tokenType?: pulumi.Input<string>;
}
