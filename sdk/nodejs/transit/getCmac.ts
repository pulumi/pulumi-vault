// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This is a data source which can be used to generate a CMAC using a Vault Transit key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const test = vault.transit.getCmac({
 *     path: "transit",
 *     name: "test",
 *     input: "aGVsbG8gd29ybGQ=",
 * });
 * ```
 */
export function getCmac(args: GetCmacArgs, opts?: pulumi.InvokeOptions): Promise<GetCmacResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:transit/getCmac:getCmac", {
        "batchInputs": args.batchInputs,
        "batchResults": args.batchResults,
        "cmac": args.cmac,
        "input": args.input,
        "keyVersion": args.keyVersion,
        "macLength": args.macLength,
        "name": args.name,
        "namespace": args.namespace,
        "path": args.path,
        "urlMacLength": args.urlMacLength,
    }, opts);
}

/**
 * A collection of arguments for invoking getCmac.
 */
export interface GetCmacArgs {
    batchInputs?: {[key: string]: string}[];
    /**
     * The results returned from Vault if using `batchInput`
     */
    batchResults?: {[key: string]: string}[];
    /**
     * The CMAC returned from Vault if using `input`
     */
    cmac?: string;
    input?: string;
    keyVersion?: number;
    macLength?: number;
    name: string;
    namespace?: string;
    path: string;
    urlMacLength?: number;
}

/**
 * A collection of values returned by getCmac.
 */
export interface GetCmacResult {
    readonly batchInputs?: {[key: string]: string}[];
    /**
     * The results returned from Vault if using `batchInput`
     */
    readonly batchResults: {[key: string]: string}[];
    /**
     * The CMAC returned from Vault if using `input`
     */
    readonly cmac: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly input?: string;
    readonly keyVersion?: number;
    readonly macLength?: number;
    readonly name: string;
    readonly namespace?: string;
    readonly path: string;
    readonly urlMacLength?: number;
}
/**
 * This is a data source which can be used to generate a CMAC using a Vault Transit key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const test = vault.transit.getCmac({
 *     path: "transit",
 *     name: "test",
 *     input: "aGVsbG8gd29ybGQ=",
 * });
 * ```
 */
export function getCmacOutput(args: GetCmacOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCmacResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vault:transit/getCmac:getCmac", {
        "batchInputs": args.batchInputs,
        "batchResults": args.batchResults,
        "cmac": args.cmac,
        "input": args.input,
        "keyVersion": args.keyVersion,
        "macLength": args.macLength,
        "name": args.name,
        "namespace": args.namespace,
        "path": args.path,
        "urlMacLength": args.urlMacLength,
    }, opts);
}

/**
 * A collection of arguments for invoking getCmac.
 */
export interface GetCmacOutputArgs {
    batchInputs?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    /**
     * The results returned from Vault if using `batchInput`
     */
    batchResults?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    /**
     * The CMAC returned from Vault if using `input`
     */
    cmac?: pulumi.Input<string>;
    input?: pulumi.Input<string>;
    keyVersion?: pulumi.Input<number>;
    macLength?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    path: pulumi.Input<string>;
    urlMacLength?: pulumi.Input<number>;
}
