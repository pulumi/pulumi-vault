// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetDecryptArgs, GetDecryptResult, GetDecryptOutputArgs } from "./getDecrypt";
export const getDecrypt: typeof import("./getDecrypt").getDecrypt = null as any;
export const getDecryptOutput: typeof import("./getDecrypt").getDecryptOutput = null as any;
utilities.lazyLoad(exports, ["getDecrypt","getDecryptOutput"], () => require("./getDecrypt"));

export { GetEncryptArgs, GetEncryptResult, GetEncryptOutputArgs } from "./getEncrypt";
export const getEncrypt: typeof import("./getEncrypt").getEncrypt = null as any;
export const getEncryptOutput: typeof import("./getEncrypt").getEncryptOutput = null as any;
utilities.lazyLoad(exports, ["getEncrypt","getEncryptOutput"], () => require("./getEncrypt"));

export { SecretBackendKeyArgs, SecretBackendKeyState } from "./secretBackendKey";
export type SecretBackendKey = import("./secretBackendKey").SecretBackendKey;
export const SecretBackendKey: typeof import("./secretBackendKey").SecretBackendKey = null as any;
utilities.lazyLoad(exports, ["SecretBackendKey"], () => require("./secretBackendKey"));

export { SecretCacheConfigArgs, SecretCacheConfigState } from "./secretCacheConfig";
export type SecretCacheConfig = import("./secretCacheConfig").SecretCacheConfig;
export const SecretCacheConfig: typeof import("./secretCacheConfig").SecretCacheConfig = null as any;
utilities.lazyLoad(exports, ["SecretCacheConfig"], () => require("./secretCacheConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "vault:transit/secretBackendKey:SecretBackendKey":
                return new SecretBackendKey(name, <any>undefined, { urn })
            case "vault:transit/secretCacheConfig:SecretCacheConfig":
                return new SecretCacheConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("vault", "transit/secretBackendKey", _module)
pulumi.runtime.registerResourceModule("vault", "transit/secretCacheConfig", _module)
