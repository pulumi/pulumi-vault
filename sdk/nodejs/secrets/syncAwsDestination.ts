// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const aws = new vault.secrets.SyncAwsDestination("aws", {
 *     accessKeyId: _var.access_key_id,
 *     secretAccessKey: _var.secret_access_key,
 *     region: "us-east-1",
 *     secretNameTemplate: "vault_{{ .MountAccessor | lowercase }}_{{ .SecretPath | lowercase }}",
 *     customTags: {
 *         foo: "bar",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * AWS Secrets sync destinations can be imported using the `name`, e.g.
 *
 * ```sh
 * $ pulumi import vault:secrets/syncAwsDestination:SyncAwsDestination aws aws-dest
 * ```
 */
export class SyncAwsDestination extends pulumi.CustomResource {
    /**
     * Get an existing SyncAwsDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SyncAwsDestinationState, opts?: pulumi.CustomResourceOptions): SyncAwsDestination {
        return new SyncAwsDestination(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:secrets/syncAwsDestination:SyncAwsDestination';

    /**
     * Returns true if the given object is an instance of SyncAwsDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SyncAwsDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SyncAwsDestination.__pulumiType;
    }

    /**
     * Access key id to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_ACCESS_KEY_ID` environment
     * variable.
     */
    public readonly accessKeyId!: pulumi.Output<string | undefined>;
    /**
     * Custom tags to set on the secret managed at the destination.
     */
    public readonly customTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Unique name of the AWS destination.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Region where to manage the secrets manager entries.
     * Can be omitted and directly provided to Vault using the `AWS_REGION` environment
     * variable.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Secret access key to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_SECRET_ACCESS_KEY` environment
     * variable.
     */
    public readonly secretAccessKey!: pulumi.Output<string | undefined>;
    /**
     * Template describing how to generate external secret names.
     * Supports a subset of the Go Template syntax.
     */
    public readonly secretNameTemplate!: pulumi.Output<string>;
    /**
     * The type of the secrets destination (`aws-sm`).
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a SyncAwsDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SyncAwsDestinationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SyncAwsDestinationArgs | SyncAwsDestinationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SyncAwsDestinationState | undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["customTags"] = state ? state.customTags : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["secretAccessKey"] = state ? state.secretAccessKey : undefined;
            resourceInputs["secretNameTemplate"] = state ? state.secretNameTemplate : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SyncAwsDestinationArgs | undefined;
            resourceInputs["accessKeyId"] = args ? args.accessKeyId : undefined;
            resourceInputs["customTags"] = args ? args.customTags : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["secretAccessKey"] = args?.secretAccessKey ? pulumi.secret(args.secretAccessKey) : undefined;
            resourceInputs["secretNameTemplate"] = args ? args.secretNameTemplate : undefined;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SyncAwsDestination.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SyncAwsDestination resources.
 */
export interface SyncAwsDestinationState {
    /**
     * Access key id to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_ACCESS_KEY_ID` environment
     * variable.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * Custom tags to set on the secret managed at the destination.
     */
    customTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Unique name of the AWS destination.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     */
    namespace?: pulumi.Input<string>;
    /**
     * Region where to manage the secrets manager entries.
     * Can be omitted and directly provided to Vault using the `AWS_REGION` environment
     * variable.
     */
    region?: pulumi.Input<string>;
    /**
     * Secret access key to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_SECRET_ACCESS_KEY` environment
     * variable.
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * Template describing how to generate external secret names.
     * Supports a subset of the Go Template syntax.
     */
    secretNameTemplate?: pulumi.Input<string>;
    /**
     * The type of the secrets destination (`aws-sm`).
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SyncAwsDestination resource.
 */
export interface SyncAwsDestinationArgs {
    /**
     * Access key id to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_ACCESS_KEY_ID` environment
     * variable.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * Custom tags to set on the secret managed at the destination.
     */
    customTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Unique name of the AWS destination.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     */
    namespace?: pulumi.Input<string>;
    /**
     * Region where to manage the secrets manager entries.
     * Can be omitted and directly provided to Vault using the `AWS_REGION` environment
     * variable.
     */
    region?: pulumi.Input<string>;
    /**
     * Secret access key to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_SECRET_ACCESS_KEY` environment
     * variable.
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * Template describing how to generate external secret names.
     * Supports a subset of the Go Template syntax.
     */
    secretNameTemplate?: pulumi.Input<string>;
}
