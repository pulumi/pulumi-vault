// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const config = new vault.ad.SecretBackend("config", {
 *     backend: "ad",
 *     binddn: "CN=Administrator,CN=Users,DC=corp,DC=example,DC=net",
 *     bindpass: "SuperSecretPassw0rd",
 *     url: "ldaps://ad",
 *     insecureTls: true,
 *     userdn: "CN=Users,DC=corp,DC=example,DC=net",
 * });
 * const qa = new vault.ad.SecretLibrary("qa", {
 *     backend: config.backend,
 *     serviceAccountNames: [
 *         "Bob",
 *         "Mary",
 *     ],
 *     ttl: 60,
 *     disableCheckInEnforcement: true,
 *     maxTtl: 120,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * AD secret backend libraries can be imported using the `path`, e.g.
 *
 * ```sh
 * $ pulumi import vault:ad/secretLibrary:SecretLibrary role ad/library/bob
 * ```
 */
export class SecretLibrary extends pulumi.CustomResource {
    /**
     * Get an existing SecretLibrary resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecretLibraryState, opts?: pulumi.CustomResourceOptions): SecretLibrary {
        return new SecretLibrary(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:ad/secretLibrary:SecretLibrary';

    /**
     * Returns true if the given object is an instance of SecretLibrary.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecretLibrary {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecretLibrary.__pulumiType;
    }

    /**
     * The path the AD secret backend is mounted at,
     * with no leading or trailing `/`s.
     */
    public readonly backend!: pulumi.Output<string>;
    /**
     * Disable enforcing that service accounts must be checked in by the entity or client token that checked them out.
     */
    public readonly disableCheckInEnforcement!: pulumi.Output<boolean | undefined>;
    /**
     * The maximum password time-to-live in seconds. Defaults to the configuration
     * maxTtl if not provided.
     */
    public readonly maxTtl!: pulumi.Output<number>;
    /**
     * The name to identify this set of service accounts.
     * Must be unique within the backend.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Specifies the slice of service accounts mapped to this set.
     */
    public readonly serviceAccountNames!: pulumi.Output<string[]>;
    /**
     * The password time-to-live in seconds. Defaults to the configuration
     * ttl if not provided.
     */
    public readonly ttl!: pulumi.Output<number>;

    /**
     * Create a SecretLibrary resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecretLibraryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecretLibraryArgs | SecretLibraryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecretLibraryState | undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["disableCheckInEnforcement"] = state ? state.disableCheckInEnforcement : undefined;
            resourceInputs["maxTtl"] = state ? state.maxTtl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["serviceAccountNames"] = state ? state.serviceAccountNames : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
        } else {
            const args = argsOrState as SecretLibraryArgs | undefined;
            if ((!args || args.backend === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backend'");
            }
            if ((!args || args.serviceAccountNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountNames'");
            }
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["disableCheckInEnforcement"] = args ? args.disableCheckInEnforcement : undefined;
            resourceInputs["maxTtl"] = args ? args.maxTtl : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["serviceAccountNames"] = args ? args.serviceAccountNames : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecretLibrary.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecretLibrary resources.
 */
export interface SecretLibraryState {
    /**
     * The path the AD secret backend is mounted at,
     * with no leading or trailing `/`s.
     */
    backend?: pulumi.Input<string>;
    /**
     * Disable enforcing that service accounts must be checked in by the entity or client token that checked them out.
     */
    disableCheckInEnforcement?: pulumi.Input<boolean>;
    /**
     * The maximum password time-to-live in seconds. Defaults to the configuration
     * maxTtl if not provided.
     */
    maxTtl?: pulumi.Input<number>;
    /**
     * The name to identify this set of service accounts.
     * Must be unique within the backend.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Specifies the slice of service accounts mapped to this set.
     */
    serviceAccountNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The password time-to-live in seconds. Defaults to the configuration
     * ttl if not provided.
     */
    ttl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SecretLibrary resource.
 */
export interface SecretLibraryArgs {
    /**
     * The path the AD secret backend is mounted at,
     * with no leading or trailing `/`s.
     */
    backend: pulumi.Input<string>;
    /**
     * Disable enforcing that service accounts must be checked in by the entity or client token that checked them out.
     */
    disableCheckInEnforcement?: pulumi.Input<boolean>;
    /**
     * The maximum password time-to-live in seconds. Defaults to the configuration
     * maxTtl if not provided.
     */
    maxTtl?: pulumi.Input<number>;
    /**
     * The name to identify this set of service accounts.
     * Must be unique within the backend.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Specifies the slice of service accounts mapped to this set.
     */
    serviceAccountNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The password time-to-live in seconds. Defaults to the configuration
     * ttl if not provided.
     */
    ttl?: pulumi.Input<number>;
}
