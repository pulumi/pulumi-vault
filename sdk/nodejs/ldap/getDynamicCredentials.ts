// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getDynamicCredentials(args: GetDynamicCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetDynamicCredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:ldap/getDynamicCredentials:getDynamicCredentials", {
        "mount": args.mount,
        "namespace": args.namespace,
        "roleName": args.roleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDynamicCredentials.
 */
export interface GetDynamicCredentialsArgs {
    mount: string;
    namespace?: string;
    roleName: string;
}

/**
 * A collection of values returned by getDynamicCredentials.
 */
export interface GetDynamicCredentialsResult {
    readonly distinguishedNames: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly leaseDuration: number;
    readonly leaseId: string;
    readonly leaseRenewable: boolean;
    readonly mount: string;
    readonly namespace?: string;
    readonly password: string;
    readonly roleName: string;
    readonly username: string;
}
export function getDynamicCredentialsOutput(args: GetDynamicCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDynamicCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getDynamicCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getDynamicCredentials.
 */
export interface GetDynamicCredentialsOutputArgs {
    mount: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    roleName: pulumi.Input<string>;
}
