// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for configuring MFA login-enforcement
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const example = new vault.identity.MfaDuo("example", {
 *     secretKey: "secret-key",
 *     integrationKey: "int-key",
 *     apiHostname: "foo.baz",
 *     pushInfo: "push-info",
 * });
 * const exampleMfaLoginEnforcement = new vault.identity.MfaLoginEnforcement("example", {
 *     name: "default",
 *     mfaMethodIds: [example.methodId],
 * });
 * ```
 *
 * ## Import
 *
 * Resource can be imported using its `name` field, e.g.
 *
 * ```sh
 * $ pulumi import vault:identity/mfaLoginEnforcement:MfaLoginEnforcement example default
 * ```
 */
export class MfaLoginEnforcement extends pulumi.CustomResource {
    /**
     * Get an existing MfaLoginEnforcement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MfaLoginEnforcementState, opts?: pulumi.CustomResourceOptions): MfaLoginEnforcement {
        return new MfaLoginEnforcement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:identity/mfaLoginEnforcement:MfaLoginEnforcement';

    /**
     * Returns true if the given object is an instance of MfaLoginEnforcement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MfaLoginEnforcement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MfaLoginEnforcement.__pulumiType;
    }

    /**
     * Set of auth method accessor IDs.
     */
    declare public readonly authMethodAccessors: pulumi.Output<string[] | undefined>;
    /**
     * Set of auth method types.
     */
    declare public readonly authMethodTypes: pulumi.Output<string[] | undefined>;
    /**
     * Set of identity entity IDs.
     */
    declare public readonly identityEntityIds: pulumi.Output<string[] | undefined>;
    /**
     * Set of identity group IDs.
     */
    declare public readonly identityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Set of MFA method UUIDs.
     */
    declare public readonly mfaMethodIds: pulumi.Output<string[]>;
    /**
     * Login enforcement name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    declare public readonly namespace: pulumi.Output<string | undefined>;
    /**
     * Method's namespace ID.
     */
    declare public /*out*/ readonly namespaceId: pulumi.Output<string>;
    /**
     * Method's namespace path.
     */
    declare public /*out*/ readonly namespacePath: pulumi.Output<string>;
    /**
     * Resource UUID.
     */
    declare public /*out*/ readonly uuid: pulumi.Output<string>;

    /**
     * Create a MfaLoginEnforcement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MfaLoginEnforcementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MfaLoginEnforcementArgs | MfaLoginEnforcementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MfaLoginEnforcementState | undefined;
            resourceInputs["authMethodAccessors"] = state?.authMethodAccessors;
            resourceInputs["authMethodTypes"] = state?.authMethodTypes;
            resourceInputs["identityEntityIds"] = state?.identityEntityIds;
            resourceInputs["identityGroupIds"] = state?.identityGroupIds;
            resourceInputs["mfaMethodIds"] = state?.mfaMethodIds;
            resourceInputs["name"] = state?.name;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["namespaceId"] = state?.namespaceId;
            resourceInputs["namespacePath"] = state?.namespacePath;
            resourceInputs["uuid"] = state?.uuid;
        } else {
            const args = argsOrState as MfaLoginEnforcementArgs | undefined;
            if (args?.mfaMethodIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'mfaMethodIds'");
            }
            resourceInputs["authMethodAccessors"] = args?.authMethodAccessors;
            resourceInputs["authMethodTypes"] = args?.authMethodTypes;
            resourceInputs["identityEntityIds"] = args?.identityEntityIds;
            resourceInputs["identityGroupIds"] = args?.identityGroupIds;
            resourceInputs["mfaMethodIds"] = args?.mfaMethodIds;
            resourceInputs["name"] = args?.name;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["namespaceId"] = undefined /*out*/;
            resourceInputs["namespacePath"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MfaLoginEnforcement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MfaLoginEnforcement resources.
 */
export interface MfaLoginEnforcementState {
    /**
     * Set of auth method accessor IDs.
     */
    authMethodAccessors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of auth method types.
     */
    authMethodTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of identity entity IDs.
     */
    identityEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of identity group IDs.
     */
    identityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of MFA method UUIDs.
     */
    mfaMethodIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Login enforcement name.
     */
    name?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Method's namespace ID.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * Method's namespace path.
     */
    namespacePath?: pulumi.Input<string>;
    /**
     * Resource UUID.
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MfaLoginEnforcement resource.
 */
export interface MfaLoginEnforcementArgs {
    /**
     * Set of auth method accessor IDs.
     */
    authMethodAccessors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of auth method types.
     */
    authMethodTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of identity entity IDs.
     */
    identityEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of identity group IDs.
     */
    identityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of MFA method UUIDs.
     */
    mfaMethodIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Login enforcement name.
     */
    name?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
}
