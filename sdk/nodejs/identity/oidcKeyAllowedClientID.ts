// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const key = new vault.identity.OidcKey("key", {algorithm: "RS256"});
 * const roleOidcRole = new vault.identity.OidcRole("roleOidcRole", {key: key.name});
 * const roleOidcKeyAllowedClientID = new vault.identity.OidcKeyAllowedClientID("roleOidcKeyAllowedClientID", {
 *     keyName: key.name,
 *     allowedClientId: roleOidcRole.clientId,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class OidcKeyAllowedClientID extends pulumi.CustomResource {
    /**
     * Get an existing OidcKeyAllowedClientID resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OidcKeyAllowedClientIDState, opts?: pulumi.CustomResourceOptions): OidcKeyAllowedClientID {
        return new OidcKeyAllowedClientID(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID';

    /**
     * Returns true if the given object is an instance of OidcKeyAllowedClientID.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OidcKeyAllowedClientID {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OidcKeyAllowedClientID.__pulumiType;
    }

    /**
     * Client ID to allow usage with the OIDC named key
     */
    public readonly allowedClientId!: pulumi.Output<string>;
    /**
     * Name of the OIDC Key allow the Client ID.
     */
    public readonly keyName!: pulumi.Output<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;

    /**
     * Create a OidcKeyAllowedClientID resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OidcKeyAllowedClientIDArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OidcKeyAllowedClientIDArgs | OidcKeyAllowedClientIDState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OidcKeyAllowedClientIDState | undefined;
            resourceInputs["allowedClientId"] = state ? state.allowedClientId : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
        } else {
            const args = argsOrState as OidcKeyAllowedClientIDArgs | undefined;
            if ((!args || args.allowedClientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowedClientId'");
            }
            if ((!args || args.keyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyName'");
            }
            resourceInputs["allowedClientId"] = args ? args.allowedClientId : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OidcKeyAllowedClientID.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OidcKeyAllowedClientID resources.
 */
export interface OidcKeyAllowedClientIDState {
    /**
     * Client ID to allow usage with the OIDC named key
     */
    allowedClientId?: pulumi.Input<string>;
    /**
     * Name of the OIDC Key allow the Client ID.
     */
    keyName?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OidcKeyAllowedClientID resource.
 */
export interface OidcKeyAllowedClientIDArgs {
    /**
     * Client ID to allow usage with the OIDC named key
     */
    allowedClientId: pulumi.Input<string>;
    /**
     * Name of the OIDC Key allow the Client ID.
     */
    keyName: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
}
