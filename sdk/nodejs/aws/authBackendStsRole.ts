// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const aws = new vault.AuthBackend("aws", {type: "aws"});
 * const role = new vault.aws.AuthBackendStsRole("role", {
 *     backend: aws.path,
 *     accountId: "1234567890",
 *     stsRole: "arn:aws:iam::1234567890:role/my-role",
 * });
 * ```
 *
 * ## Import
 *
 * AWS auth backend STS roles can be imported using `auth/`, the `backend` path, `/config/sts/`, and the `account_id` e.g.
 *
 * ```sh
 * $ pulumi import vault:aws/authBackendStsRole:AuthBackendStsRole example auth/aws/config/sts/1234567890
 * ```
 */
export class AuthBackendStsRole extends pulumi.CustomResource {
    /**
     * Get an existing AuthBackendStsRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthBackendStsRoleState, opts?: pulumi.CustomResourceOptions): AuthBackendStsRole {
        return new AuthBackendStsRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:aws/authBackendStsRole:AuthBackendStsRole';

    /**
     * Returns true if the given object is an instance of AuthBackendStsRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthBackendStsRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthBackendStsRole.__pulumiType;
    }

    /**
     * The AWS account ID to configure the STS role for.
     */
    declare public readonly accountId: pulumi.Output<string>;
    /**
     * The path the AWS auth backend being configured was
     * mounted at.  Defaults to `aws`.
     */
    declare public readonly backend: pulumi.Output<string | undefined>;
    /**
     * External ID expected by the STS role. The associated STS role must be configured to require the external ID. Requires Vault 1.17+.
     */
    declare public readonly externalId: pulumi.Output<string | undefined>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    declare public readonly namespace: pulumi.Output<string | undefined>;
    /**
     * The STS role to assume when verifying requests made
     * by EC2 instances in the account specified by `accountId`.
     */
    declare public readonly stsRole: pulumi.Output<string>;

    /**
     * Create a AuthBackendStsRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthBackendStsRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthBackendStsRoleArgs | AuthBackendStsRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthBackendStsRoleState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["backend"] = state?.backend;
            resourceInputs["externalId"] = state?.externalId;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["stsRole"] = state?.stsRole;
        } else {
            const args = argsOrState as AuthBackendStsRoleArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.stsRole === undefined && !opts.urn) {
                throw new Error("Missing required property 'stsRole'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["backend"] = args?.backend;
            resourceInputs["externalId"] = args?.externalId;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["stsRole"] = args?.stsRole;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthBackendStsRole.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthBackendStsRole resources.
 */
export interface AuthBackendStsRoleState {
    /**
     * The AWS account ID to configure the STS role for.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The path the AWS auth backend being configured was
     * mounted at.  Defaults to `aws`.
     */
    backend?: pulumi.Input<string>;
    /**
     * External ID expected by the STS role. The associated STS role must be configured to require the external ID. Requires Vault 1.17+.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The STS role to assume when verifying requests made
     * by EC2 instances in the account specified by `accountId`.
     */
    stsRole?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthBackendStsRole resource.
 */
export interface AuthBackendStsRoleArgs {
    /**
     * The AWS account ID to configure the STS role for.
     */
    accountId: pulumi.Input<string>;
    /**
     * The path the AWS auth backend being configured was
     * mounted at.  Defaults to `aws`.
     */
    backend?: pulumi.Input<string>;
    /**
     * External ID expected by the STS role. The associated STS role must be configured to require the external ID. Requires Vault 1.17+.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The STS role to assume when verifying requests made
     * by EC2 instances in the account specified by `accountId`.
     */
    stsRole: pulumi.Input<string>;
}
