// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Reads the Role ID of an AppRole from a Vault server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const role = vault.appRole.getAuthBackendRoleId({
 *     backend: "my-approle-backend",
 *     roleName: "my-role",
 * });
 * export const role_id = role.then(role => role.roleId);
 * ```
 */
export function getAuthBackendRoleId(args: GetAuthBackendRoleIdArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthBackendRoleIdResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vault:appRole/getAuthBackendRoleId:getAuthBackendRoleId", {
        "backend": args.backend,
        "roleName": args.roleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthBackendRoleId.
 */
export interface GetAuthBackendRoleIdArgs {
    /**
     * The unique name for the AppRole backend the role to
     * retrieve a RoleID for resides in. Defaults to "approle".
     */
    backend?: string;
    /**
     * The name of the role to retrieve the Role ID for.
     */
    roleName: string;
}

/**
 * A collection of values returned by getAuthBackendRoleId.
 */
export interface GetAuthBackendRoleIdResult {
    readonly backend?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The RoleID of the role.
     */
    readonly roleId: string;
    readonly roleName: string;
}

export function getAuthBackendRoleIdOutput(args: GetAuthBackendRoleIdOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthBackendRoleIdResult> {
    return pulumi.output(args).apply(a => getAuthBackendRoleId(a, opts))
}

/**
 * A collection of arguments for invoking getAuthBackendRoleId.
 */
export interface GetAuthBackendRoleIdOutputArgs {
    /**
     * The unique name for the AppRole backend the role to
     * retrieve a RoleID for resides in. Defaults to "approle".
     */
    backend?: pulumi.Input<string>;
    /**
     * The name of the role to retrieve the Role ID for.
     */
    roleName: pulumi.Input<string>;
}
