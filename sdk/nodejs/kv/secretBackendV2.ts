// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configures KV-V2 backend level settings that are applied to
 * every key in the key-value store.
 *
 * For more information on Vault's KV-V2 secret backend
 * [see here](https://www.vaultproject.io/docs/secrets/kv/kv-v2).
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vault from "@pulumi/vault";
 *
 * const kvv2 = new vault.Mount("kvv2", {
 *     path: "kvv2",
 *     type: "kv",
 *     options: {
 *         version: "2",
 *     },
 *     description: "KV Version 2 secret engine mount",
 * });
 * const example = new vault.kv.SecretBackendV2("example", {
 *     mount: kvv2.path,
 *     maxVersions: 5,
 *     deleteVersionAfter: 12600,
 *     casRequired: true,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Required Vault Capabilities
 *
 * Use of this resource requires the `create` or `update` capability
 * (depending on whether the resource already exists) on the given path,
 * the `delete` capability if the resource is removed from configuration,
 * and the `read` capability for drift detection (by default).
 *
 * ## Import
 *
 * The KV-V2 secret backend can be imported using its unique ID,
 * the `${mount}/config`, e.g.
 *
 * ```sh
 * $ pulumi import vault:kv/secretBackendV2:SecretBackendV2 example kvv2/config
 * ```
 */
export class SecretBackendV2 extends pulumi.CustomResource {
    /**
     * Get an existing SecretBackendV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecretBackendV2State, opts?: pulumi.CustomResourceOptions): SecretBackendV2 {
        return new SecretBackendV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:kv/secretBackendV2:SecretBackendV2';

    /**
     * Returns true if the given object is an instance of SecretBackendV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecretBackendV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecretBackendV2.__pulumiType;
    }

    /**
     * If true, all keys will require the cas
     * parameter to be set on all write requests.
     */
    public readonly casRequired!: pulumi.Output<boolean>;
    /**
     * If set, specifies the length of time before
     * a version is deleted. Accepts duration in integer seconds.
     */
    public readonly deleteVersionAfter!: pulumi.Output<number | undefined>;
    /**
     * The number of versions to keep per key.
     */
    public readonly maxVersions!: pulumi.Output<number>;
    /**
     * Path where KV-V2 engine is mounted.
     */
    public readonly mount!: pulumi.Output<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;

    /**
     * Create a SecretBackendV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecretBackendV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecretBackendV2Args | SecretBackendV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecretBackendV2State | undefined;
            resourceInputs["casRequired"] = state ? state.casRequired : undefined;
            resourceInputs["deleteVersionAfter"] = state ? state.deleteVersionAfter : undefined;
            resourceInputs["maxVersions"] = state ? state.maxVersions : undefined;
            resourceInputs["mount"] = state ? state.mount : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
        } else {
            const args = argsOrState as SecretBackendV2Args | undefined;
            if ((!args || args.mount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mount'");
            }
            resourceInputs["casRequired"] = args ? args.casRequired : undefined;
            resourceInputs["deleteVersionAfter"] = args ? args.deleteVersionAfter : undefined;
            resourceInputs["maxVersions"] = args ? args.maxVersions : undefined;
            resourceInputs["mount"] = args ? args.mount : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecretBackendV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecretBackendV2 resources.
 */
export interface SecretBackendV2State {
    /**
     * If true, all keys will require the cas
     * parameter to be set on all write requests.
     */
    casRequired?: pulumi.Input<boolean>;
    /**
     * If set, specifies the length of time before
     * a version is deleted. Accepts duration in integer seconds.
     */
    deleteVersionAfter?: pulumi.Input<number>;
    /**
     * The number of versions to keep per key.
     */
    maxVersions?: pulumi.Input<number>;
    /**
     * Path where KV-V2 engine is mounted.
     */
    mount?: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecretBackendV2 resource.
 */
export interface SecretBackendV2Args {
    /**
     * If true, all keys will require the cas
     * parameter to be set on all write requests.
     */
    casRequired?: pulumi.Input<boolean>;
    /**
     * If set, specifies the length of time before
     * a version is deleted. Accepts duration in integer seconds.
     */
    deleteVersionAfter?: pulumi.Input<number>;
    /**
     * The number of versions to keep per key.
     */
    maxVersions?: pulumi.Input<number>;
    /**
     * Path where KV-V2 engine is mounted.
     */
    mount: pulumi.Input<string>;
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
}
