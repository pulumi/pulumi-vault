// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 */
export function getSecretV2(args: GetSecretV2Args, opts?: pulumi.InvokeOptions): Promise<GetSecretV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:kv/getSecretV2:getSecretV2", {
        "mount": args.mount,
        "name": args.name,
        "namespace": args.namespace,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecretV2.
 */
export interface GetSecretV2Args {
    /**
     * Path where KV-V2 engine is mounted.
     */
    mount: string;
    /**
     * Full name of the secret. For a nested secret
     * the name is the nested path excluding the mount and data
     * prefix. For example, for a secret at `kvv2/data/foo/bar/baz`
     * the name is `foo/bar/baz`.
     */
    name: string;
    /**
     * The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: string;
    /**
     * Version of the secret to retrieve.
     */
    version?: number;
}

/**
 * A collection of values returned by getSecretV2.
 */
export interface GetSecretV2Result {
    /**
     * Time at which secret was created.
     */
    readonly createdTime: string;
    /**
     * Custom metadata for the secret.
     */
    readonly customMetadata: {[key: string]: any};
    /**
     * A mapping whose keys are the top-level data keys returned from
     * Vault and whose values are the corresponding values. This map can only
     * represent string data, so any non-string values returned from Vault are
     * serialized as JSON.
     */
    readonly data: {[key: string]: any};
    /**
     * JSON-encoded string that that is
     * read as the secret data at the given path.
     */
    readonly dataJson: string;
    /**
     * Deletion time for the secret.
     */
    readonly deletionTime: string;
    /**
     * Indicates whether the secret has been destroyed.
     */
    readonly destroyed: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly mount: string;
    readonly name: string;
    readonly namespace?: string;
    /**
     * Full path where the KVV2 secret is written.
     */
    readonly path: string;
    readonly version?: number;
}
/**
 * ## Example Usage
 */
export function getSecretV2Output(args: GetSecretV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretV2Result> {
    return pulumi.output(args).apply((a: any) => getSecretV2(a, opts))
}

/**
 * A collection of arguments for invoking getSecretV2.
 */
export interface GetSecretV2OutputArgs {
    /**
     * Path where KV-V2 engine is mounted.
     */
    mount: pulumi.Input<string>;
    /**
     * Full name of the secret. For a nested secret
     * the name is the nested path excluding the mount and data
     * prefix. For example, for a secret at `kvv2/data/foo/bar/baz`
     * the name is `foo/bar/baz`.
     */
    name: pulumi.Input<string>;
    /**
     * The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Version of the secret to retrieve.
     */
    version?: pulumi.Input<number>;
}
