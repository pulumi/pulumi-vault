// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditRequestHeaderArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditRequestHeaderArgs Empty = new AuditRequestHeaderArgs();

    /**
     * Whether this header&#39;s value should be HMAC&#39;d in the audit logs.
     * 
     */
    @Import(name="hmac")
    private @Nullable Output<Boolean> hmac;

    /**
     * @return Whether this header&#39;s value should be HMAC&#39;d in the audit logs.
     * 
     */
    public Optional<Output<Boolean>> hmac() {
        return Optional.ofNullable(this.hmac);
    }

    /**
     * The name of the request header to audit.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the request header to audit.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Target namespace. (requires Enterprise)
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Target namespace. (requires Enterprise)
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private AuditRequestHeaderArgs() {}

    private AuditRequestHeaderArgs(AuditRequestHeaderArgs $) {
        this.hmac = $.hmac;
        this.name = $.name;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditRequestHeaderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditRequestHeaderArgs $;

        public Builder() {
            $ = new AuditRequestHeaderArgs();
        }

        public Builder(AuditRequestHeaderArgs defaults) {
            $ = new AuditRequestHeaderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hmac Whether this header&#39;s value should be HMAC&#39;d in the audit logs.
         * 
         * @return builder
         * 
         */
        public Builder hmac(@Nullable Output<Boolean> hmac) {
            $.hmac = hmac;
            return this;
        }

        /**
         * @param hmac Whether this header&#39;s value should be HMAC&#39;d in the audit logs.
         * 
         * @return builder
         * 
         */
        public Builder hmac(Boolean hmac) {
            return hmac(Output.of(hmac));
        }

        /**
         * @param name The name of the request header to audit.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the request header to audit.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace Target namespace. (requires Enterprise)
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Target namespace. (requires Enterprise)
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public AuditRequestHeaderArgs build() {
            return $;
        }
    }

}
