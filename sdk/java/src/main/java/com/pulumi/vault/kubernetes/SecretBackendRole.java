// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.kubernetes;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.kubernetes.SecretBackendRoleArgs;
import com.pulumi.vault.kubernetes.inputs.SecretBackendRoleState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * Example using `service_account_name` mode:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.kubernetes.SecretBackend;
 * import com.pulumi.vault.kubernetes.SecretBackendArgs;
 * import com.pulumi.vault.kubernetes.SecretBackendRole;
 * import com.pulumi.vault.kubernetes.SecretBackendRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var config = new SecretBackend(&#34;config&#34;, SecretBackendArgs.builder()        
 *             .path(&#34;kubernetes&#34;)
 *             .description(&#34;kubernetes secrets engine description&#34;)
 *             .kubernetesHost(&#34;https://127.0.0.1:61233&#34;)
 *             .kubernetesCaCert(Files.readString(Paths.get(&#34;/path/to/cert&#34;)))
 *             .serviceAccountJwt(Files.readString(Paths.get(&#34;/path/to/token&#34;)))
 *             .disableLocalCaJwt(false)
 *             .build());
 * 
 *         var sa_example = new SecretBackendRole(&#34;sa-example&#34;, SecretBackendRoleArgs.builder()        
 *             .backend(config.path())
 *             .allowedKubernetesNamespaces(&#34;*&#34;)
 *             .tokenMaxTtl(43200)
 *             .tokenDefaultTtl(21600)
 *             .serviceAccountName(&#34;test-service-account-with-generated-token&#34;)
 *             .extraLabels(Map.ofEntries(
 *                 Map.entry(&#34;id&#34;, &#34;abc123&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;some_name&#34;)
 *             ))
 *             .extraAnnotations(Map.ofEntries(
 *                 Map.entry(&#34;env&#34;, &#34;development&#34;),
 *                 Map.entry(&#34;location&#34;, &#34;earth&#34;)
 *             ))
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Example using `kubernetes_role_name` mode:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.kubernetes.SecretBackend;
 * import com.pulumi.vault.kubernetes.SecretBackendArgs;
 * import com.pulumi.vault.kubernetes.SecretBackendRole;
 * import com.pulumi.vault.kubernetes.SecretBackendRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var config = new SecretBackend(&#34;config&#34;, SecretBackendArgs.builder()        
 *             .path(&#34;kubernetes&#34;)
 *             .description(&#34;kubernetes secrets engine description&#34;)
 *             .kubernetesHost(&#34;https://127.0.0.1:61233&#34;)
 *             .kubernetesCaCert(Files.readString(Paths.get(&#34;/path/to/cert&#34;)))
 *             .serviceAccountJwt(Files.readString(Paths.get(&#34;/path/to/token&#34;)))
 *             .disableLocalCaJwt(false)
 *             .build());
 * 
 *         var name_example = new SecretBackendRole(&#34;name-example&#34;, SecretBackendRoleArgs.builder()        
 *             .backend(config.path())
 *             .allowedKubernetesNamespaces(&#34;*&#34;)
 *             .tokenMaxTtl(43200)
 *             .tokenDefaultTtl(21600)
 *             .kubernetesRoleName(&#34;vault-k8s-secrets-role&#34;)
 *             .extraLabels(Map.ofEntries(
 *                 Map.entry(&#34;id&#34;, &#34;abc123&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;some_name&#34;)
 *             ))
 *             .extraAnnotations(Map.ofEntries(
 *                 Map.entry(&#34;env&#34;, &#34;development&#34;),
 *                 Map.entry(&#34;location&#34;, &#34;earth&#34;)
 *             ))
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Example using `generated_role_rules` mode:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.kubernetes.SecretBackend;
 * import com.pulumi.vault.kubernetes.SecretBackendArgs;
 * import com.pulumi.vault.kubernetes.SecretBackendRole;
 * import com.pulumi.vault.kubernetes.SecretBackendRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var config = new SecretBackend(&#34;config&#34;, SecretBackendArgs.builder()        
 *             .path(&#34;kubernetes&#34;)
 *             .description(&#34;kubernetes secrets engine description&#34;)
 *             .kubernetesHost(&#34;https://127.0.0.1:61233&#34;)
 *             .kubernetesCaCert(Files.readString(Paths.get(&#34;/path/to/cert&#34;)))
 *             .serviceAccountJwt(Files.readString(Paths.get(&#34;/path/to/token&#34;)))
 *             .disableLocalCaJwt(false)
 *             .build());
 * 
 *         var rules_example = new SecretBackendRole(&#34;rules-example&#34;, SecretBackendRoleArgs.builder()        
 *             .backend(config.path())
 *             .allowedKubernetesNamespaces(&#34;*&#34;)
 *             .tokenMaxTtl(43200)
 *             .tokenDefaultTtl(21600)
 *             .kubernetesRoleType(&#34;Role&#34;)
 *             .generatedRoleRules(&#34;&#34;&#34;
 * rules:
 * - apiGroups: [&#34;&#34;]
 *   resources: [&#34;pods&#34;]
 *   verbs: [&#34;list&#34;]
 *             &#34;&#34;&#34;)
 *             .extraLabels(Map.ofEntries(
 *                 Map.entry(&#34;id&#34;, &#34;abc123&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;some_name&#34;)
 *             ))
 *             .extraAnnotations(Map.ofEntries(
 *                 Map.entry(&#34;env&#34;, &#34;development&#34;),
 *                 Map.entry(&#34;location&#34;, &#34;earth&#34;)
 *             ))
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The Kubernetes secret backend role can be imported using the full path to the role
 * 
 * of the form: `&lt;backend_path&gt;/roles/&lt;role_name&gt;` e.g.
 * 
 * ```sh
 * $ pulumi import vault:kubernetes/secretBackendRole:SecretBackendRole example kubernetes kubernetes/roles/example-role
 * ```
 * 
 */
@ResourceType(type="vault:kubernetes/secretBackendRole:SecretBackendRole")
public class SecretBackendRole extends com.pulumi.resources.CustomResource {
    /**
     * A label selector for Kubernetes namespaces
     * in which credentials can be generated. Accepts either a JSON or YAML object. The value should be
     * of type [LabelSelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#labelselector-v1-meta).
     * If set with `allowed_kubernetes_namespace`, the conditions are `OR`ed.
     * 
     */
    @Export(name="allowedKubernetesNamespaceSelector", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> allowedKubernetesNamespaceSelector;

    /**
     * @return A label selector for Kubernetes namespaces
     * in which credentials can be generated. Accepts either a JSON or YAML object. The value should be
     * of type [LabelSelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#labelselector-v1-meta).
     * If set with `allowed_kubernetes_namespace`, the conditions are `OR`ed.
     * 
     */
    public Output<Optional<String>> allowedKubernetesNamespaceSelector() {
        return Codegen.optional(this.allowedKubernetesNamespaceSelector);
    }
    /**
     * The list of Kubernetes namespaces this role
     * can generate credentials for. If set to `*` all namespaces are allowed. If set with
     * `allowed_kubernetes_namespace_selector`, the conditions are `OR`ed.
     * 
     */
    @Export(name="allowedKubernetesNamespaces", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> allowedKubernetesNamespaces;

    /**
     * @return The list of Kubernetes namespaces this role
     * can generate credentials for. If set to `*` all namespaces are allowed. If set with
     * `allowed_kubernetes_namespace_selector`, the conditions are `OR`ed.
     * 
     */
    public Output<Optional<List<String>>> allowedKubernetesNamespaces() {
        return Codegen.optional(this.allowedKubernetesNamespaces);
    }
    /**
     * The path of the Kubernetes Secrets Engine backend mount to create
     * the role in.
     * 
     */
    @Export(name="backend", refs={String.class}, tree="[0]")
    private Output<String> backend;

    /**
     * @return The path of the Kubernetes Secrets Engine backend mount to create
     * the role in.
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }
    /**
     * Additional annotations to apply to all generated
     * Kubernetes objects.
     * 
     */
    @Export(name="extraAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> extraAnnotations;

    /**
     * @return Additional annotations to apply to all generated
     * Kubernetes objects.
     * 
     */
    public Output<Optional<Map<String,String>>> extraAnnotations() {
        return Codegen.optional(this.extraAnnotations);
    }
    /**
     * Additional labels to apply to all generated Kubernetes
     * objects.
     * 
     * This resource also directly accepts all vault.Mount fields.
     * 
     */
    @Export(name="extraLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> extraLabels;

    /**
     * @return Additional labels to apply to all generated Kubernetes
     * objects.
     * 
     * This resource also directly accepts all vault.Mount fields.
     * 
     */
    public Output<Optional<Map<String,String>>> extraLabels() {
        return Codegen.optional(this.extraLabels);
    }
    /**
     * The Role or ClusterRole rules to use when generating
     * a role. Accepts either JSON or YAML formatted rules. Mutually exclusive with `service_account_name`
     * and `kubernetes_role_name`. If set, the entire chain of Kubernetes objects will be generated
     * when credentials are requested.
     * 
     */
    @Export(name="generatedRoleRules", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> generatedRoleRules;

    /**
     * @return The Role or ClusterRole rules to use when generating
     * a role. Accepts either JSON or YAML formatted rules. Mutually exclusive with `service_account_name`
     * and `kubernetes_role_name`. If set, the entire chain of Kubernetes objects will be generated
     * when credentials are requested.
     * 
     */
    public Output<Optional<String>> generatedRoleRules() {
        return Codegen.optional(this.generatedRoleRules);
    }
    /**
     * The pre-existing Role or ClusterRole to bind a
     * generated service account to. Mutually exclusive with `service_account_name` and
     * `generated_role_rules`. If set, Kubernetes token, service account, and role
     * binding objects will be created when credentials are requested.
     * 
     */
    @Export(name="kubernetesRoleName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kubernetesRoleName;

    /**
     * @return The pre-existing Role or ClusterRole to bind a
     * generated service account to. Mutually exclusive with `service_account_name` and
     * `generated_role_rules`. If set, Kubernetes token, service account, and role
     * binding objects will be created when credentials are requested.
     * 
     */
    public Output<Optional<String>> kubernetesRoleName() {
        return Codegen.optional(this.kubernetesRoleName);
    }
    /**
     * Specifies whether the Kubernetes role is a Role or
     * ClusterRole.
     * 
     */
    @Export(name="kubernetesRoleType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kubernetesRoleType;

    /**
     * @return Specifies whether the Kubernetes role is a Role or
     * ClusterRole.
     * 
     */
    public Output<Optional<String>> kubernetesRoleType() {
        return Codegen.optional(this.kubernetesRoleType);
    }
    /**
     * The name of the role.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the role.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name template to use when generating service accounts,
     * roles and role bindings. If unset, a default template is used.
     * 
     */
    @Export(name="nameTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nameTemplate;

    /**
     * @return The name template to use when generating service accounts,
     * roles and role bindings. If unset, a default template is used.
     * 
     */
    public Output<Optional<String>> nameTemplate() {
        return Codegen.optional(this.nameTemplate);
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * The pre-existing service account to generate tokens for.
     * Mutually exclusive with `kubernetes_role_name` and `generated_role_rules`. If set, only a
     * Kubernetes token will be created when credentials are requested.
     * 
     */
    @Export(name="serviceAccountName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceAccountName;

    /**
     * @return The pre-existing service account to generate tokens for.
     * Mutually exclusive with `kubernetes_role_name` and `generated_role_rules`. If set, only a
     * Kubernetes token will be created when credentials are requested.
     * 
     */
    public Output<Optional<String>> serviceAccountName() {
        return Codegen.optional(this.serviceAccountName);
    }
    /**
     * The default TTL for generated Kubernetes tokens in seconds.
     * 
     */
    @Export(name="tokenDefaultTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tokenDefaultTtl;

    /**
     * @return The default TTL for generated Kubernetes tokens in seconds.
     * 
     */
    public Output<Optional<Integer>> tokenDefaultTtl() {
        return Codegen.optional(this.tokenDefaultTtl);
    }
    /**
     * The maximum TTL for generated Kubernetes tokens in seconds.
     * 
     */
    @Export(name="tokenMaxTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tokenMaxTtl;

    /**
     * @return The maximum TTL for generated Kubernetes tokens in seconds.
     * 
     */
    public Output<Optional<Integer>> tokenMaxTtl() {
        return Codegen.optional(this.tokenMaxTtl);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretBackendRole(String name) {
        this(name, SecretBackendRoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretBackendRole(String name, SecretBackendRoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretBackendRole(String name, SecretBackendRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:kubernetes/secretBackendRole:SecretBackendRole", name, args == null ? SecretBackendRoleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SecretBackendRole(String name, Output<String> id, @Nullable SecretBackendRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:kubernetes/secretBackendRole:SecretBackendRole", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretBackendRole get(String name, Output<String> id, @Nullable SecretBackendRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecretBackendRole(name, id, state, options);
    }
}
