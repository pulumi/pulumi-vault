// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretBackendConfigIssuersState extends com.pulumi.resources.ResourceArgs {

    public static final SecretBackendConfigIssuersState Empty = new SecretBackendConfigIssuersState();

    /**
     * The path the PKI secret backend is mounted at, with no
     * leading or trailing `/`s.
     * 
     */
    @Import(name="backend")
    private @Nullable Output<String> backend;

    /**
     * @return The path the PKI secret backend is mounted at, with no
     * leading or trailing `/`s.
     * 
     */
    public Optional<Output<String>> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * Specifies the default issuer by ID.
     * 
     */
    @Import(name="default")
    private @Nullable Output<String> default_;

    /**
     * @return Specifies the default issuer by ID.
     * 
     */
    public Optional<Output<String>> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * Specifies whether a root creation
     * or an issuer import operation updates the default issuer to the newly added issuer.
     * 
     */
    @Import(name="defaultFollowsLatestIssuer")
    private @Nullable Output<Boolean> defaultFollowsLatestIssuer;

    /**
     * @return Specifies whether a root creation
     * or an issuer import operation updates the default issuer to the newly added issuer.
     * 
     */
    public Optional<Output<Boolean>> defaultFollowsLatestIssuer() {
        return Optional.ofNullable(this.defaultFollowsLatestIssuer);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private SecretBackendConfigIssuersState() {}

    private SecretBackendConfigIssuersState(SecretBackendConfigIssuersState $) {
        this.backend = $.backend;
        this.default_ = $.default_;
        this.defaultFollowsLatestIssuer = $.defaultFollowsLatestIssuer;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretBackendConfigIssuersState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretBackendConfigIssuersState $;

        public Builder() {
            $ = new SecretBackendConfigIssuersState();
        }

        public Builder(SecretBackendConfigIssuersState defaults) {
            $ = new SecretBackendConfigIssuersState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The path the PKI secret backend is mounted at, with no
         * leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The path the PKI secret backend is mounted at, with no
         * leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param default_ Specifies the default issuer by ID.
         * 
         * @return builder
         * 
         */
        public Builder default_(@Nullable Output<String> default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param default_ Specifies the default issuer by ID.
         * 
         * @return builder
         * 
         */
        public Builder default_(String default_) {
            return default_(Output.of(default_));
        }

        /**
         * @param defaultFollowsLatestIssuer Specifies whether a root creation
         * or an issuer import operation updates the default issuer to the newly added issuer.
         * 
         * @return builder
         * 
         */
        public Builder defaultFollowsLatestIssuer(@Nullable Output<Boolean> defaultFollowsLatestIssuer) {
            $.defaultFollowsLatestIssuer = defaultFollowsLatestIssuer;
            return this;
        }

        /**
         * @param defaultFollowsLatestIssuer Specifies whether a root creation
         * or an issuer import operation updates the default issuer to the newly added issuer.
         * 
         * @return builder
         * 
         */
        public Builder defaultFollowsLatestIssuer(Boolean defaultFollowsLatestIssuer) {
            return defaultFollowsLatestIssuer(Output.of(defaultFollowsLatestIssuer));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public SecretBackendConfigIssuersState build() {
            return $;
        }
    }

}
