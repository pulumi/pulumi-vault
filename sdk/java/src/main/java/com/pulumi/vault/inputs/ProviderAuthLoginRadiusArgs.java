// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderAuthLoginRadiusArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderAuthLoginRadiusArgs Empty = new ProviderAuthLoginRadiusArgs();

    @Import(name="mount")
    private @Nullable Output<String> mount;

    public Optional<Output<String>> mount() {
        return Optional.ofNullable(this.mount);
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="password", required=true)
    private Output<String> password;

    public Output<String> password() {
        return this.password;
    }

    @Import(name="useRootNamespace")
    private @Nullable Output<Boolean> useRootNamespace;

    public Optional<Output<Boolean>> useRootNamespace() {
        return Optional.ofNullable(this.useRootNamespace);
    }

    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private ProviderAuthLoginRadiusArgs() {}

    private ProviderAuthLoginRadiusArgs(ProviderAuthLoginRadiusArgs $) {
        this.mount = $.mount;
        this.namespace = $.namespace;
        this.password = $.password;
        this.useRootNamespace = $.useRootNamespace;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderAuthLoginRadiusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderAuthLoginRadiusArgs $;

        public Builder() {
            $ = new ProviderAuthLoginRadiusArgs();
        }

        public Builder(ProviderAuthLoginRadiusArgs defaults) {
            $ = new ProviderAuthLoginRadiusArgs(Objects.requireNonNull(defaults));
        }

        public Builder mount(@Nullable Output<String> mount) {
            $.mount = mount;
            return this;
        }

        public Builder mount(String mount) {
            return mount(Output.of(mount));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder useRootNamespace(@Nullable Output<Boolean> useRootNamespace) {
            $.useRootNamespace = useRootNamespace;
            return this;
        }

        public Builder useRootNamespace(Boolean useRootNamespace) {
            return useRootNamespace(Output.of(useRootNamespace));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ProviderAuthLoginRadiusArgs build() {
            if ($.password == null) {
                throw new MissingRequiredPropertyException("ProviderAuthLoginRadiusArgs", "password");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("ProviderAuthLoginRadiusArgs", "username");
            }
            return $;
        }
    }

}
