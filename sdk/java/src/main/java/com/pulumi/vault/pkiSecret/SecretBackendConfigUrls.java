// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.pkiSecret.SecretBackendConfigUrlsArgs;
import com.pulumi.vault.pkiSecret.inputs.SecretBackendConfigUrlsState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allows setting the issuing certificate endpoints, CRL distribution points, and OCSP server endpoints that will be encoded into issued certificates.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.Mount;
 * import com.pulumi.vault.MountArgs;
 * import com.pulumi.vault.pkiSecret.SecretBackendConfigUrls;
 * import com.pulumi.vault.pkiSecret.SecretBackendConfigUrlsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var root = new Mount("root", MountArgs.builder()
 *             .path("pki-root")
 *             .type("pki")
 *             .description("root PKI")
 *             .defaultLeaseTtlSeconds(8640000)
 *             .maxLeaseTtlSeconds(8640000)
 *             .build());
 * 
 *         var example = new SecretBackendConfigUrls("example", SecretBackendConfigUrlsArgs.builder()
 *             .backend(root.path())
 *             .issuingCertificates("http://127.0.0.1:8200/v1/pki/ca")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * The PKI config URLs can be imported using the resource&#39;s `id`.
 * In the case of the example above the `id` would be `pki-root/config/urls`,
 * where the `pki-root` component is the resource&#39;s `backend`, e.g.
 * 
 * ```sh
 * $ pulumi import vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls example pki-root/config/urls
 * ```
 * 
 */
@ResourceType(type="vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls")
public class SecretBackendConfigUrls extends com.pulumi.resources.CustomResource {
    /**
     * The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
     * 
     */
    @Export(name="backend", refs={String.class}, tree="[0]")
    private Output<String> backend;

    /**
     * @return The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }
    /**
     * Specifies the URL values for the CRL Distribution Points field.
     * 
     */
    @Export(name="crlDistributionPoints", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> crlDistributionPoints;

    /**
     * @return Specifies the URL values for the CRL Distribution Points field.
     * 
     */
    public Output<Optional<List<String>>> crlDistributionPoints() {
        return Codegen.optional(this.crlDistributionPoints);
    }
    /**
     * Specifies that templating of AIA fields is allowed.
     * 
     */
    @Export(name="enableTemplating", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableTemplating;

    /**
     * @return Specifies that templating of AIA fields is allowed.
     * 
     */
    public Output<Optional<Boolean>> enableTemplating() {
        return Codegen.optional(this.enableTemplating);
    }
    /**
     * Specifies the URL values for the Issuing Certificate field.
     * 
     */
    @Export(name="issuingCertificates", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> issuingCertificates;

    /**
     * @return Specifies the URL values for the Issuing Certificate field.
     * 
     */
    public Output<Optional<List<String>>> issuingCertificates() {
        return Codegen.optional(this.issuingCertificates);
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Specifies the URL values for the OCSP Servers field.
     * 
     */
    @Export(name="ocspServers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ocspServers;

    /**
     * @return Specifies the URL values for the OCSP Servers field.
     * 
     */
    public Output<Optional<List<String>>> ocspServers() {
        return Codegen.optional(this.ocspServers);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretBackendConfigUrls(java.lang.String name) {
        this(name, SecretBackendConfigUrlsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretBackendConfigUrls(java.lang.String name, SecretBackendConfigUrlsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretBackendConfigUrls(java.lang.String name, SecretBackendConfigUrlsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecretBackendConfigUrls(java.lang.String name, Output<java.lang.String> id, @Nullable SecretBackendConfigUrlsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls", name, state, makeResourceOptions(options, id), false);
    }

    private static SecretBackendConfigUrlsArgs makeArgs(SecretBackendConfigUrlsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecretBackendConfigUrlsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretBackendConfigUrls get(java.lang.String name, Output<java.lang.String> id, @Nullable SecretBackendConfigUrlsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecretBackendConfigUrls(name, id, state, options);
    }
}
