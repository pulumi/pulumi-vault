// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackendKeyResult {
    private String backend;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return ID of the key.
     * 
     */
    private String keyId;
    /**
     * @return Name of the key.
     * 
     */
    private String keyName;
    private String keyRef;
    /**
     * @return Type of the key.
     * 
     */
    private String keyType;
    private @Nullable String namespace;

    private GetBackendKeyResult() {}
    public String backend() {
        return this.backend;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of the key.
     * 
     */
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return Name of the key.
     * 
     */
    public String keyName() {
        return this.keyName;
    }
    public String keyRef() {
        return this.keyRef;
    }
    /**
     * @return Type of the key.
     * 
     */
    public String keyType() {
        return this.keyType;
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backend;
        private String id;
        private String keyId;
        private String keyName;
        private String keyRef;
        private String keyType;
        private @Nullable String namespace;
        public Builder() {}
        public Builder(GetBackendKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backend = defaults.backend;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.keyName = defaults.keyName;
    	      this.keyRef = defaults.keyRef;
    	      this.keyType = defaults.keyType;
    	      this.namespace = defaults.namespace;
        }

        @CustomType.Setter
        public Builder backend(String backend) {
            if (backend == null) {
              throw new MissingRequiredPropertyException("GetBackendKeyResult", "backend");
            }
            this.backend = backend;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBackendKeyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            if (keyId == null) {
              throw new MissingRequiredPropertyException("GetBackendKeyResult", "keyId");
            }
            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder keyName(String keyName) {
            if (keyName == null) {
              throw new MissingRequiredPropertyException("GetBackendKeyResult", "keyName");
            }
            this.keyName = keyName;
            return this;
        }
        @CustomType.Setter
        public Builder keyRef(String keyRef) {
            if (keyRef == null) {
              throw new MissingRequiredPropertyException("GetBackendKeyResult", "keyRef");
            }
            this.keyRef = keyRef;
            return this;
        }
        @CustomType.Setter
        public Builder keyType(String keyType) {
            if (keyType == null) {
              throw new MissingRequiredPropertyException("GetBackendKeyResult", "keyType");
            }
            this.keyType = keyType;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        public GetBackendKeyResult build() {
            final var _resultValue = new GetBackendKeyResult();
            _resultValue.backend = backend;
            _resultValue.id = id;
            _resultValue.keyId = keyId;
            _resultValue.keyName = keyName;
            _resultValue.keyRef = keyRef;
            _resultValue.keyType = keyType;
            _resultValue.namespace = namespace;
            return _resultValue;
        }
    }
}
