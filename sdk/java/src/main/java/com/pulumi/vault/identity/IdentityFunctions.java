// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.identity.inputs.GetEntityArgs;
import com.pulumi.vault.identity.inputs.GetEntityPlainArgs;
import com.pulumi.vault.identity.inputs.GetGroupArgs;
import com.pulumi.vault.identity.inputs.GetGroupPlainArgs;
import com.pulumi.vault.identity.inputs.GetOidcClientCredsArgs;
import com.pulumi.vault.identity.inputs.GetOidcClientCredsPlainArgs;
import com.pulumi.vault.identity.inputs.GetOidcOpenidConfigArgs;
import com.pulumi.vault.identity.inputs.GetOidcOpenidConfigPlainArgs;
import com.pulumi.vault.identity.inputs.GetOidcPublicKeysArgs;
import com.pulumi.vault.identity.inputs.GetOidcPublicKeysPlainArgs;
import com.pulumi.vault.identity.outputs.GetEntityResult;
import com.pulumi.vault.identity.outputs.GetGroupResult;
import com.pulumi.vault.identity.outputs.GetOidcClientCredsResult;
import com.pulumi.vault.identity.outputs.GetOidcOpenidConfigResult;
import com.pulumi.vault.identity.outputs.GetOidcPublicKeysResult;
import java.util.concurrent.CompletableFuture;

public final class IdentityFunctions {
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var entity = IdentityFunctions.getEntity(GetEntityArgs.builder()
     *             .entityName(&#34;entity_12345&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/entity`.
     * 
     */
    public static Output<GetEntityResult> getEntity() {
        return getEntity(GetEntityArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var entity = IdentityFunctions.getEntity(GetEntityArgs.builder()
     *             .entityName(&#34;entity_12345&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/entity`.
     * 
     */
    public static CompletableFuture<GetEntityResult> getEntityPlain() {
        return getEntityPlain(GetEntityPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var entity = IdentityFunctions.getEntity(GetEntityArgs.builder()
     *             .entityName(&#34;entity_12345&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/entity`.
     * 
     */
    public static Output<GetEntityResult> getEntity(GetEntityArgs args) {
        return getEntity(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var entity = IdentityFunctions.getEntity(GetEntityArgs.builder()
     *             .entityName(&#34;entity_12345&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/entity`.
     * 
     */
    public static CompletableFuture<GetEntityResult> getEntityPlain(GetEntityPlainArgs args) {
        return getEntityPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var entity = IdentityFunctions.getEntity(GetEntityArgs.builder()
     *             .entityName(&#34;entity_12345&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/entity`.
     * 
     */
    public static Output<GetEntityResult> getEntity(GetEntityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("vault:identity/getEntity:getEntity", TypeShape.of(GetEntityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var entity = IdentityFunctions.getEntity(GetEntityArgs.builder()
     *             .entityName(&#34;entity_12345&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/entity`.
     * 
     */
    public static CompletableFuture<GetEntityResult> getEntityPlain(GetEntityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("vault:identity/getEntity:getEntity", TypeShape.of(GetEntityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = IdentityFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/group`.
     * 
     */
    public static Output<GetGroupResult> getGroup() {
        return getGroup(GetGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = IdentityFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/group`.
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain() {
        return getGroupPlain(GetGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = IdentityFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/group`.
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args) {
        return getGroup(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = IdentityFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/group`.
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args) {
        return getGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = IdentityFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/group`.
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("vault:identity/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = IdentityFunctions.getGroup(GetGroupArgs.builder()
     *             .groupName(&#34;user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Required Vault Capabilities
     * 
     * Use of this resource requires the `create` capability on `/identity/lookup/group`.
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("vault:identity/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcClientCredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         final var creds = IdentityFunctions.getOidcClientCreds(GetOidcClientCredsArgs.builder()
     *             .name(app.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOidcClientCredsResult> getOidcClientCreds(GetOidcClientCredsArgs args) {
        return getOidcClientCreds(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcClientCredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         final var creds = IdentityFunctions.getOidcClientCreds(GetOidcClientCredsArgs.builder()
     *             .name(app.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOidcClientCredsResult> getOidcClientCredsPlain(GetOidcClientCredsPlainArgs args) {
        return getOidcClientCredsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcClientCredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         final var creds = IdentityFunctions.getOidcClientCreds(GetOidcClientCredsArgs.builder()
     *             .name(app.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOidcClientCredsResult> getOidcClientCreds(GetOidcClientCredsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("vault:identity/getOidcClientCreds:getOidcClientCreds", TypeShape.of(GetOidcClientCredsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcClientCredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         final var creds = IdentityFunctions.getOidcClientCreds(GetOidcClientCredsArgs.builder()
     *             .name(app.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOidcClientCredsResult> getOidcClientCredsPlain(GetOidcClientCredsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("vault:identity/getOidcClientCreds:getOidcClientCreds", TypeShape.of(GetOidcClientCredsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcOpenidConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var config = IdentityFunctions.getOidcOpenidConfig(GetOidcOpenidConfigArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOidcOpenidConfigResult> getOidcOpenidConfig(GetOidcOpenidConfigArgs args) {
        return getOidcOpenidConfig(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcOpenidConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var config = IdentityFunctions.getOidcOpenidConfig(GetOidcOpenidConfigArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOidcOpenidConfigResult> getOidcOpenidConfigPlain(GetOidcOpenidConfigPlainArgs args) {
        return getOidcOpenidConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcOpenidConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var config = IdentityFunctions.getOidcOpenidConfig(GetOidcOpenidConfigArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOidcOpenidConfigResult> getOidcOpenidConfig(GetOidcOpenidConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("vault:identity/getOidcOpenidConfig:getOidcOpenidConfig", TypeShape.of(GetOidcOpenidConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcOpenidConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var config = IdentityFunctions.getOidcOpenidConfig(GetOidcOpenidConfigArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOidcOpenidConfigResult> getOidcOpenidConfigPlain(GetOidcOpenidConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("vault:identity/getOidcOpenidConfig:getOidcOpenidConfig", TypeShape.of(GetOidcOpenidConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcPublicKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var publicKeys = IdentityFunctions.getOidcPublicKeys(GetOidcPublicKeysArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOidcPublicKeysResult> getOidcPublicKeys(GetOidcPublicKeysArgs args) {
        return getOidcPublicKeys(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcPublicKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var publicKeys = IdentityFunctions.getOidcPublicKeys(GetOidcPublicKeysArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOidcPublicKeysResult> getOidcPublicKeysPlain(GetOidcPublicKeysPlainArgs args) {
        return getOidcPublicKeysPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcPublicKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var publicKeys = IdentityFunctions.getOidcPublicKeys(GetOidcPublicKeysArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOidcPublicKeysResult> getOidcPublicKeys(GetOidcPublicKeysArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("vault:identity/getOidcPublicKeys:getOidcPublicKeys", TypeShape.of(GetOidcPublicKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.vault.identity.OidcKey;
     * import com.pulumi.vault.identity.OidcKeyArgs;
     * import com.pulumi.vault.identity.OidcClient;
     * import com.pulumi.vault.identity.OidcClientArgs;
     * import com.pulumi.vault.identity.OidcProvider;
     * import com.pulumi.vault.identity.OidcProviderArgs;
     * import com.pulumi.vault.identity.IdentityFunctions;
     * import com.pulumi.vault.identity.inputs.GetOidcPublicKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new OidcKey(&#34;key&#34;, OidcKeyArgs.builder()        
     *             .allowedClientIds(&#34;*&#34;)
     *             .rotationPeriod(3600)
     *             .verificationTtl(3600)
     *             .build());
     * 
     *         var app = new OidcClient(&#34;app&#34;, OidcClientArgs.builder()        
     *             .key(key.name())
     *             .redirectUris(            
     *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
     *                 &#34;http://127.0.0.1:8251/callback&#34;,
     *                 &#34;http://127.0.0.1:8080/callback&#34;)
     *             .idTokenTtl(2400)
     *             .accessTokenTtl(7200)
     *             .build());
     * 
     *         var provider = new OidcProvider(&#34;provider&#34;, OidcProviderArgs.builder()        
     *             .allowedClientIds(vault_identity_oidc_client.test().client_id())
     *             .build());
     * 
     *         final var publicKeys = IdentityFunctions.getOidcPublicKeys(GetOidcPublicKeysArgs.builder()
     *             .name(provider.name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOidcPublicKeysResult> getOidcPublicKeysPlain(GetOidcPublicKeysPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("vault:identity/getOidcPublicKeys:getOidcPublicKeys", TypeShape.of(GetOidcPublicKeysResult.class), args, Utilities.withVersion(options));
    }
}
