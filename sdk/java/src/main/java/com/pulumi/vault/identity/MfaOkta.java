// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.identity.MfaOktaArgs;
import com.pulumi.vault.identity.inputs.MfaOktaState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for configuring the okta MFA method.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.identity.MfaOkta;
 * import com.pulumi.vault.identity.MfaOktaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new MfaOkta("example", MfaOktaArgs.builder()
 *             .orgName("org1")
 *             .apiToken("token1")
 *             .baseUrl("qux.baz.com")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource can be imported using its `uuid` field, e.g.
 * 
 * ```sh
 * $ pulumi import vault:identity/mfaOkta:MfaOkta example 0d89c36a-4ff5-4d70-8749-bb6a5598aeec
 * ```
 * 
 */
@ResourceType(type="vault:identity/mfaOkta:MfaOkta")
public class MfaOkta extends com.pulumi.resources.CustomResource {
    /**
     * Okta API token.
     * 
     */
    @Export(name="apiToken", refs={String.class}, tree="[0]")
    private Output<String> apiToken;

    /**
     * @return Okta API token.
     * 
     */
    public Output<String> apiToken() {
        return this.apiToken;
    }
    /**
     * The base domain to use for API requests.
     * 
     */
    @Export(name="baseUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> baseUrl;

    /**
     * @return The base domain to use for API requests.
     * 
     */
    public Output<Optional<String>> baseUrl() {
        return Codegen.optional(this.baseUrl);
    }
    /**
     * Method ID.
     * 
     */
    @Export(name="methodId", refs={String.class}, tree="[0]")
    private Output<String> methodId;

    /**
     * @return Method ID.
     * 
     */
    public Output<String> methodId() {
        return this.methodId;
    }
    /**
     * Mount accessor.
     * 
     */
    @Export(name="mountAccessor", refs={String.class}, tree="[0]")
    private Output<String> mountAccessor;

    /**
     * @return Mount accessor.
     * 
     */
    public Output<String> mountAccessor() {
        return this.mountAccessor;
    }
    /**
     * Method name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Method name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Target namespace. (requires Enterprise)
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return Target namespace. (requires Enterprise)
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Method&#39;s namespace ID.
     * 
     */
    @Export(name="namespaceId", refs={String.class}, tree="[0]")
    private Output<String> namespaceId;

    /**
     * @return Method&#39;s namespace ID.
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }
    /**
     * Method&#39;s namespace path.
     * 
     */
    @Export(name="namespacePath", refs={String.class}, tree="[0]")
    private Output<String> namespacePath;

    /**
     * @return Method&#39;s namespace path.
     * 
     */
    public Output<String> namespacePath() {
        return this.namespacePath;
    }
    /**
     * Name of the organization to be used in the Okta API.
     * 
     */
    @Export(name="orgName", refs={String.class}, tree="[0]")
    private Output<String> orgName;

    /**
     * @return Name of the organization to be used in the Okta API.
     * 
     */
    public Output<String> orgName() {
        return this.orgName;
    }
    /**
     * Only match the primary email for the account.
     * 
     */
    @Export(name="primaryEmail", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> primaryEmail;

    /**
     * @return Only match the primary email for the account.
     * 
     */
    public Output<Optional<Boolean>> primaryEmail() {
        return Codegen.optional(this.primaryEmail);
    }
    /**
     * MFA type.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return MFA type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * A template string for mapping Identity names to MFA methods.
     * 
     */
    @Export(name="usernameFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> usernameFormat;

    /**
     * @return A template string for mapping Identity names to MFA methods.
     * 
     */
    public Output<Optional<String>> usernameFormat() {
        return Codegen.optional(this.usernameFormat);
    }
    /**
     * Resource UUID.
     * 
     */
    @Export(name="uuid", refs={String.class}, tree="[0]")
    private Output<String> uuid;

    /**
     * @return Resource UUID.
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MfaOkta(java.lang.String name) {
        this(name, MfaOktaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MfaOkta(java.lang.String name, MfaOktaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MfaOkta(java.lang.String name, MfaOktaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:identity/mfaOkta:MfaOkta", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MfaOkta(java.lang.String name, Output<java.lang.String> id, @Nullable MfaOktaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:identity/mfaOkta:MfaOkta", name, state, makeResourceOptions(options, id), false);
    }

    private static MfaOktaArgs makeArgs(MfaOktaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MfaOktaArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "apiToken"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MfaOkta get(java.lang.String name, Output<java.lang.String> id, @Nullable MfaOktaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MfaOkta(name, id, state, options);
    }
}
