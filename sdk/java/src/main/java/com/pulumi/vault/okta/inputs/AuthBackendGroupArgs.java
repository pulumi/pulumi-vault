// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AuthBackendGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthBackendGroupArgs Empty = new AuthBackendGroupArgs();

    /**
     * Name of the group within the Okta
     * 
     */
    @Import(name="groupName", required=true)
    private Output<String> groupName;

    /**
     * @return Name of the group within the Okta
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }

    /**
     * Vault policies to associate with this group
     * 
     */
    @Import(name="policies", required=true)
    private Output<List<String>> policies;

    /**
     * @return Vault policies to associate with this group
     * 
     */
    public Output<List<String>> policies() {
        return this.policies;
    }

    private AuthBackendGroupArgs() {}

    private AuthBackendGroupArgs(AuthBackendGroupArgs $) {
        this.groupName = $.groupName;
        this.policies = $.policies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthBackendGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthBackendGroupArgs $;

        public Builder() {
            $ = new AuthBackendGroupArgs();
        }

        public Builder(AuthBackendGroupArgs defaults) {
            $ = new AuthBackendGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupName Name of the group within the Okta
         * 
         * @return builder
         * 
         */
        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName Name of the group within the Okta
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param policies Vault policies to associate with this group
         * 
         * @return builder
         * 
         */
        public Builder policies(Output<List<String>> policies) {
            $.policies = policies;
            return this;
        }

        /**
         * @param policies Vault policies to associate with this group
         * 
         * @return builder
         * 
         */
        public Builder policies(List<String> policies) {
            return policies(Output.of(policies));
        }

        /**
         * @param policies Vault policies to associate with this group
         * 
         * @return builder
         * 
         */
        public Builder policies(String... policies) {
            return policies(List.of(policies));
        }

        public AuthBackendGroupArgs build() {
            if ($.groupName == null) {
                throw new MissingRequiredPropertyException("AuthBackendGroupArgs", "groupName");
            }
            if ($.policies == null) {
                throw new MissingRequiredPropertyException("AuthBackendGroupArgs", "policies");
            }
            return $;
        }
    }

}
