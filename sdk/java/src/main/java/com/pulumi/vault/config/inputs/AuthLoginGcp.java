// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.config.inputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuthLoginGcp {
    /**
     * @return Path to the Google Cloud credentials file.
     * 
     */
    private @Nullable String credentials;
    /**
     * @return A signed JSON Web Token.
     * 
     */
    private @Nullable String jwt;
    /**
     * @return The path where the authentication engine is mounted.
     * 
     */
    private @Nullable String mount;
    /**
     * @return The authentication engine&#39;s namespace. Conflicts with use_root_namespace
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Name of the login role.
     * 
     */
    private String role;
    /**
     * @return IAM service account.
     * 
     */
    private @Nullable String serviceAccount;
    /**
     * @return Authenticate to the root Vault namespace. Conflicts with namespace
     * 
     */
    private @Nullable Boolean useRootNamespace;

    private AuthLoginGcp() {}
    /**
     * @return Path to the Google Cloud credentials file.
     * 
     */
    public Optional<String> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return A signed JSON Web Token.
     * 
     */
    public Optional<String> jwt() {
        return Optional.ofNullable(this.jwt);
    }
    /**
     * @return The path where the authentication engine is mounted.
     * 
     */
    public Optional<String> mount() {
        return Optional.ofNullable(this.mount);
    }
    /**
     * @return The authentication engine&#39;s namespace. Conflicts with use_root_namespace
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Name of the login role.
     * 
     */
    public String role() {
        return this.role;
    }
    /**
     * @return IAM service account.
     * 
     */
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    /**
     * @return Authenticate to the root Vault namespace. Conflicts with namespace
     * 
     */
    public Optional<Boolean> useRootNamespace() {
        return Optional.ofNullable(this.useRootNamespace);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthLoginGcp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String credentials;
        private @Nullable String jwt;
        private @Nullable String mount;
        private @Nullable String namespace;
        private String role;
        private @Nullable String serviceAccount;
        private @Nullable Boolean useRootNamespace;
        public Builder() {}
        public Builder(AuthLoginGcp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.jwt = defaults.jwt;
    	      this.mount = defaults.mount;
    	      this.namespace = defaults.namespace;
    	      this.role = defaults.role;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.useRootNamespace = defaults.useRootNamespace;
        }

        @CustomType.Setter
        public Builder credentials(@Nullable String credentials) {

            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder jwt(@Nullable String jwt) {

            this.jwt = jwt;
            return this;
        }
        @CustomType.Setter
        public Builder mount(@Nullable String mount) {

            this.mount = mount;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("AuthLoginGcp", "role");
            }
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(@Nullable String serviceAccount) {

            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder useRootNamespace(@Nullable Boolean useRootNamespace) {

            this.useRootNamespace = useRootNamespace;
            return this;
        }
        public AuthLoginGcp build() {
            final var _resultValue = new AuthLoginGcp();
            _resultValue.credentials = credentials;
            _resultValue.jwt = jwt;
            _resultValue.mount = mount;
            _resultValue.namespace = namespace;
            _resultValue.role = role;
            _resultValue.serviceAccount = serviceAccount;
            _resultValue.useRootNamespace = useRootNamespace;
            return _resultValue;
        }
    }
}
