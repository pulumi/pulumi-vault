// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.gcp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.vault.gcp.inputs.SecretRolesetBindingArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretRolesetState extends com.pulumi.resources.ResourceArgs {

    public static final SecretRolesetState Empty = new SecretRolesetState();

    /**
     * Path where the GCP Secrets Engine is mounted
     * 
     */
    @Import(name="backend")
    private @Nullable Output<String> backend;

    /**
     * @return Path where the GCP Secrets Engine is mounted
     * 
     */
    public Optional<Output<String>> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * Bindings to create for this roleset. This can be specified multiple times for multiple bindings. Structure is documented below.
     * 
     */
    @Import(name="bindings")
    private @Nullable Output<List<SecretRolesetBindingArgs>> bindings;

    /**
     * @return Bindings to create for this roleset. This can be specified multiple times for multiple bindings. Structure is documented below.
     * 
     */
    public Optional<Output<List<SecretRolesetBindingArgs>>> bindings() {
        return Optional.ofNullable(this.bindings);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Name of the GCP project that this roleset&#39;s service account will belong to.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Name of the GCP project that this roleset&#39;s service account will belong to.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Name of the Roleset to create
     * 
     */
    @Import(name="roleset")
    private @Nullable Output<String> roleset;

    /**
     * @return Name of the Roleset to create
     * 
     */
    public Optional<Output<String>> roleset() {
        return Optional.ofNullable(this.roleset);
    }

    /**
     * Type of secret generated for this role set. Accepted values: `access_token`, `service_account_key`. Defaults to `access_token`.
     * 
     */
    @Import(name="secretType")
    private @Nullable Output<String> secretType;

    /**
     * @return Type of secret generated for this role set. Accepted values: `access_token`, `service_account_key`. Defaults to `access_token`.
     * 
     */
    public Optional<Output<String>> secretType() {
        return Optional.ofNullable(this.secretType);
    }

    /**
     * Email of the service account created by Vault for this Roleset.
     * 
     */
    @Import(name="serviceAccountEmail")
    private @Nullable Output<String> serviceAccountEmail;

    /**
     * @return Email of the service account created by Vault for this Roleset.
     * 
     */
    public Optional<Output<String>> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }

    /**
     * List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only).
     * 
     */
    @Import(name="tokenScopes")
    private @Nullable Output<List<String>> tokenScopes;

    /**
     * @return List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only).
     * 
     */
    public Optional<Output<List<String>>> tokenScopes() {
        return Optional.ofNullable(this.tokenScopes);
    }

    private SecretRolesetState() {}

    private SecretRolesetState(SecretRolesetState $) {
        this.backend = $.backend;
        this.bindings = $.bindings;
        this.namespace = $.namespace;
        this.project = $.project;
        this.roleset = $.roleset;
        this.secretType = $.secretType;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.tokenScopes = $.tokenScopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretRolesetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretRolesetState $;

        public Builder() {
            $ = new SecretRolesetState();
        }

        public Builder(SecretRolesetState defaults) {
            $ = new SecretRolesetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend Path where the GCP Secrets Engine is mounted
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend Path where the GCP Secrets Engine is mounted
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param bindings Bindings to create for this roleset. This can be specified multiple times for multiple bindings. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bindings(@Nullable Output<List<SecretRolesetBindingArgs>> bindings) {
            $.bindings = bindings;
            return this;
        }

        /**
         * @param bindings Bindings to create for this roleset. This can be specified multiple times for multiple bindings. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bindings(List<SecretRolesetBindingArgs> bindings) {
            return bindings(Output.of(bindings));
        }

        /**
         * @param bindings Bindings to create for this roleset. This can be specified multiple times for multiple bindings. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bindings(SecretRolesetBindingArgs... bindings) {
            return bindings(List.of(bindings));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param project Name of the GCP project that this roleset&#39;s service account will belong to.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Name of the GCP project that this roleset&#39;s service account will belong to.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param roleset Name of the Roleset to create
         * 
         * @return builder
         * 
         */
        public Builder roleset(@Nullable Output<String> roleset) {
            $.roleset = roleset;
            return this;
        }

        /**
         * @param roleset Name of the Roleset to create
         * 
         * @return builder
         * 
         */
        public Builder roleset(String roleset) {
            return roleset(Output.of(roleset));
        }

        /**
         * @param secretType Type of secret generated for this role set. Accepted values: `access_token`, `service_account_key`. Defaults to `access_token`.
         * 
         * @return builder
         * 
         */
        public Builder secretType(@Nullable Output<String> secretType) {
            $.secretType = secretType;
            return this;
        }

        /**
         * @param secretType Type of secret generated for this role set. Accepted values: `access_token`, `service_account_key`. Defaults to `access_token`.
         * 
         * @return builder
         * 
         */
        public Builder secretType(String secretType) {
            return secretType(Output.of(secretType));
        }

        /**
         * @param serviceAccountEmail Email of the service account created by Vault for this Roleset.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        /**
         * @param serviceAccountEmail Email of the service account created by Vault for this Roleset.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        /**
         * @param tokenScopes List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only).
         * 
         * @return builder
         * 
         */
        public Builder tokenScopes(@Nullable Output<List<String>> tokenScopes) {
            $.tokenScopes = tokenScopes;
            return this;
        }

        /**
         * @param tokenScopes List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only).
         * 
         * @return builder
         * 
         */
        public Builder tokenScopes(List<String> tokenScopes) {
            return tokenScopes(Output.of(tokenScopes));
        }

        /**
         * @param tokenScopes List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only).
         * 
         * @return builder
         * 
         */
        public Builder tokenScopes(String... tokenScopes) {
            return tokenScopes(List.of(tokenScopes));
        }

        public SecretRolesetState build() {
            return $;
        }
    }

}
