// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.vault.okta.inputs.AuthBackendGroupArgs;
import com.pulumi.vault.okta.inputs.AuthBackendUserArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthBackendArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthBackendArgs Empty = new AuthBackendArgs();

    /**
     * The Okta url. Examples: oktapreview.com, okta.com
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return The Okta url. Examples: oktapreview.com, okta.com
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.
     * 
     */
    @Import(name="bypassOktaMfa")
    private @Nullable Output<Boolean> bypassOktaMfa;

    /**
     * @return When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.
     * 
     */
    public Optional<Output<Boolean>> bypassOktaMfa() {
        return Optional.ofNullable(this.bypassOktaMfa);
    }

    /**
     * The description of the auth backend
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the auth backend
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * If set, opts out of mount migration on path updates.
     * See here for more info on [Mount Migration](https://www.vaultproject.io/docs/concepts/mount-migration)
     * 
     */
    @Import(name="disableRemount")
    private @Nullable Output<Boolean> disableRemount;

    /**
     * @return If set, opts out of mount migration on path updates.
     * See here for more info on [Mount Migration](https://www.vaultproject.io/docs/concepts/mount-migration)
     * 
     */
    public Optional<Output<Boolean>> disableRemount() {
        return Optional.ofNullable(this.disableRemount);
    }

    /**
     * Associate Okta groups with policies within Vault.
     * See below for more details.
     * 
     */
    @Import(name="groups")
    private @Nullable Output<List<AuthBackendGroupArgs>> groups;

    /**
     * @return Associate Okta groups with policies within Vault.
     * See below for more details.
     * 
     */
    public Optional<Output<List<AuthBackendGroupArgs>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Maximum duration after which authentication will be expired
     * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
     * 
     */
    @Import(name="maxTtl")
    private @Nullable Output<String> maxTtl;

    /**
     * @return Maximum duration after which authentication will be expired
     * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
     * 
     */
    public Optional<Output<String>> maxTtl() {
        return Optional.ofNullable(this.maxTtl);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The Okta organization. This will be the first part of the url `https://XXX.okta.com`
     * 
     */
    @Import(name="organization", required=true)
    private Output<String> organization;

    /**
     * @return The Okta organization. This will be the first part of the url `https://XXX.okta.com`
     * 
     */
    public Output<String> organization() {
        return this.organization;
    }

    /**
     * Path to mount the Okta auth backend. Default to path `okta`.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path to mount the Okta auth backend. Default to path `okta`.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The Okta API token. This is required to query Okta for user group membership.
     * If this is not supplied only locally configured groups will be enabled.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return The Okta API token. This is required to query Okta for user group membership.
     * If this is not supplied only locally configured groups will be enabled.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * Duration after which authentication will be expired.
     * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<String> ttl;

    /**
     * @return Duration after which authentication will be expired.
     * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
     * 
     */
    public Optional<Output<String>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * Associate Okta users with groups or policies within Vault.
     * See below for more details.
     * 
     */
    @Import(name="users")
    private @Nullable Output<List<AuthBackendUserArgs>> users;

    /**
     * @return Associate Okta users with groups or policies within Vault.
     * See below for more details.
     * 
     */
    public Optional<Output<List<AuthBackendUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private AuthBackendArgs() {}

    private AuthBackendArgs(AuthBackendArgs $) {
        this.baseUrl = $.baseUrl;
        this.bypassOktaMfa = $.bypassOktaMfa;
        this.description = $.description;
        this.disableRemount = $.disableRemount;
        this.groups = $.groups;
        this.maxTtl = $.maxTtl;
        this.namespace = $.namespace;
        this.organization = $.organization;
        this.path = $.path;
        this.token = $.token;
        this.ttl = $.ttl;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthBackendArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthBackendArgs $;

        public Builder() {
            $ = new AuthBackendArgs();
        }

        public Builder(AuthBackendArgs defaults) {
            $ = new AuthBackendArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseUrl The Okta url. Examples: oktapreview.com, okta.com
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl The Okta url. Examples: oktapreview.com, okta.com
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param bypassOktaMfa When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.
         * 
         * @return builder
         * 
         */
        public Builder bypassOktaMfa(@Nullable Output<Boolean> bypassOktaMfa) {
            $.bypassOktaMfa = bypassOktaMfa;
            return this;
        }

        /**
         * @param bypassOktaMfa When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.
         * 
         * @return builder
         * 
         */
        public Builder bypassOktaMfa(Boolean bypassOktaMfa) {
            return bypassOktaMfa(Output.of(bypassOktaMfa));
        }

        /**
         * @param description The description of the auth backend
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the auth backend
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param disableRemount If set, opts out of mount migration on path updates.
         * See here for more info on [Mount Migration](https://www.vaultproject.io/docs/concepts/mount-migration)
         * 
         * @return builder
         * 
         */
        public Builder disableRemount(@Nullable Output<Boolean> disableRemount) {
            $.disableRemount = disableRemount;
            return this;
        }

        /**
         * @param disableRemount If set, opts out of mount migration on path updates.
         * See here for more info on [Mount Migration](https://www.vaultproject.io/docs/concepts/mount-migration)
         * 
         * @return builder
         * 
         */
        public Builder disableRemount(Boolean disableRemount) {
            return disableRemount(Output.of(disableRemount));
        }

        /**
         * @param groups Associate Okta groups with policies within Vault.
         * See below for more details.
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<List<AuthBackendGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Associate Okta groups with policies within Vault.
         * See below for more details.
         * 
         * @return builder
         * 
         */
        public Builder groups(List<AuthBackendGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups Associate Okta groups with policies within Vault.
         * See below for more details.
         * 
         * @return builder
         * 
         */
        public Builder groups(AuthBackendGroupArgs... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param maxTtl Maximum duration after which authentication will be expired
         * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
         * 
         * @return builder
         * 
         */
        public Builder maxTtl(@Nullable Output<String> maxTtl) {
            $.maxTtl = maxTtl;
            return this;
        }

        /**
         * @param maxTtl Maximum duration after which authentication will be expired
         * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
         * 
         * @return builder
         * 
         */
        public Builder maxTtl(String maxTtl) {
            return maxTtl(Output.of(maxTtl));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param organization The Okta organization. This will be the first part of the url `https://XXX.okta.com`
         * 
         * @return builder
         * 
         */
        public Builder organization(Output<String> organization) {
            $.organization = organization;
            return this;
        }

        /**
         * @param organization The Okta organization. This will be the first part of the url `https://XXX.okta.com`
         * 
         * @return builder
         * 
         */
        public Builder organization(String organization) {
            return organization(Output.of(organization));
        }

        /**
         * @param path Path to mount the Okta auth backend. Default to path `okta`.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path to mount the Okta auth backend. Default to path `okta`.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param token The Okta API token. This is required to query Okta for user group membership.
         * If this is not supplied only locally configured groups will be enabled.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The Okta API token. This is required to query Okta for user group membership.
         * If this is not supplied only locally configured groups will be enabled.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param ttl Duration after which authentication will be expired.
         * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<String> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl Duration after which authentication will be expired.
         * [See the documentation for info on valid duration formats](https://golang.org/pkg/time/#ParseDuration).
         * 
         * @return builder
         * 
         */
        public Builder ttl(String ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param users Associate Okta users with groups or policies within Vault.
         * See below for more details.
         * 
         * @return builder
         * 
         */
        public Builder users(@Nullable Output<List<AuthBackendUserArgs>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users Associate Okta users with groups or policies within Vault.
         * See below for more details.
         * 
         * @return builder
         * 
         */
        public Builder users(List<AuthBackendUserArgs> users) {
            return users(Output.of(users));
        }

        /**
         * @param users Associate Okta users with groups or policies within Vault.
         * See below for more details.
         * 
         * @return builder
         * 
         */
        public Builder users(AuthBackendUserArgs... users) {
            return users(List.of(users));
        }

        public AuthBackendArgs build() {
            if ($.organization == null) {
                throw new MissingRequiredPropertyException("AuthBackendArgs", "organization");
            }
            return $;
        }
    }

}
