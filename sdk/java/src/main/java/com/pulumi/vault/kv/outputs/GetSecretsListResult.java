// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.kv.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecretsListResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of all secret names listed under the given path.
     * 
     */
    private List<String> names;
    private @Nullable String namespace;
    private String path;

    private GetSecretsListResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of all secret names listed under the given path.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretsListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> names;
        private @Nullable String namespace;
        private String path;
        public Builder() {}
        public Builder(GetSecretsListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.names = defaults.names;
    	      this.namespace = defaults.namespace;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecretsListResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetSecretsListResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetSecretsListResult", "path");
            }
            this.path = path;
            return this;
        }
        public GetSecretsListResult build() {
            final var _resultValue = new GetSecretsListResult();
            _resultValue.id = id;
            _resultValue.names = names;
            _resultValue.namespace = namespace;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
