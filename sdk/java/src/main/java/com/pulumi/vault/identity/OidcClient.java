// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.identity.OidcClientArgs;
import com.pulumi.vault.identity.inputs.OidcClientState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages OIDC Clients in a Vault server. See the [Vault documentation](https://www.vaultproject.io/api-docs/secret/identity/oidc-provider#create-or-update-an-assignment)
 * for more information.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.identity.OidcAssignment;
 * import com.pulumi.vault.identity.OidcAssignmentArgs;
 * import com.pulumi.vault.identity.OidcClient;
 * import com.pulumi.vault.identity.OidcClientArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testOidcAssignment = new OidcAssignment(&#34;testOidcAssignment&#34;, OidcAssignmentArgs.builder()        
 *             .entityIds(&#34;ascbascas-2231a-sdfaa&#34;)
 *             .groupIds(&#34;sajkdsad-32414-sfsada&#34;)
 *             .build());
 * 
 *         var testOidcClient = new OidcClient(&#34;testOidcClient&#34;, OidcClientArgs.builder()        
 *             .redirectUris(            
 *                 &#34;http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback&#34;,
 *                 &#34;http://127.0.0.1:8251/callback&#34;,
 *                 &#34;http://127.0.0.1:8080/callback&#34;)
 *             .assignments(testOidcAssignment.name())
 *             .idTokenTtl(2400)
 *             .accessTokenTtl(7200)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * OIDC Clients can be imported using the `name`, e.g.
 * 
 * ```sh
 * $ pulumi import vault:identity/oidcClient:OidcClient test my-app
 * ```
 * 
 */
@ResourceType(type="vault:identity/oidcClient:OidcClient")
public class OidcClient extends com.pulumi.resources.CustomResource {
    /**
     * The time-to-live for access tokens obtained by the client.
     * 
     */
    @Export(name="accessTokenTtl", refs={Integer.class}, tree="[0]")
    private Output<Integer> accessTokenTtl;

    /**
     * @return The time-to-live for access tokens obtained by the client.
     * 
     */
    public Output<Integer> accessTokenTtl() {
        return this.accessTokenTtl;
    }
    /**
     * A list of assignment resources associated with the client.
     * 
     */
    @Export(name="assignments", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> assignments;

    /**
     * @return A list of assignment resources associated with the client.
     * 
     */
    public Output<Optional<List<String>>> assignments() {
        return Codegen.optional(this.assignments);
    }
    /**
     * The Client ID returned by Vault.
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return The Client ID returned by Vault.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * The Client Secret Key returned by Vault.
     * For public OpenID Clients `client_secret` is set to an empty string `&#34;&#34;`
     * 
     */
    @Export(name="clientSecret", refs={String.class}, tree="[0]")
    private Output<String> clientSecret;

    /**
     * @return The Client Secret Key returned by Vault.
     * For public OpenID Clients `client_secret` is set to an empty string `&#34;&#34;`
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * The client type based on its ability to maintain confidentiality of credentials.
     * The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
     * 
     */
    @Export(name="clientType", refs={String.class}, tree="[0]")
    private Output<String> clientType;

    /**
     * @return The client type based on its ability to maintain confidentiality of credentials.
     * The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
     * 
     */
    public Output<String> clientType() {
        return this.clientType;
    }
    /**
     * The time-to-live for ID tokens obtained by the client.
     * The value should be less than the `verification_ttl` on the key.
     * 
     */
    @Export(name="idTokenTtl", refs={Integer.class}, tree="[0]")
    private Output<Integer> idTokenTtl;

    /**
     * @return The time-to-live for ID tokens obtained by the client.
     * The value should be less than the `verification_ttl` on the key.
     * 
     */
    public Output<Integer> idTokenTtl() {
        return this.idTokenTtl;
    }
    /**
     * A reference to a named key resource in Vault.
     * This cannot be modified after creation. If not provided, the `default`
     * key is used.
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return A reference to a named key resource in Vault.
     * This cannot be modified after creation. If not provided, the `default`
     * key is used.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * The name of the client.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the client.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Redirection URI values used by the client.
     * One of these values must exactly match the `redirect_uri` parameter value
     * used in each authentication request.
     * 
     */
    @Export(name="redirectUris", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redirectUris;

    /**
     * @return Redirection URI values used by the client.
     * One of these values must exactly match the `redirect_uri` parameter value
     * used in each authentication request.
     * 
     */
    public Output<Optional<List<String>>> redirectUris() {
        return Codegen.optional(this.redirectUris);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OidcClient(String name) {
        this(name, OidcClientArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OidcClient(String name, @Nullable OidcClientArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OidcClient(String name, @Nullable OidcClientArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:identity/oidcClient:OidcClient", name, args == null ? OidcClientArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OidcClient(String name, Output<String> id, @Nullable OidcClientState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:identity/oidcClient:OidcClient", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "clientSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OidcClient get(String name, Output<String> id, @Nullable OidcClientState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OidcClient(name, id, state, options);
    }
}
