// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.secrets;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyncAwsDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyncAwsDestinationArgs Empty = new SyncAwsDestinationArgs();

    /**
     * Access key id to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_ACCESS_KEY_ID` environment
     * variable.
     * 
     */
    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    /**
     * @return Access key id to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_ACCESS_KEY_ID` environment
     * variable.
     * 
     */
    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    /**
     * Custom tags to set on the secret managed at the destination.
     * 
     */
    @Import(name="customTags")
    private @Nullable Output<Map<String,Object>> customTags;

    /**
     * @return Custom tags to set on the secret managed at the destination.
     * 
     */
    public Optional<Output<Map<String,Object>>> customTags() {
        return Optional.ofNullable(this.customTags);
    }

    /**
     * Optional extra protection that must match the trust policy granting access to the
     * AWS IAM role ARN. We recommend using a different random UUID per destination. The value is generated by users.
     * The field is mutable with no special condition, but users must be careful that the new value fits with the trust
     * relationship condition they set on AWS otherwise sync operations will start to fail due to client-side access
     * denied errors. Ignored if the `role_arn` field is empty.
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return Optional extra protection that must match the trust policy granting access to the
     * AWS IAM role ARN. We recommend using a different random UUID per destination. The value is generated by users.
     * The field is mutable with no special condition, but users must be careful that the new value fits with the trust
     * relationship condition they set on AWS otherwise sync operations will start to fail due to client-side access
     * denied errors. Ignored if the `role_arn` field is empty.
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * Unique name of the AWS destination.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name of the AWS destination.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Region where to manage the secrets manager entries.
     * Can be omitted and directly provided to Vault using the `AWS_REGION` environment
     * variable.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where to manage the secrets manager entries.
     * Can be omitted and directly provided to Vault using the `AWS_REGION` environment
     * variable.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Specifies a role to assume when connecting to AWS. When assuming a role,
     * Vault uses temporary STS credentials to authenticate. An initial session with the proper trust relationship must
     * exist for Vault to be able to assume this role. The role can be in a different account.
     * The value is mutable as long as the new role targets the same AWS account ID. If not, the BE will return an error.
     * It is possible to provide both an access key pair and a role to assume.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return Specifies a role to assume when connecting to AWS. When assuming a role,
     * Vault uses temporary STS credentials to authenticate. An initial session with the proper trust relationship must
     * exist for Vault to be able to assume this role. The role can be in a different account.
     * The value is mutable as long as the new role targets the same AWS account ID. If not, the BE will return an error.
     * It is possible to provide both an access key pair and a role to assume.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Secret access key to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_SECRET_ACCESS_KEY` environment
     * variable.
     * 
     */
    @Import(name="secretAccessKey")
    private @Nullable Output<String> secretAccessKey;

    /**
     * @return Secret access key to authenticate against the AWS secrets manager.
     * Can be omitted and directly provided to Vault using the `AWS_SECRET_ACCESS_KEY` environment
     * variable.
     * 
     */
    public Optional<Output<String>> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }

    /**
     * Template describing how to generate external secret names.
     * Supports a subset of the Go Template syntax.
     * 
     */
    @Import(name="secretNameTemplate")
    private @Nullable Output<String> secretNameTemplate;

    /**
     * @return Template describing how to generate external secret names.
     * Supports a subset of the Go Template syntax.
     * 
     */
    public Optional<Output<String>> secretNameTemplate() {
        return Optional.ofNullable(this.secretNameTemplate);
    }

    private SyncAwsDestinationArgs() {}

    private SyncAwsDestinationArgs(SyncAwsDestinationArgs $) {
        this.accessKeyId = $.accessKeyId;
        this.customTags = $.customTags;
        this.externalId = $.externalId;
        this.name = $.name;
        this.namespace = $.namespace;
        this.region = $.region;
        this.roleArn = $.roleArn;
        this.secretAccessKey = $.secretAccessKey;
        this.secretNameTemplate = $.secretNameTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyncAwsDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyncAwsDestinationArgs $;

        public Builder() {
            $ = new SyncAwsDestinationArgs();
        }

        public Builder(SyncAwsDestinationArgs defaults) {
            $ = new SyncAwsDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyId Access key id to authenticate against the AWS secrets manager.
         * Can be omitted and directly provided to Vault using the `AWS_ACCESS_KEY_ID` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        /**
         * @param accessKeyId Access key id to authenticate against the AWS secrets manager.
         * Can be omitted and directly provided to Vault using the `AWS_ACCESS_KEY_ID` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        /**
         * @param customTags Custom tags to set on the secret managed at the destination.
         * 
         * @return builder
         * 
         */
        public Builder customTags(@Nullable Output<Map<String,Object>> customTags) {
            $.customTags = customTags;
            return this;
        }

        /**
         * @param customTags Custom tags to set on the secret managed at the destination.
         * 
         * @return builder
         * 
         */
        public Builder customTags(Map<String,Object> customTags) {
            return customTags(Output.of(customTags));
        }

        /**
         * @param externalId Optional extra protection that must match the trust policy granting access to the
         * AWS IAM role ARN. We recommend using a different random UUID per destination. The value is generated by users.
         * The field is mutable with no special condition, but users must be careful that the new value fits with the trust
         * relationship condition they set on AWS otherwise sync operations will start to fail due to client-side access
         * denied errors. Ignored if the `role_arn` field is empty.
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId Optional extra protection that must match the trust policy granting access to the
         * AWS IAM role ARN. We recommend using a different random UUID per destination. The value is generated by users.
         * The field is mutable with no special condition, but users must be careful that the new value fits with the trust
         * relationship condition they set on AWS otherwise sync operations will start to fail due to client-side access
         * denied errors. Ignored if the `role_arn` field is empty.
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param name Unique name of the AWS destination.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name of the AWS destination.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param region Region where to manage the secrets manager entries.
         * Can be omitted and directly provided to Vault using the `AWS_REGION` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where to manage the secrets manager entries.
         * Can be omitted and directly provided to Vault using the `AWS_REGION` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param roleArn Specifies a role to assume when connecting to AWS. When assuming a role,
         * Vault uses temporary STS credentials to authenticate. An initial session with the proper trust relationship must
         * exist for Vault to be able to assume this role. The role can be in a different account.
         * The value is mutable as long as the new role targets the same AWS account ID. If not, the BE will return an error.
         * It is possible to provide both an access key pair and a role to assume.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Specifies a role to assume when connecting to AWS. When assuming a role,
         * Vault uses temporary STS credentials to authenticate. An initial session with the proper trust relationship must
         * exist for Vault to be able to assume this role. The role can be in a different account.
         * The value is mutable as long as the new role targets the same AWS account ID. If not, the BE will return an error.
         * It is possible to provide both an access key pair and a role to assume.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param secretAccessKey Secret access key to authenticate against the AWS secrets manager.
         * Can be omitted and directly provided to Vault using the `AWS_SECRET_ACCESS_KEY` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKey(@Nullable Output<String> secretAccessKey) {
            $.secretAccessKey = secretAccessKey;
            return this;
        }

        /**
         * @param secretAccessKey Secret access key to authenticate against the AWS secrets manager.
         * Can be omitted and directly provided to Vault using the `AWS_SECRET_ACCESS_KEY` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKey(String secretAccessKey) {
            return secretAccessKey(Output.of(secretAccessKey));
        }

        /**
         * @param secretNameTemplate Template describing how to generate external secret names.
         * Supports a subset of the Go Template syntax.
         * 
         * @return builder
         * 
         */
        public Builder secretNameTemplate(@Nullable Output<String> secretNameTemplate) {
            $.secretNameTemplate = secretNameTemplate;
            return this;
        }

        /**
         * @param secretNameTemplate Template describing how to generate external secret names.
         * Supports a subset of the Go Template syntax.
         * 
         * @return builder
         * 
         */
        public Builder secretNameTemplate(String secretNameTemplate) {
            return secretNameTemplate(Output.of(secretNameTemplate));
        }

        public SyncAwsDestinationArgs build() {
            return $;
        }
    }

}
