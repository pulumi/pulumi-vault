// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.config.inputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuthLogin {
    private @Nullable String method;
    private @Nullable String namespace;
    private @Nullable Map<String,String> parameters;
    private String path;
    private @Nullable Boolean useRootNamespace;

    private AuthLogin() {}
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public Map<String,String> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    public String path() {
        return this.path;
    }
    public Optional<Boolean> useRootNamespace() {
        return Optional.ofNullable(this.useRootNamespace);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthLogin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String method;
        private @Nullable String namespace;
        private @Nullable Map<String,String> parameters;
        private String path;
        private @Nullable Boolean useRootNamespace;
        public Builder() {}
        public Builder(AuthLogin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.method = defaults.method;
    	      this.namespace = defaults.namespace;
    	      this.parameters = defaults.parameters;
    	      this.path = defaults.path;
    	      this.useRootNamespace = defaults.useRootNamespace;
        }

        @CustomType.Setter
        public Builder method(@Nullable String method) {

            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,String> parameters) {

            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("AuthLogin", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder useRootNamespace(@Nullable Boolean useRootNamespace) {

            this.useRootNamespace = useRootNamespace;
            return this;
        }
        public AuthLogin build() {
            final var _resultValue = new AuthLogin();
            _resultValue.method = method;
            _resultValue.namespace = namespace;
            _resultValue.parameters = parameters;
            _resultValue.path = path;
            _resultValue.useRootNamespace = useRootNamespace;
            return _resultValue;
        }
    }
}
