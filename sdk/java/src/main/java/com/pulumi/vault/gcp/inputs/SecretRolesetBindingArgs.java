// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.gcp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SecretRolesetBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretRolesetBindingArgs Empty = new SecretRolesetBindingArgs();

    /**
     * Resource or resource path for which IAM policy information will be bound. The resource path may be specified in a few different [formats](https://www.vaultproject.io/docs/secrets/gcp/index.html#roleset-bindings).
     * 
     */
    @Import(name="resource", required=true)
    private Output<String> resource;

    /**
     * @return Resource or resource path for which IAM policy information will be bound. The resource path may be specified in a few different [formats](https://www.vaultproject.io/docs/secrets/gcp/index.html#roleset-bindings).
     * 
     */
    public Output<String> resource() {
        return this.resource;
    }

    /**
     * List of [GCP IAM roles](https://cloud.google.com/iam/docs/understanding-roles) for the resource.
     * 
     */
    @Import(name="roles", required=true)
    private Output<List<String>> roles;

    /**
     * @return List of [GCP IAM roles](https://cloud.google.com/iam/docs/understanding-roles) for the resource.
     * 
     */
    public Output<List<String>> roles() {
        return this.roles;
    }

    private SecretRolesetBindingArgs() {}

    private SecretRolesetBindingArgs(SecretRolesetBindingArgs $) {
        this.resource = $.resource;
        this.roles = $.roles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretRolesetBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretRolesetBindingArgs $;

        public Builder() {
            $ = new SecretRolesetBindingArgs();
        }

        public Builder(SecretRolesetBindingArgs defaults) {
            $ = new SecretRolesetBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resource Resource or resource path for which IAM policy information will be bound. The resource path may be specified in a few different [formats](https://www.vaultproject.io/docs/secrets/gcp/index.html#roleset-bindings).
         * 
         * @return builder
         * 
         */
        public Builder resource(Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource Resource or resource path for which IAM policy information will be bound. The resource path may be specified in a few different [formats](https://www.vaultproject.io/docs/secrets/gcp/index.html#roleset-bindings).
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param roles List of [GCP IAM roles](https://cloud.google.com/iam/docs/understanding-roles) for the resource.
         * 
         * @return builder
         * 
         */
        public Builder roles(Output<List<String>> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles List of [GCP IAM roles](https://cloud.google.com/iam/docs/understanding-roles) for the resource.
         * 
         * @return builder
         * 
         */
        public Builder roles(List<String> roles) {
            return roles(Output.of(roles));
        }

        /**
         * @param roles List of [GCP IAM roles](https://cloud.google.com/iam/docs/understanding-roles) for the resource.
         * 
         * @return builder
         * 
         */
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }

        public SecretRolesetBindingArgs build() {
            if ($.resource == null) {
                throw new MissingRequiredPropertyException("SecretRolesetBindingArgs", "resource");
            }
            if ($.roles == null) {
                throw new MissingRequiredPropertyException("SecretRolesetBindingArgs", "roles");
            }
            return $;
        }
    }

}
