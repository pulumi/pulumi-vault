// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.kv.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecretSubkeysV2PlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecretSubkeysV2PlainArgs Empty = new GetSecretSubkeysV2PlainArgs();

    @Import(name="depth")
    private @Nullable Integer depth;

    public Optional<Integer> depth() {
        return Optional.ofNullable(this.depth);
    }

    @Import(name="mount", required=true)
    private String mount;

    public String mount() {
        return this.mount;
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="namespace")
    private @Nullable String namespace;

    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="version")
    private @Nullable Integer version;

    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    private GetSecretSubkeysV2PlainArgs() {}

    private GetSecretSubkeysV2PlainArgs(GetSecretSubkeysV2PlainArgs $) {
        this.depth = $.depth;
        this.mount = $.mount;
        this.name = $.name;
        this.namespace = $.namespace;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecretSubkeysV2PlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecretSubkeysV2PlainArgs $;

        public Builder() {
            $ = new GetSecretSubkeysV2PlainArgs();
        }

        public Builder(GetSecretSubkeysV2PlainArgs defaults) {
            $ = new GetSecretSubkeysV2PlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder depth(@Nullable Integer depth) {
            $.depth = depth;
            return this;
        }

        public Builder mount(String mount) {
            $.mount = mount;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder version(@Nullable Integer version) {
            $.version = version;
            return this;
        }

        public GetSecretSubkeysV2PlainArgs build() {
            $.mount = Objects.requireNonNull($.mount, "expected parameter 'mount' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
