// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.secrets.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyncAzureDestinationState extends com.pulumi.resources.ResourceArgs {

    public static final SyncAzureDestinationState Empty = new SyncAzureDestinationState();

    /**
     * Client ID of an Azure app registration.
     * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_ID` environment
     * variable.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Client ID of an Azure app registration.
     * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_ID` environment
     * variable.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Client Secret of an Azure app registration.
     * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_SECRET` environment
     * variable.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Client Secret of an Azure app registration.
     * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_SECRET` environment
     * variable.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * Specifies a cloud for the client. The default is Azure Public Cloud.
     * 
     */
    @Import(name="cloud")
    private @Nullable Output<String> cloud;

    /**
     * @return Specifies a cloud for the client. The default is Azure Public Cloud.
     * 
     */
    public Optional<Output<String>> cloud() {
        return Optional.ofNullable(this.cloud);
    }

    /**
     * Custom tags to set on the secret managed at the destination.
     * 
     */
    @Import(name="customTags")
    private @Nullable Output<Map<String,Object>> customTags;

    /**
     * @return Custom tags to set on the secret managed at the destination.
     * 
     */
    public Optional<Output<Map<String,Object>>> customTags() {
        return Optional.ofNullable(this.customTags);
    }

    /**
     * URI of an existing Azure Key Vault instance.
     * Can be omitted and directly provided to Vault using the `KEY_VAULT_URI` environment
     * variable.
     * 
     */
    @Import(name="keyVaultUri")
    private @Nullable Output<String> keyVaultUri;

    /**
     * @return URI of an existing Azure Key Vault instance.
     * Can be omitted and directly provided to Vault using the `KEY_VAULT_URI` environment
     * variable.
     * 
     */
    public Optional<Output<String>> keyVaultUri() {
        return Optional.ofNullable(this.keyVaultUri);
    }

    /**
     * Unique name of the Azure destination.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name of the Azure destination.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Template describing how to generate external secret names.
     * Supports a subset of the Go Template syntax.
     * 
     */
    @Import(name="secretNameTemplate")
    private @Nullable Output<String> secretNameTemplate;

    /**
     * @return Template describing how to generate external secret names.
     * Supports a subset of the Go Template syntax.
     * 
     */
    public Optional<Output<String>> secretNameTemplate() {
        return Optional.ofNullable(this.secretNameTemplate);
    }

    /**
     * ID of the target Azure tenant.
     * Can be omitted and directly provided to Vault using the `AZURE_TENANT_ID` environment
     * variable.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return ID of the target Azure tenant.
     * Can be omitted and directly provided to Vault using the `AZURE_TENANT_ID` environment
     * variable.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * The type of the secrets destination (`azure-kv`).
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the secrets destination (`azure-kv`).
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SyncAzureDestinationState() {}

    private SyncAzureDestinationState(SyncAzureDestinationState $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.cloud = $.cloud;
        this.customTags = $.customTags;
        this.keyVaultUri = $.keyVaultUri;
        this.name = $.name;
        this.namespace = $.namespace;
        this.secretNameTemplate = $.secretNameTemplate;
        this.tenantId = $.tenantId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyncAzureDestinationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyncAzureDestinationState $;

        public Builder() {
            $ = new SyncAzureDestinationState();
        }

        public Builder(SyncAzureDestinationState defaults) {
            $ = new SyncAzureDestinationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId Client ID of an Azure app registration.
         * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_ID` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Client ID of an Azure app registration.
         * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_ID` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Client Secret of an Azure app registration.
         * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_SECRET` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Client Secret of an Azure app registration.
         * Can be omitted and directly provided to Vault using the `AZURE_CLIENT_SECRET` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param cloud Specifies a cloud for the client. The default is Azure Public Cloud.
         * 
         * @return builder
         * 
         */
        public Builder cloud(@Nullable Output<String> cloud) {
            $.cloud = cloud;
            return this;
        }

        /**
         * @param cloud Specifies a cloud for the client. The default is Azure Public Cloud.
         * 
         * @return builder
         * 
         */
        public Builder cloud(String cloud) {
            return cloud(Output.of(cloud));
        }

        /**
         * @param customTags Custom tags to set on the secret managed at the destination.
         * 
         * @return builder
         * 
         */
        public Builder customTags(@Nullable Output<Map<String,Object>> customTags) {
            $.customTags = customTags;
            return this;
        }

        /**
         * @param customTags Custom tags to set on the secret managed at the destination.
         * 
         * @return builder
         * 
         */
        public Builder customTags(Map<String,Object> customTags) {
            return customTags(Output.of(customTags));
        }

        /**
         * @param keyVaultUri URI of an existing Azure Key Vault instance.
         * Can be omitted and directly provided to Vault using the `KEY_VAULT_URI` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultUri(@Nullable Output<String> keyVaultUri) {
            $.keyVaultUri = keyVaultUri;
            return this;
        }

        /**
         * @param keyVaultUri URI of an existing Azure Key Vault instance.
         * Can be omitted and directly provided to Vault using the `KEY_VAULT_URI` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultUri(String keyVaultUri) {
            return keyVaultUri(Output.of(keyVaultUri));
        }

        /**
         * @param name Unique name of the Azure destination.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name of the Azure destination.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param secretNameTemplate Template describing how to generate external secret names.
         * Supports a subset of the Go Template syntax.
         * 
         * @return builder
         * 
         */
        public Builder secretNameTemplate(@Nullable Output<String> secretNameTemplate) {
            $.secretNameTemplate = secretNameTemplate;
            return this;
        }

        /**
         * @param secretNameTemplate Template describing how to generate external secret names.
         * Supports a subset of the Go Template syntax.
         * 
         * @return builder
         * 
         */
        public Builder secretNameTemplate(String secretNameTemplate) {
            return secretNameTemplate(Output.of(secretNameTemplate));
        }

        /**
         * @param tenantId ID of the target Azure tenant.
         * Can be omitted and directly provided to Vault using the `AZURE_TENANT_ID` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId ID of the target Azure tenant.
         * Can be omitted and directly provided to Vault using the `AZURE_TENANT_ID` environment
         * variable.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        /**
         * @param type The type of the secrets destination (`azure-kv`).
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the secrets destination (`azure-kv`).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SyncAzureDestinationState build() {
            return $;
        }
    }

}
