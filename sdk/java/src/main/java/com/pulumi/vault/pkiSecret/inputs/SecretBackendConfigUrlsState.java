// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretBackendConfigUrlsState extends com.pulumi.resources.ResourceArgs {

    public static final SecretBackendConfigUrlsState Empty = new SecretBackendConfigUrlsState();

    /**
     * The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
     * 
     */
    @Import(name="backend")
    private @Nullable Output<String> backend;

    /**
     * @return The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
     * 
     */
    public Optional<Output<String>> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * Specifies the URL values for the CRL Distribution Points field.
     * 
     */
    @Import(name="crlDistributionPoints")
    private @Nullable Output<List<String>> crlDistributionPoints;

    /**
     * @return Specifies the URL values for the CRL Distribution Points field.
     * 
     */
    public Optional<Output<List<String>>> crlDistributionPoints() {
        return Optional.ofNullable(this.crlDistributionPoints);
    }

    /**
     * Specifies that templating of AIA fields is allowed.
     * 
     */
    @Import(name="enableTemplating")
    private @Nullable Output<Boolean> enableTemplating;

    /**
     * @return Specifies that templating of AIA fields is allowed.
     * 
     */
    public Optional<Output<Boolean>> enableTemplating() {
        return Optional.ofNullable(this.enableTemplating);
    }

    /**
     * Specifies the URL values for the Issuing Certificate field.
     * 
     */
    @Import(name="issuingCertificates")
    private @Nullable Output<List<String>> issuingCertificates;

    /**
     * @return Specifies the URL values for the Issuing Certificate field.
     * 
     */
    public Optional<Output<List<String>>> issuingCertificates() {
        return Optional.ofNullable(this.issuingCertificates);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Specifies the URL values for the OCSP Servers field.
     * 
     */
    @Import(name="ocspServers")
    private @Nullable Output<List<String>> ocspServers;

    /**
     * @return Specifies the URL values for the OCSP Servers field.
     * 
     */
    public Optional<Output<List<String>>> ocspServers() {
        return Optional.ofNullable(this.ocspServers);
    }

    private SecretBackendConfigUrlsState() {}

    private SecretBackendConfigUrlsState(SecretBackendConfigUrlsState $) {
        this.backend = $.backend;
        this.crlDistributionPoints = $.crlDistributionPoints;
        this.enableTemplating = $.enableTemplating;
        this.issuingCertificates = $.issuingCertificates;
        this.namespace = $.namespace;
        this.ocspServers = $.ocspServers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretBackendConfigUrlsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretBackendConfigUrlsState $;

        public Builder() {
            $ = new SecretBackendConfigUrlsState();
        }

        public Builder(SecretBackendConfigUrlsState defaults) {
            $ = new SecretBackendConfigUrlsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param crlDistributionPoints Specifies the URL values for the CRL Distribution Points field.
         * 
         * @return builder
         * 
         */
        public Builder crlDistributionPoints(@Nullable Output<List<String>> crlDistributionPoints) {
            $.crlDistributionPoints = crlDistributionPoints;
            return this;
        }

        /**
         * @param crlDistributionPoints Specifies the URL values for the CRL Distribution Points field.
         * 
         * @return builder
         * 
         */
        public Builder crlDistributionPoints(List<String> crlDistributionPoints) {
            return crlDistributionPoints(Output.of(crlDistributionPoints));
        }

        /**
         * @param crlDistributionPoints Specifies the URL values for the CRL Distribution Points field.
         * 
         * @return builder
         * 
         */
        public Builder crlDistributionPoints(String... crlDistributionPoints) {
            return crlDistributionPoints(List.of(crlDistributionPoints));
        }

        /**
         * @param enableTemplating Specifies that templating of AIA fields is allowed.
         * 
         * @return builder
         * 
         */
        public Builder enableTemplating(@Nullable Output<Boolean> enableTemplating) {
            $.enableTemplating = enableTemplating;
            return this;
        }

        /**
         * @param enableTemplating Specifies that templating of AIA fields is allowed.
         * 
         * @return builder
         * 
         */
        public Builder enableTemplating(Boolean enableTemplating) {
            return enableTemplating(Output.of(enableTemplating));
        }

        /**
         * @param issuingCertificates Specifies the URL values for the Issuing Certificate field.
         * 
         * @return builder
         * 
         */
        public Builder issuingCertificates(@Nullable Output<List<String>> issuingCertificates) {
            $.issuingCertificates = issuingCertificates;
            return this;
        }

        /**
         * @param issuingCertificates Specifies the URL values for the Issuing Certificate field.
         * 
         * @return builder
         * 
         */
        public Builder issuingCertificates(List<String> issuingCertificates) {
            return issuingCertificates(Output.of(issuingCertificates));
        }

        /**
         * @param issuingCertificates Specifies the URL values for the Issuing Certificate field.
         * 
         * @return builder
         * 
         */
        public Builder issuingCertificates(String... issuingCertificates) {
            return issuingCertificates(List.of(issuingCertificates));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param ocspServers Specifies the URL values for the OCSP Servers field.
         * 
         * @return builder
         * 
         */
        public Builder ocspServers(@Nullable Output<List<String>> ocspServers) {
            $.ocspServers = ocspServers;
            return this;
        }

        /**
         * @param ocspServers Specifies the URL values for the OCSP Servers field.
         * 
         * @return builder
         * 
         */
        public Builder ocspServers(List<String> ocspServers) {
            return ocspServers(Output.of(ocspServers));
        }

        /**
         * @param ocspServers Specifies the URL values for the OCSP Servers field.
         * 
         * @return builder
         * 
         */
        public Builder ocspServers(String... ocspServers) {
            return ocspServers(List.of(ocspServers));
        }

        public SecretBackendConfigUrlsState build() {
            return $;
        }
    }

}
