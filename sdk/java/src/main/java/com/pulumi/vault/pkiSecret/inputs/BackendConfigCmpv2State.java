// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.vault.pkiSecret.inputs.BackendConfigCmpv2AuthenticatorsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackendConfigCmpv2State extends com.pulumi.resources.ResourceArgs {

    public static final BackendConfigCmpv2State Empty = new BackendConfigCmpv2State();

    /**
     * Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
     * 
     * &lt;a id=&#34;nestedatt--authenticators&#34;&gt;&lt;/a&gt;
     * 
     */
    @Import(name="auditFields")
    private @Nullable Output<List<String>> auditFields;

    /**
     * @return Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
     * 
     * &lt;a id=&#34;nestedatt--authenticators&#34;&gt;&lt;/a&gt;
     * 
     */
    public Optional<Output<List<String>>> auditFields() {
        return Optional.ofNullable(this.auditFields);
    }

    /**
     * Lists the mount accessors CMPv2 should delegate authentication requests towards (see below for nested schema).
     * 
     */
    @Import(name="authenticators")
    private @Nullable Output<BackendConfigCmpv2AuthenticatorsArgs> authenticators;

    /**
     * @return Lists the mount accessors CMPv2 should delegate authentication requests towards (see below for nested schema).
     * 
     */
    public Optional<Output<BackendConfigCmpv2AuthenticatorsArgs>> authenticators() {
        return Optional.ofNullable(this.authenticators);
    }

    /**
     * The path to the PKI secret backend to
     * read the CMPv2 configuration from, with no leading or trailing `/`s.
     * 
     */
    @Import(name="backend")
    private @Nullable Output<String> backend;

    /**
     * @return The path to the PKI secret backend to
     * read the CMPv2 configuration from, with no leading or trailing `/`s.
     * 
     */
    public Optional<Output<String>> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * Specifies the behavior for requests using the non-role-qualified CMPv2 requests. Can be sign-verbatim or a role given by role:&lt;role_name&gt;.
     * 
     */
    @Import(name="defaultPathPolicy")
    private @Nullable Output<String> defaultPathPolicy;

    /**
     * @return Specifies the behavior for requests using the non-role-qualified CMPv2 requests. Can be sign-verbatim or a role given by role:&lt;role_name&gt;.
     * 
     */
    public Optional<Output<String>> defaultPathPolicy() {
        return Optional.ofNullable(this.defaultPathPolicy);
    }

    /**
     * If set, parse out fields from the provided CSR making them available for Sentinel policies.
     * 
     */
    @Import(name="enableSentinelParsing")
    private @Nullable Output<Boolean> enableSentinelParsing;

    /**
     * @return If set, parse out fields from the provided CSR making them available for Sentinel policies.
     * 
     */
    public Optional<Output<Boolean>> enableSentinelParsing() {
        return Optional.ofNullable(this.enableSentinelParsing);
    }

    /**
     * Specifies whether CMPv2 is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Specifies whether CMPv2 is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * A read-only timestamp representing the last time the configuration was updated.
     * 
     */
    @Import(name="lastUpdated")
    private @Nullable Output<String> lastUpdated;

    /**
     * @return A read-only timestamp representing the last time the configuration was updated.
     * 
     */
    public Optional<Output<String>> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }

    /**
     * The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private BackendConfigCmpv2State() {}

    private BackendConfigCmpv2State(BackendConfigCmpv2State $) {
        this.auditFields = $.auditFields;
        this.authenticators = $.authenticators;
        this.backend = $.backend;
        this.defaultPathPolicy = $.defaultPathPolicy;
        this.enableSentinelParsing = $.enableSentinelParsing;
        this.enabled = $.enabled;
        this.lastUpdated = $.lastUpdated;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackendConfigCmpv2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackendConfigCmpv2State $;

        public Builder() {
            $ = new BackendConfigCmpv2State();
        }

        public Builder(BackendConfigCmpv2State defaults) {
            $ = new BackendConfigCmpv2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditFields Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
         * 
         * &lt;a id=&#34;nestedatt--authenticators&#34;&gt;&lt;/a&gt;
         * 
         * @return builder
         * 
         */
        public Builder auditFields(@Nullable Output<List<String>> auditFields) {
            $.auditFields = auditFields;
            return this;
        }

        /**
         * @param auditFields Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
         * 
         * &lt;a id=&#34;nestedatt--authenticators&#34;&gt;&lt;/a&gt;
         * 
         * @return builder
         * 
         */
        public Builder auditFields(List<String> auditFields) {
            return auditFields(Output.of(auditFields));
        }

        /**
         * @param auditFields Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
         * 
         * &lt;a id=&#34;nestedatt--authenticators&#34;&gt;&lt;/a&gt;
         * 
         * @return builder
         * 
         */
        public Builder auditFields(String... auditFields) {
            return auditFields(List.of(auditFields));
        }

        /**
         * @param authenticators Lists the mount accessors CMPv2 should delegate authentication requests towards (see below for nested schema).
         * 
         * @return builder
         * 
         */
        public Builder authenticators(@Nullable Output<BackendConfigCmpv2AuthenticatorsArgs> authenticators) {
            $.authenticators = authenticators;
            return this;
        }

        /**
         * @param authenticators Lists the mount accessors CMPv2 should delegate authentication requests towards (see below for nested schema).
         * 
         * @return builder
         * 
         */
        public Builder authenticators(BackendConfigCmpv2AuthenticatorsArgs authenticators) {
            return authenticators(Output.of(authenticators));
        }

        /**
         * @param backend The path to the PKI secret backend to
         * read the CMPv2 configuration from, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The path to the PKI secret backend to
         * read the CMPv2 configuration from, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param defaultPathPolicy Specifies the behavior for requests using the non-role-qualified CMPv2 requests. Can be sign-verbatim or a role given by role:&lt;role_name&gt;.
         * 
         * @return builder
         * 
         */
        public Builder defaultPathPolicy(@Nullable Output<String> defaultPathPolicy) {
            $.defaultPathPolicy = defaultPathPolicy;
            return this;
        }

        /**
         * @param defaultPathPolicy Specifies the behavior for requests using the non-role-qualified CMPv2 requests. Can be sign-verbatim or a role given by role:&lt;role_name&gt;.
         * 
         * @return builder
         * 
         */
        public Builder defaultPathPolicy(String defaultPathPolicy) {
            return defaultPathPolicy(Output.of(defaultPathPolicy));
        }

        /**
         * @param enableSentinelParsing If set, parse out fields from the provided CSR making them available for Sentinel policies.
         * 
         * @return builder
         * 
         */
        public Builder enableSentinelParsing(@Nullable Output<Boolean> enableSentinelParsing) {
            $.enableSentinelParsing = enableSentinelParsing;
            return this;
        }

        /**
         * @param enableSentinelParsing If set, parse out fields from the provided CSR making them available for Sentinel policies.
         * 
         * @return builder
         * 
         */
        public Builder enableSentinelParsing(Boolean enableSentinelParsing) {
            return enableSentinelParsing(Output.of(enableSentinelParsing));
        }

        /**
         * @param enabled Specifies whether CMPv2 is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Specifies whether CMPv2 is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param lastUpdated A read-only timestamp representing the last time the configuration was updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(@Nullable Output<String> lastUpdated) {
            $.lastUpdated = lastUpdated;
            return this;
        }

        /**
         * @param lastUpdated A read-only timestamp representing the last time the configuration was updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(String lastUpdated) {
            return lastUpdated(Output.of(lastUpdated));
        }

        /**
         * @param namespace The namespace of the target resource.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace of the target resource.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public BackendConfigCmpv2State build() {
            return $;
        }
    }

}
