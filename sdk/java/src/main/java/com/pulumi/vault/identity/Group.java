// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.identity.GroupArgs;
import com.pulumi.vault.identity.inputs.GroupState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates an Identity Group for Vault. The [Identity secrets engine](https://www.vaultproject.io/docs/secrets/identity/index.html) is the identity management solution for Vault.
 * 
 * A group can contain multiple entities as its members. A group can also have subgroups. Policies set on the group is granted to all members of the group. During request time, when the token&#39;s entity ID is being evaluated for the policies that it has access to; along with the policies on the entity itself, policies that are inherited due to group memberships are also granted.
 * 
 * ## Example Usage
 * 
 * ### Internal Group
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.identity.Group;
 * import com.pulumi.vault.identity.GroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var internal = new Group(&#34;internal&#34;, GroupArgs.builder()        
 *             .metadata(Map.of(&#34;version&#34;, &#34;2&#34;))
 *             .policies(            
 *                 &#34;dev&#34;,
 *                 &#34;test&#34;)
 *             .type(&#34;internal&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### External Group
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.identity.Group;
 * import com.pulumi.vault.identity.GroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var group = new Group(&#34;group&#34;, GroupArgs.builder()        
 *             .metadata(Map.of(&#34;version&#34;, &#34;1&#34;))
 *             .policies(&#34;test&#34;)
 *             .type(&#34;external&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Caveats
 * 
 * It&#39;s important to note that Vault identity groups names are *case-insensitive*. For example the following resources would be equivalent.
 * Applying this configuration would result in the provider failing to create one of the identity groups, since the resources share the same `name`.
 * 
 * This sort of pattern should be avoided:
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.identity.Group;
 * import com.pulumi.vault.identity.GroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var internalIdentity_groupGroup = new Group(&#34;internalIdentity/groupGroup&#34;, GroupArgs.builder()        
 *             .metadata(Map.of(&#34;version&#34;, &#34;2&#34;))
 *             .policies(            
 *                 &#34;dev&#34;,
 *                 &#34;test&#34;)
 *             .type(&#34;internal&#34;)
 *             .build());
 * 
 *         var internalGroup = new Group(&#34;internalGroup&#34;, GroupArgs.builder()        
 *             .metadata(Map.of(&#34;version&#34;, &#34;2&#34;))
 *             .policies(            
 *                 &#34;dev&#34;,
 *                 &#34;test&#34;)
 *             .type(&#34;internal&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Identity group can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import vault:identity/group:Group test &#39;fcbf1efb-2b69-4209-bed8-811e3475dad3&#39;
 * ```
 * 
 */
@ResourceType(type="vault:identity/group:Group")
public class Group extends com.pulumi.resources.CustomResource {
    /**
     * `false` by default. If set to `true`, this resource will ignore any Entity IDs
     * returned from Vault or specified in the resource. You can use
     * `vault.identity.GroupMemberEntityIds` to manage Entity IDs for this group in a
     * decoupled manner.
     * 
     */
    @Export(name="externalMemberEntityIds", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> externalMemberEntityIds;

    /**
     * @return `false` by default. If set to `true`, this resource will ignore any Entity IDs
     * returned from Vault or specified in the resource. You can use
     * `vault.identity.GroupMemberEntityIds` to manage Entity IDs for this group in a
     * decoupled manner.
     * 
     */
    public Output<Optional<Boolean>> externalMemberEntityIds() {
        return Codegen.optional(this.externalMemberEntityIds);
    }
    /**
     * `false` by default. If set to `true`, this resource will ignore any Group IDs
     * returned from Vault or specified in the resource. You can use
     * `vault.identity.GroupMemberGroupIds` to manage Group IDs for this group in a
     * decoupled manner.
     * 
     */
    @Export(name="externalMemberGroupIds", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> externalMemberGroupIds;

    /**
     * @return `false` by default. If set to `true`, this resource will ignore any Group IDs
     * returned from Vault or specified in the resource. You can use
     * `vault.identity.GroupMemberGroupIds` to manage Group IDs for this group in a
     * decoupled manner.
     * 
     */
    public Output<Optional<Boolean>> externalMemberGroupIds() {
        return Codegen.optional(this.externalMemberGroupIds);
    }
    /**
     * `false` by default. If set to `true`, this resource will ignore any policies returned from
     * Vault or specified in the resource. You can use `vault.identity.GroupPolicies` to manage
     * policies for this group in a decoupled manner.
     * 
     */
    @Export(name="externalPolicies", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> externalPolicies;

    /**
     * @return `false` by default. If set to `true`, this resource will ignore any policies returned from
     * Vault or specified in the resource. You can use `vault.identity.GroupPolicies` to manage
     * policies for this group in a decoupled manner.
     * 
     */
    public Output<Optional<Boolean>> externalPolicies() {
        return Codegen.optional(this.externalPolicies);
    }
    /**
     * A list of Entity IDs to be assigned as group members. Not allowed on `external` groups.
     * 
     */
    @Export(name="memberEntityIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> memberEntityIds;

    /**
     * @return A list of Entity IDs to be assigned as group members. Not allowed on `external` groups.
     * 
     */
    public Output<Optional<List<String>>> memberEntityIds() {
        return Codegen.optional(this.memberEntityIds);
    }
    /**
     * A list of Group IDs to be assigned as group members. Not allowed on `external` groups.
     * 
     */
    @Export(name="memberGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> memberGroupIds;

    /**
     * @return A list of Group IDs to be assigned as group members. Not allowed on `external` groups.
     * 
     */
    public Output<Optional<List<String>>> memberGroupIds() {
        return Codegen.optional(this.memberGroupIds);
    }
    /**
     * A Map of additional metadata to associate with the group.
     * 
     */
    @Export(name="metadata", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> metadata;

    /**
     * @return A Map of additional metadata to associate with the group.
     * 
     */
    public Output<Optional<Map<String,String>>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * Name of the identity group to create.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the identity group to create.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * A list of policies to apply to the group.
     * 
     */
    @Export(name="policies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> policies;

    /**
     * @return A list of policies to apply to the group.
     * 
     */
    public Output<Optional<List<String>>> policies() {
        return Codegen.optional(this.policies);
    }
    /**
     * Type of the group, internal or external. Defaults to `internal`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return Type of the group, internal or external. Defaults to `internal`.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Group(String name) {
        this(name, GroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Group(String name, @Nullable GroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Group(String name, @Nullable GroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:identity/group:Group", name, args == null ? GroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Group(String name, Output<String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:identity/group:Group", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Group get(String name, Output<String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Group(name, id, state, options);
    }
}
