// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderAuthLoginTokenFileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderAuthLoginTokenFileArgs Empty = new ProviderAuthLoginTokenFileArgs();

    @Import(name="filename", required=true)
    private Output<String> filename;

    public Output<String> filename() {
        return this.filename;
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private ProviderAuthLoginTokenFileArgs() {}

    private ProviderAuthLoginTokenFileArgs(ProviderAuthLoginTokenFileArgs $) {
        this.filename = $.filename;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderAuthLoginTokenFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderAuthLoginTokenFileArgs $;

        public Builder() {
            $ = new ProviderAuthLoginTokenFileArgs();
        }

        public Builder(ProviderAuthLoginTokenFileArgs defaults) {
            $ = new ProviderAuthLoginTokenFileArgs(Objects.requireNonNull(defaults));
        }

        public Builder filename(Output<String> filename) {
            $.filename = filename;
            return this;
        }

        public Builder filename(String filename) {
            return filename(Output.of(filename));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public ProviderAuthLoginTokenFileArgs build() {
            $.filename = Objects.requireNonNull($.filename, "expected parameter 'filename' to be non-null");
            return $;
        }
    }

}
