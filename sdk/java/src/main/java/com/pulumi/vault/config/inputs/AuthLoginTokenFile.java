// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.config.inputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuthLoginTokenFile {
    /**
     * @return The name of a file containing a single line that is a valid Vault token
     * 
     */
    private String filename;
    /**
     * @return The authentication engine&#39;s namespace. Conflicts with use_root_namespace
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Authenticate to the root Vault namespace. Conflicts with namespace
     * 
     */
    private @Nullable Boolean useRootNamespace;

    private AuthLoginTokenFile() {}
    /**
     * @return The name of a file containing a single line that is a valid Vault token
     * 
     */
    public String filename() {
        return this.filename;
    }
    /**
     * @return The authentication engine&#39;s namespace. Conflicts with use_root_namespace
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Authenticate to the root Vault namespace. Conflicts with namespace
     * 
     */
    public Optional<Boolean> useRootNamespace() {
        return Optional.ofNullable(this.useRootNamespace);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthLoginTokenFile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String filename;
        private @Nullable String namespace;
        private @Nullable Boolean useRootNamespace;
        public Builder() {}
        public Builder(AuthLoginTokenFile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filename = defaults.filename;
    	      this.namespace = defaults.namespace;
    	      this.useRootNamespace = defaults.useRootNamespace;
        }

        @CustomType.Setter
        public Builder filename(String filename) {
            if (filename == null) {
              throw new MissingRequiredPropertyException("AuthLoginTokenFile", "filename");
            }
            this.filename = filename;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder useRootNamespace(@Nullable Boolean useRootNamespace) {

            this.useRootNamespace = useRootNamespace;
            return this;
        }
        public AuthLoginTokenFile build() {
            final var _resultValue = new AuthLoginTokenFile();
            _resultValue.filename = filename;
            _resultValue.namespace = namespace;
            _resultValue.useRootNamespace = useRootNamespace;
            return _resultValue;
        }
    }
}
