// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.ldap;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.ldap.SecretBackendDynamicRoleArgs;
import com.pulumi.vault.ldap.inputs.SecretBackendDynamicRoleState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.ldap.SecretBackend;
 * import com.pulumi.vault.ldap.SecretBackendArgs;
 * import com.pulumi.vault.ldap.SecretBackendDynamicRole;
 * import com.pulumi.vault.ldap.SecretBackendDynamicRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var config = new SecretBackend(&#34;config&#34;, SecretBackendArgs.builder()        
 *             .path(&#34;my-custom-ldap&#34;)
 *             .binddn(&#34;CN=Administrator,CN=Users,DC=corp,DC=example,DC=net&#34;)
 *             .bindpass(&#34;SuperSecretPassw0rd&#34;)
 *             .url(&#34;ldaps://localhost&#34;)
 *             .userdn(&#34;CN=Users,DC=corp,DC=example,DC=net&#34;)
 *             .build());
 * 
 *         var role = new SecretBackendDynamicRole(&#34;role&#34;, SecretBackendDynamicRoleArgs.builder()        
 *             .mount(config.path())
 *             .roleName(&#34;alice&#34;)
 *             .creationLdif(&#34;&#34;&#34;
 * dn: cn={{.Username}},ou=users,dc=learn,dc=example
 * objectClass: person
 * objectClass: top
 * cn: learn
 * sn: {{.Password | utf16le | base64}}
 * memberOf: cn=dev,ou=groups,dc=learn,dc=example
 * userPassword: {{.Password}}
 *             &#34;&#34;&#34;)
 *             .deletionLdif(&#34;&#34;&#34;
 * dn: cn={{.Username}},ou=users,dc=learn,dc=example
 * changetype: delete
 *   rollback_ldif = &lt;&lt;EOT
 * dn: cn={{.Username}},ou=users,dc=learn,dc=example
 * changetype: delete
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * LDAP secret backend dynamic role can be imported using the full path to the role
 * of the form: `&lt;mount_path&gt;/dynamic-role/&lt;role_name&gt;` e.g.
 * 
 * ```sh
 * $ pulumi import vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole role ldap/role/dynamic-role
 * ```
 * 
 */
@ResourceType(type="vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole")
public class SecretBackendDynamicRole extends com.pulumi.resources.CustomResource {
    /**
     * A templatized LDIF string used to create a user
     * account. This may contain multiple LDIF entries. The `creation_ldif` can also
     * be used to add the user account to an existing group. All LDIF entries are
     * performed in order. If Vault encounters an error while executing the
     * `creation_ldif` it will stop at the first error and not execute any remaining
     * LDIF entries. If an error occurs and `rollback_ldif` is specified, the LDIF
     * entries in `rollback_ldif` will be executed. See `rollback_ldif` for more
     * details. This field may optionally be provided as a base64 encoded string.
     * 
     */
    @Export(name="creationLdif", refs={String.class}, tree="[0]")
    private Output<String> creationLdif;

    /**
     * @return A templatized LDIF string used to create a user
     * account. This may contain multiple LDIF entries. The `creation_ldif` can also
     * be used to add the user account to an existing group. All LDIF entries are
     * performed in order. If Vault encounters an error while executing the
     * `creation_ldif` it will stop at the first error and not execute any remaining
     * LDIF entries. If an error occurs and `rollback_ldif` is specified, the LDIF
     * entries in `rollback_ldif` will be executed. See `rollback_ldif` for more
     * details. This field may optionally be provided as a base64 encoded string.
     * 
     */
    public Output<String> creationLdif() {
        return this.creationLdif;
    }
    /**
     * Specifies the TTL for the leases associated with this role.
     * 
     */
    @Export(name="defaultTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> defaultTtl;

    /**
     * @return Specifies the TTL for the leases associated with this role.
     * 
     */
    public Output<Optional<Integer>> defaultTtl() {
        return Codegen.optional(this.defaultTtl);
    }
    /**
     * A templatized LDIF string used to delete the
     * user account once its TTL has expired. This may contain multiple LDIF
     * entries. All LDIF entries are performed in order. If Vault encounters an
     * error while executing an entry in the `deletion_ldif` it will attempt to
     * continue executing any remaining entries. This field may optionally be
     * provided as a base64 encoded string.
     * 
     */
    @Export(name="deletionLdif", refs={String.class}, tree="[0]")
    private Output<String> deletionLdif;

    /**
     * @return A templatized LDIF string used to delete the
     * user account once its TTL has expired. This may contain multiple LDIF
     * entries. All LDIF entries are performed in order. If Vault encounters an
     * error while executing an entry in the `deletion_ldif` it will attempt to
     * continue executing any remaining entries. This field may optionally be
     * provided as a base64 encoded string.
     * 
     */
    public Output<String> deletionLdif() {
        return this.deletionLdif;
    }
    /**
     * Specifies the maximum TTL for the leases associated with this role.
     * 
     */
    @Export(name="maxTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxTtl;

    /**
     * @return Specifies the maximum TTL for the leases associated with this role.
     * 
     */
    public Output<Optional<Integer>> maxTtl() {
        return Codegen.optional(this.maxTtl);
    }
    /**
     * The unique path this backend should be mounted at. Must
     * not begin or end with a `/`. Defaults to `ldap`.
     * 
     */
    @Export(name="mount", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mount;

    /**
     * @return The unique path this backend should be mounted at. Must
     * not begin or end with a `/`. Defaults to `ldap`.
     * 
     */
    public Output<Optional<String>> mount() {
        return Codegen.optional(this.mount);
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Name of the role.
     * 
     */
    @Export(name="roleName", refs={String.class}, tree="[0]")
    private Output<String> roleName;

    /**
     * @return Name of the role.
     * 
     */
    public Output<String> roleName() {
        return this.roleName;
    }
    /**
     * A templatized LDIF string used to attempt to
     * rollback any changes in the event that execution of the `creation_ldif` results
     * in an error. This may contain multiple LDIF entries. All LDIF entries are
     * performed in order. If Vault encounters an error while executing an entry in
     * the `rollback_ldif` it will attempt to continue executing any remaining
     * entries. This field may optionally be provided as a base64 encoded string.
     * 
     */
    @Export(name="rollbackLdif", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rollbackLdif;

    /**
     * @return A templatized LDIF string used to attempt to
     * rollback any changes in the event that execution of the `creation_ldif` results
     * in an error. This may contain multiple LDIF entries. All LDIF entries are
     * performed in order. If Vault encounters an error while executing an entry in
     * the `rollback_ldif` it will attempt to continue executing any remaining
     * entries. This field may optionally be provided as a base64 encoded string.
     * 
     */
    public Output<Optional<String>> rollbackLdif() {
        return Codegen.optional(this.rollbackLdif);
    }
    /**
     * A template used to generate a dynamic
     * username. This will be used to fill in the `.Username` field within the
     * `creation_ldif` string.
     * 
     */
    @Export(name="usernameTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> usernameTemplate;

    /**
     * @return A template used to generate a dynamic
     * username. This will be used to fill in the `.Username` field within the
     * `creation_ldif` string.
     * 
     */
    public Output<Optional<String>> usernameTemplate() {
        return Codegen.optional(this.usernameTemplate);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretBackendDynamicRole(String name) {
        this(name, SecretBackendDynamicRoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretBackendDynamicRole(String name, SecretBackendDynamicRoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretBackendDynamicRole(String name, SecretBackendDynamicRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole", name, args == null ? SecretBackendDynamicRoleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SecretBackendDynamicRole(String name, Output<String> id, @Nullable SecretBackendDynamicRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretBackendDynamicRole get(String name, Output<String> id, @Nullable SecretBackendDynamicRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecretBackendDynamicRole(name, id, state, options);
    }
}
