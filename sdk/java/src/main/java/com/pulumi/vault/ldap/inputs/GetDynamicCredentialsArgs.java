// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.ldap.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDynamicCredentialsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDynamicCredentialsArgs Empty = new GetDynamicCredentialsArgs();

    @Import(name="mount", required=true)
    private Output<String> mount;

    public Output<String> mount() {
        return this.mount;
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="roleName", required=true)
    private Output<String> roleName;

    public Output<String> roleName() {
        return this.roleName;
    }

    private GetDynamicCredentialsArgs() {}

    private GetDynamicCredentialsArgs(GetDynamicCredentialsArgs $) {
        this.mount = $.mount;
        this.namespace = $.namespace;
        this.roleName = $.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDynamicCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDynamicCredentialsArgs $;

        public Builder() {
            $ = new GetDynamicCredentialsArgs();
        }

        public Builder(GetDynamicCredentialsArgs defaults) {
            $ = new GetDynamicCredentialsArgs(Objects.requireNonNull(defaults));
        }

        public Builder mount(Output<String> mount) {
            $.mount = mount;
            return this;
        }

        public Builder mount(String mount) {
            return mount(Output.of(mount));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder roleName(Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public GetDynamicCredentialsArgs build() {
            if ($.mount == null) {
                throw new MissingRequiredPropertyException("GetDynamicCredentialsArgs", "mount");
            }
            if ($.roleName == null) {
                throw new MissingRequiredPropertyException("GetDynamicCredentialsArgs", "roleName");
            }
            return $;
        }
    }

}
