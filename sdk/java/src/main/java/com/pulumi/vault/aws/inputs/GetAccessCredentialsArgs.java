// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccessCredentialsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessCredentialsArgs Empty = new GetAccessCredentialsArgs();

    /**
     * The path to the AWS secret backend to
     * read credentials from, with no leading or trailing `/`s.
     * 
     */
    @Import(name="backend", required=true)
    private Output<String> backend;

    /**
     * @return The path to the AWS secret backend to
     * read credentials from, with no leading or trailing `/`s.
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }

    /**
     * The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The region the read credentials belong to.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region the read credentials belong to.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The name of the AWS secret backend role to read
     * credentials from, with no leading or trailing `/`s.
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return The name of the AWS secret backend role to read
     * credentials from, with no leading or trailing `/`s.
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    /**
     * The specific AWS ARN to use
     * from the configured role. If the role does not have multiple ARNs, this does
     * not need to be specified.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The specific AWS ARN to use
     * from the configured role. If the role does not have multiple ARNs, this does
     * not need to be specified.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Specifies the TTL for the use of the STS token. This
     * is specified as a string with a duration suffix. Valid only when
     * `credential_type` of the connected `vault.aws.SecretBackendRole` resource is `assumed_role` or `federation_token`
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<String> ttl;

    /**
     * @return Specifies the TTL for the use of the STS token. This
     * is specified as a string with a duration suffix. Valid only when
     * `credential_type` of the connected `vault.aws.SecretBackendRole` resource is `assumed_role` or `federation_token`
     * 
     */
    public Optional<Output<String>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * The type of credentials to read. Defaults
     * to `&#34;creds&#34;`, which just returns an AWS Access Key ID and Secret
     * Key. Can also be set to `&#34;sts&#34;`, which will return a security token
     * in addition to the keys.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of credentials to read. Defaults
     * to `&#34;creds&#34;`, which just returns an AWS Access Key ID and Secret
     * Key. Can also be set to `&#34;sts&#34;`, which will return a security token
     * in addition to the keys.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private GetAccessCredentialsArgs() {}

    private GetAccessCredentialsArgs(GetAccessCredentialsArgs $) {
        this.backend = $.backend;
        this.namespace = $.namespace;
        this.region = $.region;
        this.role = $.role;
        this.roleArn = $.roleArn;
        this.ttl = $.ttl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessCredentialsArgs $;

        public Builder() {
            $ = new GetAccessCredentialsArgs();
        }

        public Builder(GetAccessCredentialsArgs defaults) {
            $ = new GetAccessCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The path to the AWS secret backend to
         * read credentials from, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The path to the AWS secret backend to
         * read credentials from, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param namespace The namespace of the target resource.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace of the target resource.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param region The region the read credentials belong to.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region the read credentials belong to.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param role The name of the AWS secret backend role to read
         * credentials from, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The name of the AWS secret backend role to read
         * credentials from, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param roleArn The specific AWS ARN to use
         * from the configured role. If the role does not have multiple ARNs, this does
         * not need to be specified.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The specific AWS ARN to use
         * from the configured role. If the role does not have multiple ARNs, this does
         * not need to be specified.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param ttl Specifies the TTL for the use of the STS token. This
         * is specified as a string with a duration suffix. Valid only when
         * `credential_type` of the connected `vault.aws.SecretBackendRole` resource is `assumed_role` or `federation_token`
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<String> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl Specifies the TTL for the use of the STS token. This
         * is specified as a string with a duration suffix. Valid only when
         * `credential_type` of the connected `vault.aws.SecretBackendRole` resource is `assumed_role` or `federation_token`
         * 
         * @return builder
         * 
         */
        public Builder ttl(String ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param type The type of credentials to read. Defaults
         * to `&#34;creds&#34;`, which just returns an AWS Access Key ID and Secret
         * Key. Can also be set to `&#34;sts&#34;`, which will return a security token
         * in addition to the keys.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of credentials to read. Defaults
         * to `&#34;creds&#34;`, which just returns an AWS Access Key ID and Secret
         * Key. Can also be set to `&#34;sts&#34;`, which will return a security token
         * in addition to the keys.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetAccessCredentialsArgs build() {
            $.backend = Objects.requireNonNull($.backend, "expected parameter 'backend' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            return $;
        }
    }

}
