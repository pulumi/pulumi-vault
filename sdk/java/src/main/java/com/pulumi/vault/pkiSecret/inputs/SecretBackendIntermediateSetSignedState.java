// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretBackendIntermediateSetSignedState extends com.pulumi.resources.ResourceArgs {

    public static final SecretBackendIntermediateSetSignedState Empty = new SecretBackendIntermediateSetSignedState();

    /**
     * The PKI secret backend the resource belongs to.
     * 
     */
    @Import(name="backend")
    private @Nullable Output<String> backend;

    /**
     * @return The PKI secret backend the resource belongs to.
     * 
     */
    public Optional<Output<String>> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * Specifies the PEM encoded certificate. May optionally append additional
     * CA certificates to populate the whole chain, which will then enable returning the full chain from
     * issue and sign operations.
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<String> certificate;

    /**
     * @return Specifies the PEM encoded certificate. May optionally append additional
     * CA certificates to populate the whole chain, which will then enable returning the full chain from
     * issue and sign operations.
     * 
     */
    public Optional<Output<String>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * The imported issuers indicating which issuers were created as part of
     * this request.
     * 
     */
    @Import(name="importedIssuers")
    private @Nullable Output<List<String>> importedIssuers;

    /**
     * @return The imported issuers indicating which issuers were created as part of
     * this request.
     * 
     */
    public Optional<Output<List<String>>> importedIssuers() {
        return Optional.ofNullable(this.importedIssuers);
    }

    /**
     * The imported keys indicating which keys were created as part of this request.
     * 
     */
    @Import(name="importedKeys")
    private @Nullable Output<List<String>> importedKeys;

    /**
     * @return The imported keys indicating which keys were created as part of this request.
     * 
     */
    public Optional<Output<List<String>>> importedKeys() {
        return Optional.ofNullable(this.importedKeys);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private SecretBackendIntermediateSetSignedState() {}

    private SecretBackendIntermediateSetSignedState(SecretBackendIntermediateSetSignedState $) {
        this.backend = $.backend;
        this.certificate = $.certificate;
        this.importedIssuers = $.importedIssuers;
        this.importedKeys = $.importedKeys;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretBackendIntermediateSetSignedState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretBackendIntermediateSetSignedState $;

        public Builder() {
            $ = new SecretBackendIntermediateSetSignedState();
        }

        public Builder(SecretBackendIntermediateSetSignedState defaults) {
            $ = new SecretBackendIntermediateSetSignedState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The PKI secret backend the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The PKI secret backend the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param certificate Specifies the PEM encoded certificate. May optionally append additional
         * CA certificates to populate the whole chain, which will then enable returning the full chain from
         * issue and sign operations.
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate Specifies the PEM encoded certificate. May optionally append additional
         * CA certificates to populate the whole chain, which will then enable returning the full chain from
         * issue and sign operations.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param importedIssuers The imported issuers indicating which issuers were created as part of
         * this request.
         * 
         * @return builder
         * 
         */
        public Builder importedIssuers(@Nullable Output<List<String>> importedIssuers) {
            $.importedIssuers = importedIssuers;
            return this;
        }

        /**
         * @param importedIssuers The imported issuers indicating which issuers were created as part of
         * this request.
         * 
         * @return builder
         * 
         */
        public Builder importedIssuers(List<String> importedIssuers) {
            return importedIssuers(Output.of(importedIssuers));
        }

        /**
         * @param importedIssuers The imported issuers indicating which issuers were created as part of
         * this request.
         * 
         * @return builder
         * 
         */
        public Builder importedIssuers(String... importedIssuers) {
            return importedIssuers(List.of(importedIssuers));
        }

        /**
         * @param importedKeys The imported keys indicating which keys were created as part of this request.
         * 
         * @return builder
         * 
         */
        public Builder importedKeys(@Nullable Output<List<String>> importedKeys) {
            $.importedKeys = importedKeys;
            return this;
        }

        /**
         * @param importedKeys The imported keys indicating which keys were created as part of this request.
         * 
         * @return builder
         * 
         */
        public Builder importedKeys(List<String> importedKeys) {
            return importedKeys(Output.of(importedKeys));
        }

        /**
         * @param importedKeys The imported keys indicating which keys were created as part of this request.
         * 
         * @return builder
         * 
         */
        public Builder importedKeys(String... importedKeys) {
            return importedKeys(List.of(importedKeys));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public SecretBackendIntermediateSetSignedState build() {
            return $;
        }
    }

}
