// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.aws;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.aws.AuthBackendCertArgs;
import com.pulumi.vault.aws.inputs.AuthBackendCertState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * AWS auth backend certificates can be imported using `auth/`, the `backend` path, `/config/certificate/`, and the `cert_name` e.g.
 * 
 * ```sh
 * $ pulumi import vault:aws/authBackendCert:AuthBackendCert example auth/aws/config/certificate/my-cert
 * ```
 * 
 */
@ResourceType(type="vault:aws/authBackendCert:AuthBackendCert")
public class AuthBackendCert extends com.pulumi.resources.CustomResource {
    /**
     * The  Base64 encoded AWS Public key required to
     * verify PKCS7 signature of the EC2 instance metadata. You can find this key in
     * the [AWS
     * documentation](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html).
     * 
     */
    @Export(name="awsPublicCert", refs={String.class}, tree="[0]")
    private Output<String> awsPublicCert;

    /**
     * @return The  Base64 encoded AWS Public key required to
     * verify PKCS7 signature of the EC2 instance metadata. You can find this key in
     * the [AWS
     * documentation](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html).
     * 
     */
    public Output<String> awsPublicCert() {
        return this.awsPublicCert;
    }
    /**
     * The path the AWS auth backend being configured was
     * mounted at.  Defaults to `aws`.
     * 
     */
    @Export(name="backend", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backend;

    /**
     * @return The path the AWS auth backend being configured was
     * mounted at.  Defaults to `aws`.
     * 
     */
    public Output<Optional<String>> backend() {
        return Codegen.optional(this.backend);
    }
    /**
     * The name of the certificate.
     * 
     */
    @Export(name="certName", refs={String.class}, tree="[0]")
    private Output<String> certName;

    /**
     * @return The name of the certificate.
     * 
     */
    public Output<String> certName() {
        return this.certName;
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Either &#34;pkcs7&#34; or &#34;identity&#34;, indicating the type of
     * document which can be verified using the given certificate. Defaults to
     * &#34;pkcs7&#34;.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return Either &#34;pkcs7&#34; or &#34;identity&#34;, indicating the type of
     * document which can be verified using the given certificate. Defaults to
     * &#34;pkcs7&#34;.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AuthBackendCert(String name) {
        this(name, AuthBackendCertArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AuthBackendCert(String name, AuthBackendCertArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AuthBackendCert(String name, AuthBackendCertArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:aws/authBackendCert:AuthBackendCert", name, args == null ? AuthBackendCertArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AuthBackendCert(String name, Output<String> id, @Nullable AuthBackendCertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:aws/authBackendCert:AuthBackendCert", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AuthBackendCert get(String name, Output<String> id, @Nullable AuthBackendCertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AuthBackendCert(name, id, state, options);
    }
}
