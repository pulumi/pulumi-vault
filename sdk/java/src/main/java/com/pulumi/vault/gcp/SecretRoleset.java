// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.gcp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.gcp.SecretRolesetArgs;
import com.pulumi.vault.gcp.inputs.SecretRolesetState;
import com.pulumi.vault.gcp.outputs.SecretRolesetBinding;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a Roleset in the [GCP Secrets Engine](https://www.vaultproject.io/docs/secrets/gcp/index.html) for Vault.
 * 
 * Each Roleset is [tied](https://www.vaultproject.io/docs/secrets/gcp/index.html#service-accounts-are-tied-to-rolesets) to a Service Account, and can have one or more [bindings](https://www.vaultproject.io/docs/secrets/gcp/index.html#roleset-bindings) associated with it.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.gcp.SecretBackend;
 * import com.pulumi.vault.gcp.SecretBackendArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FileArgs;
 * import com.pulumi.vault.gcp.SecretRoleset;
 * import com.pulumi.vault.gcp.SecretRolesetArgs;
 * import com.pulumi.vault.gcp.inputs.SecretRolesetBindingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = "my-awesome-project";
 * 
 *         var gcp = new SecretBackend("gcp", SecretBackendArgs.builder()
 *             .path("gcp")
 *             .credentials(StdFunctions.file(FileArgs.builder()
 *                 .input("credentials.json")
 *                 .build()).result())
 *             .build());
 * 
 *         var roleset = new SecretRoleset("roleset", SecretRolesetArgs.builder()
 *             .backend(gcp.path())
 *             .roleset("project_viewer")
 *             .secretType("access_token")
 *             .project(project)
 *             .tokenScopes("https://www.googleapis.com/auth/cloud-platform")
 *             .bindings(SecretRolesetBindingArgs.builder()
 *                 .resource(String.format("//cloudresourcemanager.googleapis.com/projects/%s", project))
 *                 .roles("roles/viewer")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A roleset can be imported using its Vault Path. For example, referencing the example above,
 * 
 * ```sh
 * $ pulumi import vault:gcp/secretRoleset:SecretRoleset roleset gcp/roleset/project_viewer
 * ```
 * 
 */
@ResourceType(type="vault:gcp/secretRoleset:SecretRoleset")
public class SecretRoleset extends com.pulumi.resources.CustomResource {
    /**
     * Path where the GCP Secrets Engine is mounted
     * 
     */
    @Export(name="backend", refs={String.class}, tree="[0]")
    private Output<String> backend;

    /**
     * @return Path where the GCP Secrets Engine is mounted
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }
    /**
     * Bindings to create for this roleset. This can be specified multiple times for multiple bindings. Structure is documented below.
     * 
     */
    @Export(name="bindings", refs={List.class,SecretRolesetBinding.class}, tree="[0,1]")
    private Output<List<SecretRolesetBinding>> bindings;

    /**
     * @return Bindings to create for this roleset. This can be specified multiple times for multiple bindings. Structure is documented below.
     * 
     */
    public Output<List<SecretRolesetBinding>> bindings() {
        return this.bindings;
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Name of the GCP project that this roleset&#39;s service account will belong to.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return Name of the GCP project that this roleset&#39;s service account will belong to.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Name of the Roleset to create
     * 
     */
    @Export(name="roleset", refs={String.class}, tree="[0]")
    private Output<String> roleset;

    /**
     * @return Name of the Roleset to create
     * 
     */
    public Output<String> roleset() {
        return this.roleset;
    }
    /**
     * Type of secret generated for this role set. Accepted values: `access_token`, `service_account_key`. Defaults to `access_token`.
     * 
     */
    @Export(name="secretType", refs={String.class}, tree="[0]")
    private Output<String> secretType;

    /**
     * @return Type of secret generated for this role set. Accepted values: `access_token`, `service_account_key`. Defaults to `access_token`.
     * 
     */
    public Output<String> secretType() {
        return this.secretType;
    }
    /**
     * Email of the service account created by Vault for this Roleset.
     * 
     */
    @Export(name="serviceAccountEmail", refs={String.class}, tree="[0]")
    private Output<String> serviceAccountEmail;

    /**
     * @return Email of the service account created by Vault for this Roleset.
     * 
     */
    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail;
    }
    /**
     * List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only).
     * 
     */
    @Export(name="tokenScopes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tokenScopes;

    /**
     * @return List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only).
     * 
     */
    public Output<Optional<List<String>>> tokenScopes() {
        return Codegen.optional(this.tokenScopes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretRoleset(java.lang.String name) {
        this(name, SecretRolesetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretRoleset(java.lang.String name, SecretRolesetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretRoleset(java.lang.String name, SecretRolesetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:gcp/secretRoleset:SecretRoleset", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecretRoleset(java.lang.String name, Output<java.lang.String> id, @Nullable SecretRolesetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:gcp/secretRoleset:SecretRoleset", name, state, makeResourceOptions(options, id), false);
    }

    private static SecretRolesetArgs makeArgs(SecretRolesetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecretRolesetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretRoleset get(java.lang.String name, Output<java.lang.String> id, @Nullable SecretRolesetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecretRoleset(name, id, state, options);
    }
}
