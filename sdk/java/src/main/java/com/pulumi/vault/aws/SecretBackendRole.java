// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.aws;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.aws.SecretBackendRoleArgs;
import com.pulumi.vault.aws.inputs.SecretBackendRoleState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.aws.SecretBackend;
 * import com.pulumi.vault.aws.SecretBackendArgs;
 * import com.pulumi.vault.aws.SecretBackendRole;
 * import com.pulumi.vault.aws.SecretBackendRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var aws = new SecretBackend(&#34;aws&#34;, SecretBackendArgs.builder()        
 *             .accessKey(&#34;AKIA.....&#34;)
 *             .secretKey(&#34;AWS secret key&#34;)
 *             .build());
 * 
 *         var role = new SecretBackendRole(&#34;role&#34;, SecretBackendRoleArgs.builder()        
 *             .backend(aws.path())
 *             .credentialType(&#34;iam_user&#34;)
 *             .policyDocument(&#34;&#34;&#34;
 * {
 *   &#34;Version&#34;: &#34;2012-10-17&#34;,
 *   &#34;Statement&#34;: [
 *     {
 *       &#34;Effect&#34;: &#34;Allow&#34;,
 *       &#34;Action&#34;: &#34;iam:*&#34;,
 *       &#34;Resource&#34;: &#34;*&#34;
 *     }
 *   ]
 * }
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AWS secret backend roles can be imported using the `path`, e.g.
 * 
 * ```sh
 * $ pulumi import vault:aws/secretBackendRole:SecretBackendRole role aws/roles/deploy
 * ```
 * 
 */
@ResourceType(type="vault:aws/secretBackendRole:SecretBackendRole")
public class SecretBackendRole extends com.pulumi.resources.CustomResource {
    /**
     * The path the AWS secret backend is mounted at,
     * with no leading or trailing `/`s.
     * 
     */
    @Export(name="backend", refs={String.class}, tree="[0]")
    private Output<String> backend;

    /**
     * @return The path the AWS secret backend is mounted at,
     * with no leading or trailing `/`s.
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }
    /**
     * Specifies the type of credential to be used when
     * retrieving credentials from the role. Must be one of `iam_user`, `assumed_role`, or
     * `federation_token`.
     * 
     */
    @Export(name="credentialType", refs={String.class}, tree="[0]")
    private Output<String> credentialType;

    /**
     * @return Specifies the type of credential to be used when
     * retrieving credentials from the role. Must be one of `iam_user`, `assumed_role`, or
     * `federation_token`.
     * 
     */
    public Output<String> credentialType() {
        return this.credentialType;
    }
    /**
     * The default TTL in seconds for STS credentials.
     * When a TTL is not specified when STS credentials are requested,
     * and a default TTL is specified on the role,
     * then this default TTL will be used. Valid only when `credential_type` is one of
     * `assumed_role` or `federation_token`.
     * 
     */
    @Export(name="defaultStsTtl", refs={Integer.class}, tree="[0]")
    private Output<Integer> defaultStsTtl;

    /**
     * @return The default TTL in seconds for STS credentials.
     * When a TTL is not specified when STS credentials are requested,
     * and a default TTL is specified on the role,
     * then this default TTL will be used. Valid only when `credential_type` is one of
     * `assumed_role` or `federation_token`.
     * 
     */
    public Output<Integer> defaultStsTtl() {
        return this.defaultStsTtl;
    }
    /**
     * A list of IAM group names. IAM users generated
     * against this vault role will be added to these IAM Groups. For a credential
     * type of `assumed_role` or `federation_token`, the policies sent to the
     * corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the
     * policies from each group in `iam_groups` combined with the `policy_document`
     * and `policy_arns` parameters.
     * 
     */
    @Export(name="iamGroups", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> iamGroups;

    /**
     * @return A list of IAM group names. IAM users generated
     * against this vault role will be added to these IAM Groups. For a credential
     * type of `assumed_role` or `federation_token`, the policies sent to the
     * corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the
     * policies from each group in `iam_groups` combined with the `policy_document`
     * and `policy_arns` parameters.
     * 
     */
    public Output<Optional<List<String>>> iamGroups() {
        return Codegen.optional(this.iamGroups);
    }
    /**
     * The max allowed TTL in seconds for STS credentials
     * (credentials TTL are capped to `max_sts_ttl`). Valid only when `credential_type` is
     * one of `assumed_role` or `federation_token`.
     * 
     */
    @Export(name="maxStsTtl", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxStsTtl;

    /**
     * @return The max allowed TTL in seconds for STS credentials
     * (credentials TTL are capped to `max_sts_ttl`). Valid only when `credential_type` is
     * one of `assumed_role` or `federation_token`.
     * 
     */
    public Output<Integer> maxStsTtl() {
        return this.maxStsTtl;
    }
    /**
     * The name to identify this role within the backend.
     * Must be unique within the backend.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name to identify this role within the backend.
     * Must be unique within the backend.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * The ARN of the AWS Permissions
     * Boundary to attach to IAM users created in the role. Valid only when
     * `credential_type` is `iam_user`. If not specified, then no permissions boundary
     * policy will be attached.
     * 
     */
    @Export(name="permissionsBoundaryArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> permissionsBoundaryArn;

    /**
     * @return The ARN of the AWS Permissions
     * Boundary to attach to IAM users created in the role. Valid only when
     * `credential_type` is `iam_user`. If not specified, then no permissions boundary
     * policy will be attached.
     * 
     */
    public Output<Optional<String>> permissionsBoundaryArn() {
        return Codegen.optional(this.permissionsBoundaryArn);
    }
    /**
     * Specifies a list of AWS managed policy ARNs. The
     * behavior depends on the credential type. With `iam_user`, the policies will be
     * attached to IAM users when they are requested. With `assumed_role` and
     * `federation_token`, the policy ARNs will act as a filter on what the credentials
     * can do, similar to `policy_document`. When `credential_type` is `iam_user` or
     * `federation_token`, at least one of `policy_document` or `policy_arns` must
     * be specified.
     * 
     */
    @Export(name="policyArns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> policyArns;

    /**
     * @return Specifies a list of AWS managed policy ARNs. The
     * behavior depends on the credential type. With `iam_user`, the policies will be
     * attached to IAM users when they are requested. With `assumed_role` and
     * `federation_token`, the policy ARNs will act as a filter on what the credentials
     * can do, similar to `policy_document`. When `credential_type` is `iam_user` or
     * `federation_token`, at least one of `policy_document` or `policy_arns` must
     * be specified.
     * 
     */
    public Output<Optional<List<String>>> policyArns() {
        return Codegen.optional(this.policyArns);
    }
    /**
     * The IAM policy document for the role. The
     * behavior depends on the credential type. With `iam_user`, the policy document
     * will be attached to the IAM user generated and augment the permissions the IAM
     * user has. With `assumed_role` and `federation_token`, the policy document will
     * act as a filter on what the credentials can do, similar to `policy_arns`.
     * 
     */
    @Export(name="policyDocument", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policyDocument;

    /**
     * @return The IAM policy document for the role. The
     * behavior depends on the credential type. With `iam_user`, the policy document
     * will be attached to the IAM user generated and augment the permissions the IAM
     * user has. With `assumed_role` and `federation_token`, the policy document will
     * act as a filter on what the credentials can do, similar to `policy_arns`.
     * 
     */
    public Output<Optional<String>> policyDocument() {
        return Codegen.optional(this.policyDocument);
    }
    /**
     * Specifies the ARNs of the AWS roles this Vault role
     * is allowed to assume. Required when `credential_type` is `assumed_role` and
     * prohibited otherwise.
     * 
     */
    @Export(name="roleArns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> roleArns;

    /**
     * @return Specifies the ARNs of the AWS roles this Vault role
     * is allowed to assume. Required when `credential_type` is `assumed_role` and
     * prohibited otherwise.
     * 
     */
    public Output<Optional<List<String>>> roleArns() {
        return Codegen.optional(this.roleArns);
    }
    /**
     * The path for the user name. Valid only when
     * `credential_type` is `iam_user`. Default is `/`.
     * 
     */
    @Export(name="userPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userPath;

    /**
     * @return The path for the user name. Valid only when
     * `credential_type` is `iam_user`. Default is `/`.
     * 
     */
    public Output<Optional<String>> userPath() {
        return Codegen.optional(this.userPath);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretBackendRole(String name) {
        this(name, SecretBackendRoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretBackendRole(String name, SecretBackendRoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretBackendRole(String name, SecretBackendRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:aws/secretBackendRole:SecretBackendRole", name, args == null ? SecretBackendRoleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SecretBackendRole(String name, Output<String> id, @Nullable SecretBackendRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:aws/secretBackendRole:SecretBackendRole", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretBackendRole get(String name, Output<String> id, @Nullable SecretBackendRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecretBackendRole(name, id, state, options);
    }
}
