// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.kmip;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.kmip.SecretRoleArgs;
import com.pulumi.vault.kmip.inputs.SecretRoleState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages KMIP Secret roles in a Vault server. This feature requires
 * Vault Enterprise. See the [Vault documentation](https://www.vaultproject.io/docs/secrets/kmip)
 * for more information.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.kmip.SecretBackend;
 * import com.pulumi.vault.kmip.SecretBackendArgs;
 * import com.pulumi.vault.kmip.SecretScope;
 * import com.pulumi.vault.kmip.SecretScopeArgs;
 * import com.pulumi.vault.kmip.SecretRole;
 * import com.pulumi.vault.kmip.SecretRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new SecretBackend(&#34;default&#34;, SecretBackendArgs.builder()        
 *             .path(&#34;kmip&#34;)
 *             .description(&#34;Vault KMIP backend&#34;)
 *             .build());
 * 
 *         var dev = new SecretScope(&#34;dev&#34;, SecretScopeArgs.builder()        
 *             .path(default_.path())
 *             .scope(&#34;dev&#34;)
 *             .force(true)
 *             .build());
 * 
 *         var admin = new SecretRole(&#34;admin&#34;, SecretRoleArgs.builder()        
 *             .path(dev.path())
 *             .scope(dev.scope())
 *             .role(&#34;admin&#34;)
 *             .tlsClientKeyType(&#34;ec&#34;)
 *             .tlsClientKeyBits(256)
 *             .operationActivate(true)
 *             .operationGet(true)
 *             .operationGetAttributes(true)
 *             .operationCreate(true)
 *             .operationDestroy(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * KMIP Secret role can be imported using the `path`, e.g.
 * 
 * ```sh
 * $ pulumi import vault:kmip/secretRole:SecretRole admin kmip
 * ```
 * 
 */
@ResourceType(type="vault:kmip/secretRole:SecretRole")
public class SecretRole extends com.pulumi.resources.CustomResource {
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Grant permission to use the KMIP Activate operation.
     * 
     */
    @Export(name="operationActivate", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationActivate;

    /**
     * @return Grant permission to use the KMIP Activate operation.
     * 
     */
    public Output<Boolean> operationActivate() {
        return this.operationActivate;
    }
    /**
     * Grant permission to use the KMIP Add Attribute operation.
     * 
     */
    @Export(name="operationAddAttribute", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationAddAttribute;

    /**
     * @return Grant permission to use the KMIP Add Attribute operation.
     * 
     */
    public Output<Boolean> operationAddAttribute() {
        return this.operationAddAttribute;
    }
    /**
     * Grant all permissions to this role. May not be specified with any other `operation_*` params.
     * 
     */
    @Export(name="operationAll", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationAll;

    /**
     * @return Grant all permissions to this role. May not be specified with any other `operation_*` params.
     * 
     */
    public Output<Boolean> operationAll() {
        return this.operationAll;
    }
    /**
     * Grant permission to use the KMIP Create operation.
     * 
     */
    @Export(name="operationCreate", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationCreate;

    /**
     * @return Grant permission to use the KMIP Create operation.
     * 
     */
    public Output<Boolean> operationCreate() {
        return this.operationCreate;
    }
    /**
     * Grant permission to use the KMIP Destroy operation.
     * 
     */
    @Export(name="operationDestroy", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationDestroy;

    /**
     * @return Grant permission to use the KMIP Destroy operation.
     * 
     */
    public Output<Boolean> operationDestroy() {
        return this.operationDestroy;
    }
    /**
     * Grant permission to use the KMIP Discover Version operation.
     * 
     */
    @Export(name="operationDiscoverVersions", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationDiscoverVersions;

    /**
     * @return Grant permission to use the KMIP Discover Version operation.
     * 
     */
    public Output<Boolean> operationDiscoverVersions() {
        return this.operationDiscoverVersions;
    }
    /**
     * Grant permission to use the KMIP Get operation.
     * 
     */
    @Export(name="operationGet", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationGet;

    /**
     * @return Grant permission to use the KMIP Get operation.
     * 
     */
    public Output<Boolean> operationGet() {
        return this.operationGet;
    }
    /**
     * Grant permission to use the KMIP Get Atrribute List operation.
     * 
     */
    @Export(name="operationGetAttributeList", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationGetAttributeList;

    /**
     * @return Grant permission to use the KMIP Get Atrribute List operation.
     * 
     */
    public Output<Boolean> operationGetAttributeList() {
        return this.operationGetAttributeList;
    }
    /**
     * Grant permission to use the KMIP Get Atrributes operation.
     * 
     */
    @Export(name="operationGetAttributes", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationGetAttributes;

    /**
     * @return Grant permission to use the KMIP Get Atrributes operation.
     * 
     */
    public Output<Boolean> operationGetAttributes() {
        return this.operationGetAttributes;
    }
    /**
     * Grant permission to use the KMIP Get Locate operation.
     * 
     */
    @Export(name="operationLocate", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationLocate;

    /**
     * @return Grant permission to use the KMIP Get Locate operation.
     * 
     */
    public Output<Boolean> operationLocate() {
        return this.operationLocate;
    }
    /**
     * Remove all permissions from this role. May not be specified with any other `operation_*` params.
     * 
     */
    @Export(name="operationNone", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationNone;

    /**
     * @return Remove all permissions from this role. May not be specified with any other `operation_*` params.
     * 
     */
    public Output<Boolean> operationNone() {
        return this.operationNone;
    }
    /**
     * Grant permission to use the KMIP Register operation.
     * 
     */
    @Export(name="operationRegister", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationRegister;

    /**
     * @return Grant permission to use the KMIP Register operation.
     * 
     */
    public Output<Boolean> operationRegister() {
        return this.operationRegister;
    }
    /**
     * Grant permission to use the KMIP Rekey operation.
     * 
     */
    @Export(name="operationRekey", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationRekey;

    /**
     * @return Grant permission to use the KMIP Rekey operation.
     * 
     */
    public Output<Boolean> operationRekey() {
        return this.operationRekey;
    }
    /**
     * Grant permission to use the KMIP Revoke operation.
     * 
     */
    @Export(name="operationRevoke", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> operationRevoke;

    /**
     * @return Grant permission to use the KMIP Revoke operation.
     * 
     */
    public Output<Boolean> operationRevoke() {
        return this.operationRevoke;
    }
    /**
     * The unique path this backend should be mounted at. Must
     * not begin or end with a `/`. Defaults to `kmip`.
     * 
     */
    @Export(name="path", refs={String.class}, tree="[0]")
    private Output<String> path;

    /**
     * @return The unique path this backend should be mounted at. Must
     * not begin or end with a `/`. Defaults to `kmip`.
     * 
     */
    public Output<String> path() {
        return this.path;
    }
    /**
     * Name of the role.
     * 
     */
    @Export(name="role", refs={String.class}, tree="[0]")
    private Output<String> role;

    /**
     * @return Name of the role.
     * 
     */
    public Output<String> role() {
        return this.role;
    }
    /**
     * Name of the scope.
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output<String> scope;

    /**
     * @return Name of the scope.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }
    /**
     * Client certificate key bits, valid values depend on key type.
     * 
     */
    @Export(name="tlsClientKeyBits", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tlsClientKeyBits;

    /**
     * @return Client certificate key bits, valid values depend on key type.
     * 
     */
    public Output<Optional<Integer>> tlsClientKeyBits() {
        return Codegen.optional(this.tlsClientKeyBits);
    }
    /**
     * Client certificate key type, `rsa` or `ec`.
     * 
     */
    @Export(name="tlsClientKeyType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tlsClientKeyType;

    /**
     * @return Client certificate key type, `rsa` or `ec`.
     * 
     */
    public Output<Optional<String>> tlsClientKeyType() {
        return Codegen.optional(this.tlsClientKeyType);
    }
    /**
     * Client certificate TTL in seconds.
     * 
     */
    @Export(name="tlsClientTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tlsClientTtl;

    /**
     * @return Client certificate TTL in seconds.
     * 
     */
    public Output<Optional<Integer>> tlsClientTtl() {
        return Codegen.optional(this.tlsClientTtl);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretRole(String name) {
        this(name, SecretRoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretRole(String name, SecretRoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretRole(String name, SecretRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:kmip/secretRole:SecretRole", name, args == null ? SecretRoleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SecretRole(String name, Output<String> id, @Nullable SecretRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:kmip/secretRole:SecretRole", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretRole get(String name, Output<String> id, @Nullable SecretRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecretRole(name, id, state, options);
    }
}
