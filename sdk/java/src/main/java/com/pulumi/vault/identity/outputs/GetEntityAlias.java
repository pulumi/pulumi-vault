// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEntityAlias {
    /**
     * @return Canonical ID of the Alias
     * 
     */
    private String canonicalId;
    /**
     * @return Creation time of the Alias
     * 
     */
    private String creationTime;
    /**
     * @return ID of the alias
     * 
     */
    private String id;
    /**
     * @return Last update time of the alias
     * 
     */
    private String lastUpdateTime;
    /**
     * @return List of canonical IDs merged with this alias
     * 
     */
    private List<String> mergedFromCanonicalIds;
    /**
     * @return Arbitrary metadata
     * 
     */
    private Map<String,Object> metadata;
    /**
     * @return Authentication mount acccessor which this alias belongs to
     * 
     */
    private String mountAccessor;
    /**
     * @return Authentication mount path which this alias belongs to
     * 
     */
    private String mountPath;
    /**
     * @return Authentication mount type which this alias belongs to
     * 
     */
    private String mountType;
    /**
     * @return Name of the alias
     * 
     */
    private String name;

    private GetEntityAlias() {}
    /**
     * @return Canonical ID of the Alias
     * 
     */
    public String canonicalId() {
        return this.canonicalId;
    }
    /**
     * @return Creation time of the Alias
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return ID of the alias
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Last update time of the alias
     * 
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }
    /**
     * @return List of canonical IDs merged with this alias
     * 
     */
    public List<String> mergedFromCanonicalIds() {
        return this.mergedFromCanonicalIds;
    }
    /**
     * @return Arbitrary metadata
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata;
    }
    /**
     * @return Authentication mount acccessor which this alias belongs to
     * 
     */
    public String mountAccessor() {
        return this.mountAccessor;
    }
    /**
     * @return Authentication mount path which this alias belongs to
     * 
     */
    public String mountPath() {
        return this.mountPath;
    }
    /**
     * @return Authentication mount type which this alias belongs to
     * 
     */
    public String mountType() {
        return this.mountType;
    }
    /**
     * @return Name of the alias
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityAlias defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String canonicalId;
        private String creationTime;
        private String id;
        private String lastUpdateTime;
        private List<String> mergedFromCanonicalIds;
        private Map<String,Object> metadata;
        private String mountAccessor;
        private String mountPath;
        private String mountType;
        private String name;
        public Builder() {}
        public Builder(GetEntityAlias defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.canonicalId = defaults.canonicalId;
    	      this.creationTime = defaults.creationTime;
    	      this.id = defaults.id;
    	      this.lastUpdateTime = defaults.lastUpdateTime;
    	      this.mergedFromCanonicalIds = defaults.mergedFromCanonicalIds;
    	      this.metadata = defaults.metadata;
    	      this.mountAccessor = defaults.mountAccessor;
    	      this.mountPath = defaults.mountPath;
    	      this.mountType = defaults.mountType;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder canonicalId(String canonicalId) {
            this.canonicalId = Objects.requireNonNull(canonicalId);
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdateTime(String lastUpdateTime) {
            this.lastUpdateTime = Objects.requireNonNull(lastUpdateTime);
            return this;
        }
        @CustomType.Setter
        public Builder mergedFromCanonicalIds(List<String> mergedFromCanonicalIds) {
            this.mergedFromCanonicalIds = Objects.requireNonNull(mergedFromCanonicalIds);
            return this;
        }
        public Builder mergedFromCanonicalIds(String... mergedFromCanonicalIds) {
            return mergedFromCanonicalIds(List.of(mergedFromCanonicalIds));
        }
        @CustomType.Setter
        public Builder metadata(Map<String,Object> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        @CustomType.Setter
        public Builder mountAccessor(String mountAccessor) {
            this.mountAccessor = Objects.requireNonNull(mountAccessor);
            return this;
        }
        @CustomType.Setter
        public Builder mountPath(String mountPath) {
            this.mountPath = Objects.requireNonNull(mountPath);
            return this;
        }
        @CustomType.Setter
        public Builder mountType(String mountType) {
            this.mountType = Objects.requireNonNull(mountType);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetEntityAlias build() {
            final var _resultValue = new GetEntityAlias();
            _resultValue.canonicalId = canonicalId;
            _resultValue.creationTime = creationTime;
            _resultValue.id = id;
            _resultValue.lastUpdateTime = lastUpdateTime;
            _resultValue.mergedFromCanonicalIds = mergedFromCanonicalIds;
            _resultValue.metadata = metadata;
            _resultValue.mountAccessor = mountAccessor;
            _resultValue.mountPath = mountPath;
            _resultValue.mountType = mountType;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
