// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.kubernetes.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAuthBackendConfigPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuthBackendConfigPlainArgs Empty = new GetAuthBackendConfigPlainArgs();

    /**
     * The unique name for the Kubernetes backend the config to
     * retrieve Role attributes for resides in. Defaults to &#34;kubernetes&#34;.
     * 
     */
    @Import(name="backend")
    private @Nullable String backend;

    /**
     * @return The unique name for the Kubernetes backend the config to
     * retrieve Role attributes for resides in. Defaults to &#34;kubernetes&#34;.
     * 
     */
    public Optional<String> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * (Optional) Disable JWT issuer validation. Allows to skip ISS validation. Requires Vault `v1.5.4+` or Vault auth kubernetes plugin `v0.7.1+`
     * 
     */
    @Import(name="disableIssValidation")
    private @Nullable Boolean disableIssValidation;

    /**
     * @return (Optional) Disable JWT issuer validation. Allows to skip ISS validation. Requires Vault `v1.5.4+` or Vault auth kubernetes plugin `v0.7.1+`
     * 
     */
    public Optional<Boolean> disableIssValidation() {
        return Optional.ofNullable(this.disableIssValidation);
    }

    /**
     * (Optional) Disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod. Requires Vault `v1.5.4+` or Vault auth kubernetes plugin `v0.7.1+`
     * 
     */
    @Import(name="disableLocalCaJwt")
    private @Nullable Boolean disableLocalCaJwt;

    /**
     * @return (Optional) Disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod. Requires Vault `v1.5.4+` or Vault auth kubernetes plugin `v0.7.1+`
     * 
     */
    public Optional<Boolean> disableLocalCaJwt() {
        return Optional.ofNullable(this.disableLocalCaJwt);
    }

    /**
     * Optional JWT issuer. If no issuer is specified, `kubernetes.io/serviceaccount` will be used as the default issuer.
     * 
     */
    @Import(name="issuer")
    private @Nullable String issuer;

    /**
     * @return Optional JWT issuer. If no issuer is specified, `kubernetes.io/serviceaccount` will be used as the default issuer.
     * 
     */
    public Optional<String> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    /**
     * PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API.
     * 
     */
    @Import(name="kubernetesCaCert")
    private @Nullable String kubernetesCaCert;

    /**
     * @return PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API.
     * 
     */
    public Optional<String> kubernetesCaCert() {
        return Optional.ofNullable(this.kubernetesCaCert);
    }

    /**
     * Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.
     * 
     */
    @Import(name="kubernetesHost")
    private @Nullable String kubernetesHost;

    /**
     * @return Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.
     * 
     */
    public Optional<String> kubernetesHost() {
        return Optional.ofNullable(this.kubernetesHost);
    }

    /**
     * The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured namespace.
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable String namespace;

    /**
     * @return The namespace of the target resource.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured namespace.
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
     * 
     */
    @Import(name="pemKeys")
    private @Nullable List<String> pemKeys;

    /**
     * @return Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
     * 
     */
    public Optional<List<String>> pemKeys() {
        return Optional.ofNullable(this.pemKeys);
    }

    /**
     * (Optional) Use annotations from the client token&#39;s associated service account as alias metadata for the Vault entity. Requires Vault `v1.16+` or Vault auth kubernetes plugin `v0.18.0+`
     * 
     */
    @Import(name="useAnnotationsAsAliasMetadata")
    private @Nullable Boolean useAnnotationsAsAliasMetadata;

    /**
     * @return (Optional) Use annotations from the client token&#39;s associated service account as alias metadata for the Vault entity. Requires Vault `v1.16+` or Vault auth kubernetes plugin `v0.18.0+`
     * 
     */
    public Optional<Boolean> useAnnotationsAsAliasMetadata() {
        return Optional.ofNullable(this.useAnnotationsAsAliasMetadata);
    }

    private GetAuthBackendConfigPlainArgs() {}

    private GetAuthBackendConfigPlainArgs(GetAuthBackendConfigPlainArgs $) {
        this.backend = $.backend;
        this.disableIssValidation = $.disableIssValidation;
        this.disableLocalCaJwt = $.disableLocalCaJwt;
        this.issuer = $.issuer;
        this.kubernetesCaCert = $.kubernetesCaCert;
        this.kubernetesHost = $.kubernetesHost;
        this.namespace = $.namespace;
        this.pemKeys = $.pemKeys;
        this.useAnnotationsAsAliasMetadata = $.useAnnotationsAsAliasMetadata;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuthBackendConfigPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuthBackendConfigPlainArgs $;

        public Builder() {
            $ = new GetAuthBackendConfigPlainArgs();
        }

        public Builder(GetAuthBackendConfigPlainArgs defaults) {
            $ = new GetAuthBackendConfigPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The unique name for the Kubernetes backend the config to
         * retrieve Role attributes for resides in. Defaults to &#34;kubernetes&#34;.
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable String backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param disableIssValidation (Optional) Disable JWT issuer validation. Allows to skip ISS validation. Requires Vault `v1.5.4+` or Vault auth kubernetes plugin `v0.7.1+`
         * 
         * @return builder
         * 
         */
        public Builder disableIssValidation(@Nullable Boolean disableIssValidation) {
            $.disableIssValidation = disableIssValidation;
            return this;
        }

        /**
         * @param disableLocalCaJwt (Optional) Disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod. Requires Vault `v1.5.4+` or Vault auth kubernetes plugin `v0.7.1+`
         * 
         * @return builder
         * 
         */
        public Builder disableLocalCaJwt(@Nullable Boolean disableLocalCaJwt) {
            $.disableLocalCaJwt = disableLocalCaJwt;
            return this;
        }

        /**
         * @param issuer Optional JWT issuer. If no issuer is specified, `kubernetes.io/serviceaccount` will be used as the default issuer.
         * 
         * @return builder
         * 
         */
        public Builder issuer(@Nullable String issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param kubernetesCaCert PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesCaCert(@Nullable String kubernetesCaCert) {
            $.kubernetesCaCert = kubernetesCaCert;
            return this;
        }

        /**
         * @param kubernetesHost Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesHost(@Nullable String kubernetesHost) {
            $.kubernetesHost = kubernetesHost;
            return this;
        }

        /**
         * @param namespace The namespace of the target resource.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured namespace.
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param pemKeys Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
         * 
         * @return builder
         * 
         */
        public Builder pemKeys(@Nullable List<String> pemKeys) {
            $.pemKeys = pemKeys;
            return this;
        }

        /**
         * @param pemKeys Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
         * 
         * @return builder
         * 
         */
        public Builder pemKeys(String... pemKeys) {
            return pemKeys(List.of(pemKeys));
        }

        /**
         * @param useAnnotationsAsAliasMetadata (Optional) Use annotations from the client token&#39;s associated service account as alias metadata for the Vault entity. Requires Vault `v1.16+` or Vault auth kubernetes plugin `v0.18.0+`
         * 
         * @return builder
         * 
         */
        public Builder useAnnotationsAsAliasMetadata(@Nullable Boolean useAnnotationsAsAliasMetadata) {
            $.useAnnotationsAsAliasMetadata = useAnnotationsAsAliasMetadata;
            return this;
        }

        public GetAuthBackendConfigPlainArgs build() {
            return $;
        }
    }

}
