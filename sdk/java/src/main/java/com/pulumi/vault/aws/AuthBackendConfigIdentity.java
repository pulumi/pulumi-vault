// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.aws;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vault.Utilities;
import com.pulumi.vault.aws.AuthBackendConfigIdentityArgs;
import com.pulumi.vault.aws.inputs.AuthBackendConfigIdentityState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an AWS auth backend identity configuration in a Vault server. This configuration defines how Vault interacts
 * with the identity store. See the [Vault documentation](https://www.vaultproject.io/docs/auth/aws.html) for more
 * information.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vault.AuthBackend;
 * import com.pulumi.vault.AuthBackendArgs;
 * import com.pulumi.vault.aws.AuthBackendConfigIdentity;
 * import com.pulumi.vault.aws.AuthBackendConfigIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var aws = new AuthBackend("aws", AuthBackendArgs.builder()
 *             .type("aws")
 *             .build());
 * 
 *         var example = new AuthBackendConfigIdentity("example", AuthBackendConfigIdentityArgs.builder()
 *             .backend(aws.path())
 *             .iamAlias("full_arn")
 *             .iamMetadatas(            
 *                 "canonical_arn",
 *                 "account_id")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * AWS auth backend identity config can be imported using `auth/`, the `backend` path, and `/config/identity` e.g.
 * 
 * ```sh
 * $ pulumi import vault:aws/authBackendConfigIdentity:AuthBackendConfigIdentity example auth/aws/config/identity
 * ```
 * 
 */
@ResourceType(type="vault:aws/authBackendConfigIdentity:AuthBackendConfigIdentity")
public class AuthBackendConfigIdentity extends com.pulumi.resources.CustomResource {
    /**
     * The path the AWS auth backend being configured was
     * mounted at.  Defaults to `aws`.
     * 
     */
    @Export(name="backend", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backend;

    /**
     * @return The path the AWS auth backend being configured was
     * mounted at.  Defaults to `aws`.
     * 
     */
    public Output<Optional<String>> backend() {
        return Codegen.optional(this.backend);
    }
    /**
     * How to generate the identity alias when using the ec2 auth method. Valid choices are
     * `role_id`, `instance_id`, and `image_id`. Defaults to `role_id`
     * 
     */
    @Export(name="ec2Alias", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ec2Alias;

    /**
     * @return How to generate the identity alias when using the ec2 auth method. Valid choices are
     * `role_id`, `instance_id`, and `image_id`. Defaults to `role_id`
     * 
     */
    public Output<Optional<String>> ec2Alias() {
        return Codegen.optional(this.ec2Alias);
    }
    /**
     * The metadata to include on the token returned by the `login` endpoint. This metadata will be
     * added to both audit logs, and on the `ec2_alias`
     * 
     */
    @Export(name="ec2Metadatas", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ec2Metadatas;

    /**
     * @return The metadata to include on the token returned by the `login` endpoint. This metadata will be
     * added to both audit logs, and on the `ec2_alias`
     * 
     */
    public Output<Optional<List<String>>> ec2Metadatas() {
        return Codegen.optional(this.ec2Metadatas);
    }
    /**
     * How to generate the identity alias when using the iam auth method. Valid choices are
     * `role_id`, `unique_id`, and `full_arn`. Defaults to `role_id`
     * 
     */
    @Export(name="iamAlias", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> iamAlias;

    /**
     * @return How to generate the identity alias when using the iam auth method. Valid choices are
     * `role_id`, `unique_id`, and `full_arn`. Defaults to `role_id`
     * 
     */
    public Output<Optional<String>> iamAlias() {
        return Codegen.optional(this.iamAlias);
    }
    /**
     * The metadata to include on the token returned by the `login` endpoint. This metadata will be
     * added to both audit logs, and on the `iam_alias`
     * 
     */
    @Export(name="iamMetadatas", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> iamMetadatas;

    /**
     * @return The metadata to include on the token returned by the `login` endpoint. This metadata will be
     * added to both audit logs, and on the `iam_alias`
     * 
     */
    public Output<Optional<List<String>>> iamMetadatas() {
        return Codegen.optional(this.iamMetadatas);
    }
    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AuthBackendConfigIdentity(java.lang.String name) {
        this(name, AuthBackendConfigIdentityArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AuthBackendConfigIdentity(java.lang.String name, @Nullable AuthBackendConfigIdentityArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AuthBackendConfigIdentity(java.lang.String name, @Nullable AuthBackendConfigIdentityArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:aws/authBackendConfigIdentity:AuthBackendConfigIdentity", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AuthBackendConfigIdentity(java.lang.String name, Output<java.lang.String> id, @Nullable AuthBackendConfigIdentityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vault:aws/authBackendConfigIdentity:AuthBackendConfigIdentity", name, state, makeResourceOptions(options, id), false);
    }

    private static AuthBackendConfigIdentityArgs makeArgs(@Nullable AuthBackendConfigIdentityArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AuthBackendConfigIdentityArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AuthBackendConfigIdentity get(java.lang.String name, Output<java.lang.String> id, @Nullable AuthBackendConfigIdentityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AuthBackendConfigIdentity(name, id, state, options);
    }
}
