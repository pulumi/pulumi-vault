// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.ssh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class SecretBackendRoleAllowedUserKeyConfig {
    /**
     * @return List of allowed key lengths, vault-1.10 and above
     * 
     */
    private List<Integer> lengths;
    /**
     * @return Key type, choices:
     * rsa, ecdsa, ec, dsa, ed25519, ssh-rsa, ssh-dss, ssh-ed25519, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521
     * 
     */
    private String type;

    private SecretBackendRoleAllowedUserKeyConfig() {}
    /**
     * @return List of allowed key lengths, vault-1.10 and above
     * 
     */
    public List<Integer> lengths() {
        return this.lengths;
    }
    /**
     * @return Key type, choices:
     * rsa, ecdsa, ec, dsa, ed25519, ssh-rsa, ssh-dss, ssh-ed25519, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretBackendRoleAllowedUserKeyConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Integer> lengths;
        private String type;
        public Builder() {}
        public Builder(SecretBackendRoleAllowedUserKeyConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lengths = defaults.lengths;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder lengths(List<Integer> lengths) {
            if (lengths == null) {
              throw new MissingRequiredPropertyException("SecretBackendRoleAllowedUserKeyConfig", "lengths");
            }
            this.lengths = lengths;
            return this;
        }
        public Builder lengths(Integer... lengths) {
            return lengths(List.of(lengths));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("SecretBackendRoleAllowedUserKeyConfig", "type");
            }
            this.type = type;
            return this;
        }
        public SecretBackendRoleAllowedUserKeyConfig build() {
            final var _resultValue = new SecretBackendRoleAllowedUserKeyConfig();
            _resultValue.lengths = lengths;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
