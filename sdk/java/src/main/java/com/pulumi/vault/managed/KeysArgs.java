// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.managed;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.vault.managed.inputs.KeysAwArgs;
import com.pulumi.vault.managed.inputs.KeysAzureArgs;
import com.pulumi.vault.managed.inputs.KeysPkcArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeysArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeysArgs Empty = new KeysArgs();

    /**
     * Configuration block for AWS Managed Keys
     * 
     */
    @Import(name="aws")
    private @Nullable Output<List<KeysAwArgs>> aws;

    /**
     * @return Configuration block for AWS Managed Keys
     * 
     */
    public Optional<Output<List<KeysAwArgs>>> aws() {
        return Optional.ofNullable(this.aws);
    }

    /**
     * Configuration block for Azure Managed Keys
     * 
     */
    @Import(name="azures")
    private @Nullable Output<List<KeysAzureArgs>> azures;

    /**
     * @return Configuration block for Azure Managed Keys
     * 
     */
    public Optional<Output<List<KeysAzureArgs>>> azures() {
        return Optional.ofNullable(this.azures);
    }

    /**
     * Target namespace. (requires Enterprise)
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Target namespace. (requires Enterprise)
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Configuration block for PKCS Managed Keys
     * 
     */
    @Import(name="pkcs")
    private @Nullable Output<List<KeysPkcArgs>> pkcs;

    /**
     * @return Configuration block for PKCS Managed Keys
     * 
     */
    public Optional<Output<List<KeysPkcArgs>>> pkcs() {
        return Optional.ofNullable(this.pkcs);
    }

    private KeysArgs() {}

    private KeysArgs(KeysArgs $) {
        this.aws = $.aws;
        this.azures = $.azures;
        this.namespace = $.namespace;
        this.pkcs = $.pkcs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeysArgs $;

        public Builder() {
            $ = new KeysArgs();
        }

        public Builder(KeysArgs defaults) {
            $ = new KeysArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aws Configuration block for AWS Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder aws(@Nullable Output<List<KeysAwArgs>> aws) {
            $.aws = aws;
            return this;
        }

        /**
         * @param aws Configuration block for AWS Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder aws(List<KeysAwArgs> aws) {
            return aws(Output.of(aws));
        }

        /**
         * @param aws Configuration block for AWS Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder aws(KeysAwArgs... aws) {
            return aws(List.of(aws));
        }

        /**
         * @param azures Configuration block for Azure Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder azures(@Nullable Output<List<KeysAzureArgs>> azures) {
            $.azures = azures;
            return this;
        }

        /**
         * @param azures Configuration block for Azure Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder azures(List<KeysAzureArgs> azures) {
            return azures(Output.of(azures));
        }

        /**
         * @param azures Configuration block for Azure Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder azures(KeysAzureArgs... azures) {
            return azures(List.of(azures));
        }

        /**
         * @param namespace Target namespace. (requires Enterprise)
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Target namespace. (requires Enterprise)
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param pkcs Configuration block for PKCS Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder pkcs(@Nullable Output<List<KeysPkcArgs>> pkcs) {
            $.pkcs = pkcs;
            return this;
        }

        /**
         * @param pkcs Configuration block for PKCS Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder pkcs(List<KeysPkcArgs> pkcs) {
            return pkcs(Output.of(pkcs));
        }

        /**
         * @param pkcs Configuration block for PKCS Managed Keys
         * 
         * @return builder
         * 
         */
        public Builder pkcs(KeysPkcArgs... pkcs) {
            return pkcs(List.of(pkcs));
        }

        public KeysArgs build() {
            return $;
        }
    }

}
