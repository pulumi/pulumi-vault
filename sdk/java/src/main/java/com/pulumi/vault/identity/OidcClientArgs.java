// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OidcClientArgs extends com.pulumi.resources.ResourceArgs {

    public static final OidcClientArgs Empty = new OidcClientArgs();

    /**
     * The time-to-live for access tokens obtained by the client.
     * 
     */
    @Import(name="accessTokenTtl")
    private @Nullable Output<Integer> accessTokenTtl;

    /**
     * @return The time-to-live for access tokens obtained by the client.
     * 
     */
    public Optional<Output<Integer>> accessTokenTtl() {
        return Optional.ofNullable(this.accessTokenTtl);
    }

    /**
     * A list of assignment resources associated with the client.
     * 
     */
    @Import(name="assignments")
    private @Nullable Output<List<String>> assignments;

    /**
     * @return A list of assignment resources associated with the client.
     * 
     */
    public Optional<Output<List<String>>> assignments() {
        return Optional.ofNullable(this.assignments);
    }

    /**
     * The client type based on its ability to maintain confidentiality of credentials.
     * The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
     * 
     */
    @Import(name="clientType")
    private @Nullable Output<String> clientType;

    /**
     * @return The client type based on its ability to maintain confidentiality of credentials.
     * The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
     * 
     */
    public Optional<Output<String>> clientType() {
        return Optional.ofNullable(this.clientType);
    }

    /**
     * The time-to-live for ID tokens obtained by the client.
     * The value should be less than the `verification_ttl` on the key.
     * 
     */
    @Import(name="idTokenTtl")
    private @Nullable Output<Integer> idTokenTtl;

    /**
     * @return The time-to-live for ID tokens obtained by the client.
     * The value should be less than the `verification_ttl` on the key.
     * 
     */
    public Optional<Output<Integer>> idTokenTtl() {
        return Optional.ofNullable(this.idTokenTtl);
    }

    /**
     * A reference to a named key resource in Vault.
     * This cannot be modified after creation. If not provided, the `default`
     * key is used.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return A reference to a named key resource in Vault.
     * This cannot be modified after creation. If not provided, the `default`
     * key is used.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The name of the client.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the client.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to provision the resource in.
     * The value should not contain leading or trailing forward slashes.
     * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
     * *Available only for Vault Enterprise*.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Redirection URI values used by the client.
     * One of these values must exactly match the `redirect_uri` parameter value
     * used in each authentication request.
     * 
     */
    @Import(name="redirectUris")
    private @Nullable Output<List<String>> redirectUris;

    /**
     * @return Redirection URI values used by the client.
     * One of these values must exactly match the `redirect_uri` parameter value
     * used in each authentication request.
     * 
     */
    public Optional<Output<List<String>>> redirectUris() {
        return Optional.ofNullable(this.redirectUris);
    }

    private OidcClientArgs() {}

    private OidcClientArgs(OidcClientArgs $) {
        this.accessTokenTtl = $.accessTokenTtl;
        this.assignments = $.assignments;
        this.clientType = $.clientType;
        this.idTokenTtl = $.idTokenTtl;
        this.key = $.key;
        this.name = $.name;
        this.namespace = $.namespace;
        this.redirectUris = $.redirectUris;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OidcClientArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OidcClientArgs $;

        public Builder() {
            $ = new OidcClientArgs();
        }

        public Builder(OidcClientArgs defaults) {
            $ = new OidcClientArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTokenTtl The time-to-live for access tokens obtained by the client.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenTtl(@Nullable Output<Integer> accessTokenTtl) {
            $.accessTokenTtl = accessTokenTtl;
            return this;
        }

        /**
         * @param accessTokenTtl The time-to-live for access tokens obtained by the client.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenTtl(Integer accessTokenTtl) {
            return accessTokenTtl(Output.of(accessTokenTtl));
        }

        /**
         * @param assignments A list of assignment resources associated with the client.
         * 
         * @return builder
         * 
         */
        public Builder assignments(@Nullable Output<List<String>> assignments) {
            $.assignments = assignments;
            return this;
        }

        /**
         * @param assignments A list of assignment resources associated with the client.
         * 
         * @return builder
         * 
         */
        public Builder assignments(List<String> assignments) {
            return assignments(Output.of(assignments));
        }

        /**
         * @param assignments A list of assignment resources associated with the client.
         * 
         * @return builder
         * 
         */
        public Builder assignments(String... assignments) {
            return assignments(List.of(assignments));
        }

        /**
         * @param clientType The client type based on its ability to maintain confidentiality of credentials.
         * The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
         * 
         * @return builder
         * 
         */
        public Builder clientType(@Nullable Output<String> clientType) {
            $.clientType = clientType;
            return this;
        }

        /**
         * @param clientType The client type based on its ability to maintain confidentiality of credentials.
         * The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
         * 
         * @return builder
         * 
         */
        public Builder clientType(String clientType) {
            return clientType(Output.of(clientType));
        }

        /**
         * @param idTokenTtl The time-to-live for ID tokens obtained by the client.
         * The value should be less than the `verification_ttl` on the key.
         * 
         * @return builder
         * 
         */
        public Builder idTokenTtl(@Nullable Output<Integer> idTokenTtl) {
            $.idTokenTtl = idTokenTtl;
            return this;
        }

        /**
         * @param idTokenTtl The time-to-live for ID tokens obtained by the client.
         * The value should be less than the `verification_ttl` on the key.
         * 
         * @return builder
         * 
         */
        public Builder idTokenTtl(Integer idTokenTtl) {
            return idTokenTtl(Output.of(idTokenTtl));
        }

        /**
         * @param key A reference to a named key resource in Vault.
         * This cannot be modified after creation. If not provided, the `default`
         * key is used.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key A reference to a named key resource in Vault.
         * This cannot be modified after creation. If not provided, the `default`
         * key is used.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param name The name of the client.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the client.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to provision the resource in.
         * The value should not contain leading or trailing forward slashes.
         * The `namespace` is always relative to the provider&#39;s configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
         * *Available only for Vault Enterprise*.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param redirectUris Redirection URI values used by the client.
         * One of these values must exactly match the `redirect_uri` parameter value
         * used in each authentication request.
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(@Nullable Output<List<String>> redirectUris) {
            $.redirectUris = redirectUris;
            return this;
        }

        /**
         * @param redirectUris Redirection URI values used by the client.
         * One of these values must exactly match the `redirect_uri` parameter value
         * used in each authentication request.
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(List<String> redirectUris) {
            return redirectUris(Output.of(redirectUris));
        }

        /**
         * @param redirectUris Redirection URI values used by the client.
         * One of these values must exactly match the `redirect_uri` parameter value
         * used in each authentication request.
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(String... redirectUris) {
            return redirectUris(List.of(redirectUris));
        }

        public OidcClientArgs build() {
            return $;
        }
    }

}
