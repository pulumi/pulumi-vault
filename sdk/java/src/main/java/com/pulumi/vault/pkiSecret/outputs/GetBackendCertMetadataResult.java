// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackendCertMetadataResult {
    /**
     * @return The metadata associated with the certificate
     * 
     */
    private String certMetadata;
    /**
     * @return The expiration date of the certificate in unix epoch format
     * 
     */
    private String expiration;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return ID of the issuer.
     * 
     */
    private String issuerId;
    private @Nullable String namespace;
    private String path;
    /**
     * @return The role used to create the certificate
     * 
     */
    private String role;
    private String serial;
    /**
     * @return The serial number
     * 
     */
    private String serialNumber;

    private GetBackendCertMetadataResult() {}
    /**
     * @return The metadata associated with the certificate
     * 
     */
    public String certMetadata() {
        return this.certMetadata;
    }
    /**
     * @return The expiration date of the certificate in unix epoch format
     * 
     */
    public String expiration() {
        return this.expiration;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of the issuer.
     * 
     */
    public String issuerId() {
        return this.issuerId;
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public String path() {
        return this.path;
    }
    /**
     * @return The role used to create the certificate
     * 
     */
    public String role() {
        return this.role;
    }
    public String serial() {
        return this.serial;
    }
    /**
     * @return The serial number
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendCertMetadataResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certMetadata;
        private String expiration;
        private String id;
        private String issuerId;
        private @Nullable String namespace;
        private String path;
        private String role;
        private String serial;
        private String serialNumber;
        public Builder() {}
        public Builder(GetBackendCertMetadataResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certMetadata = defaults.certMetadata;
    	      this.expiration = defaults.expiration;
    	      this.id = defaults.id;
    	      this.issuerId = defaults.issuerId;
    	      this.namespace = defaults.namespace;
    	      this.path = defaults.path;
    	      this.role = defaults.role;
    	      this.serial = defaults.serial;
    	      this.serialNumber = defaults.serialNumber;
        }

        @CustomType.Setter
        public Builder certMetadata(String certMetadata) {
            if (certMetadata == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "certMetadata");
            }
            this.certMetadata = certMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder expiration(String expiration) {
            if (expiration == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "expiration");
            }
            this.expiration = expiration;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuerId(String issuerId) {
            if (issuerId == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "issuerId");
            }
            this.issuerId = issuerId;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "role");
            }
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetBackendCertMetadataResult", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        public GetBackendCertMetadataResult build() {
            final var _resultValue = new GetBackendCertMetadataResult();
            _resultValue.certMetadata = certMetadata;
            _resultValue.expiration = expiration;
            _resultValue.id = id;
            _resultValue.issuerId = issuerId;
            _resultValue.namespace = namespace;
            _resultValue.path = path;
            _resultValue.role = role;
            _resultValue.serial = serial;
            _resultValue.serialNumber = serialNumber;
            return _resultValue;
        }
    }
}
