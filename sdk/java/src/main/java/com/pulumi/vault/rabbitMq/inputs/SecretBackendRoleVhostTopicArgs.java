// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.rabbitMq.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.vault.rabbitMq.inputs.SecretBackendRoleVhostTopicVhostArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretBackendRoleVhostTopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretBackendRoleVhostTopicArgs Empty = new SecretBackendRoleVhostTopicArgs();

    /**
     * The vhost to set permissions for.
     * 
     */
    @Import(name="host", required=true)
    private Output<String> host;

    /**
     * @return The vhost to set permissions for.
     * 
     */
    public Output<String> host() {
        return this.host;
    }

    /**
     * Specifies a map of virtual hosts to permissions.
     * 
     */
    @Import(name="vhosts")
    private @Nullable Output<List<SecretBackendRoleVhostTopicVhostArgs>> vhosts;

    /**
     * @return Specifies a map of virtual hosts to permissions.
     * 
     */
    public Optional<Output<List<SecretBackendRoleVhostTopicVhostArgs>>> vhosts() {
        return Optional.ofNullable(this.vhosts);
    }

    private SecretBackendRoleVhostTopicArgs() {}

    private SecretBackendRoleVhostTopicArgs(SecretBackendRoleVhostTopicArgs $) {
        this.host = $.host;
        this.vhosts = $.vhosts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretBackendRoleVhostTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretBackendRoleVhostTopicArgs $;

        public Builder() {
            $ = new SecretBackendRoleVhostTopicArgs();
        }

        public Builder(SecretBackendRoleVhostTopicArgs defaults) {
            $ = new SecretBackendRoleVhostTopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param host The vhost to set permissions for.
         * 
         * @return builder
         * 
         */
        public Builder host(Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host The vhost to set permissions for.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param vhosts Specifies a map of virtual hosts to permissions.
         * 
         * @return builder
         * 
         */
        public Builder vhosts(@Nullable Output<List<SecretBackendRoleVhostTopicVhostArgs>> vhosts) {
            $.vhosts = vhosts;
            return this;
        }

        /**
         * @param vhosts Specifies a map of virtual hosts to permissions.
         * 
         * @return builder
         * 
         */
        public Builder vhosts(List<SecretBackendRoleVhostTopicVhostArgs> vhosts) {
            return vhosts(Output.of(vhosts));
        }

        /**
         * @param vhosts Specifies a map of virtual hosts to permissions.
         * 
         * @return builder
         * 
         */
        public Builder vhosts(SecretBackendRoleVhostTopicVhostArgs... vhosts) {
            return vhosts(List.of(vhosts));
        }

        public SecretBackendRoleVhostTopicArgs build() {
            if ($.host == null) {
                throw new MissingRequiredPropertyException("SecretBackendRoleVhostTopicArgs", "host");
            }
            return $;
        }
    }

}
