// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.transit.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCmacResult {
    private @Nullable List<Map<String,String>> batchInputs;
    /**
     * @return The results returned from Vault if using `batch_input`
     * 
     */
    private List<Map<String,String>> batchResults;
    /**
     * @return The CMAC returned from Vault if using `input`
     * 
     */
    private String cmac;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String input;
    private @Nullable Integer keyVersion;
    private @Nullable Integer macLength;
    private String name;
    private @Nullable String namespace;
    private String path;
    private @Nullable Integer urlMacLength;

    private GetCmacResult() {}
    public List<Map<String,String>> batchInputs() {
        return this.batchInputs == null ? List.of() : this.batchInputs;
    }
    /**
     * @return The results returned from Vault if using `batch_input`
     * 
     */
    public List<Map<String,String>> batchResults() {
        return this.batchResults;
    }
    /**
     * @return The CMAC returned from Vault if using `input`
     * 
     */
    public String cmac() {
        return this.cmac;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> input() {
        return Optional.ofNullable(this.input);
    }
    public Optional<Integer> keyVersion() {
        return Optional.ofNullable(this.keyVersion);
    }
    public Optional<Integer> macLength() {
        return Optional.ofNullable(this.macLength);
    }
    public String name() {
        return this.name;
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public String path() {
        return this.path;
    }
    public Optional<Integer> urlMacLength() {
        return Optional.ofNullable(this.urlMacLength);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCmacResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<Map<String,String>> batchInputs;
        private List<Map<String,String>> batchResults;
        private String cmac;
        private String id;
        private @Nullable String input;
        private @Nullable Integer keyVersion;
        private @Nullable Integer macLength;
        private String name;
        private @Nullable String namespace;
        private String path;
        private @Nullable Integer urlMacLength;
        public Builder() {}
        public Builder(GetCmacResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.batchInputs = defaults.batchInputs;
    	      this.batchResults = defaults.batchResults;
    	      this.cmac = defaults.cmac;
    	      this.id = defaults.id;
    	      this.input = defaults.input;
    	      this.keyVersion = defaults.keyVersion;
    	      this.macLength = defaults.macLength;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.path = defaults.path;
    	      this.urlMacLength = defaults.urlMacLength;
        }

        @CustomType.Setter
        public Builder batchInputs(@Nullable List<Map<String,String>> batchInputs) {

            this.batchInputs = batchInputs;
            return this;
        }
        @CustomType.Setter
        public Builder batchResults(List<Map<String,String>> batchResults) {
            if (batchResults == null) {
              throw new MissingRequiredPropertyException("GetCmacResult", "batchResults");
            }
            this.batchResults = batchResults;
            return this;
        }
        @CustomType.Setter
        public Builder cmac(String cmac) {
            if (cmac == null) {
              throw new MissingRequiredPropertyException("GetCmacResult", "cmac");
            }
            this.cmac = cmac;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCmacResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder input(@Nullable String input) {

            this.input = input;
            return this;
        }
        @CustomType.Setter
        public Builder keyVersion(@Nullable Integer keyVersion) {

            this.keyVersion = keyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder macLength(@Nullable Integer macLength) {

            this.macLength = macLength;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCmacResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetCmacResult", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder urlMacLength(@Nullable Integer urlMacLength) {

            this.urlMacLength = urlMacLength;
            return this;
        }
        public GetCmacResult build() {
            final var _resultValue = new GetCmacResult();
            _resultValue.batchInputs = batchInputs;
            _resultValue.batchResults = batchResults;
            _resultValue.cmac = cmac;
            _resultValue.id = id;
            _resultValue.input = input;
            _resultValue.keyVersion = keyVersion;
            _resultValue.macLength = macLength;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.path = path;
            _resultValue.urlMacLength = urlMacLength;
            return _resultValue;
        }
    }
}
