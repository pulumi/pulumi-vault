// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Reads the Role of an Kubernetes from a Vault server. See the [Vault
// documentation](https://www.vaultproject.io/api/auth/kubernetes/index.html#read-role) for more
// information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vault/sdk/v3/go/vault/kubernetes"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "my-kubernetes-backend"
// 		role, err := kubernetes.LookupAuthBackendRole(ctx, &kubernetes.LookupAuthBackendRoleArgs{
// 			Backend:  &opt0,
// 			RoleName: "my-role",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("policies", role.Policies)
// 		return nil
// 	})
// }
// ```
func LookupAuthBackendRole(ctx *pulumi.Context, args *LookupAuthBackendRoleArgs, opts ...pulumi.InvokeOption) (*LookupAuthBackendRoleResult, error) {
	var rv LookupAuthBackendRoleResult
	err := ctx.Invoke("vault:kubernetes/getAuthBackendRole:getAuthBackendRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthBackendRole.
type LookupAuthBackendRoleArgs struct {
	Audience *string `pulumi:"audience"`
	// The unique name for the Kubernetes backend the role to
	// retrieve Role attributes for resides in. Defaults to "kubernetes".
	Backend *string `pulumi:"backend"`
	// Deprecated: use `token_bound_cidrs` instead if you are running Vault >= 1.2
	BoundCidrs []string `pulumi:"boundCidrs"`
	// The maximum allowed lifetime of tokens issued in seconds using this role.
	//
	// Deprecated: use `token_max_ttl` instead if you are running Vault >= 1.2
	MaxTtl *int `pulumi:"maxTtl"`
	// Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses.
	//
	// Deprecated: use `token_num_uses` instead if you are running Vault >= 1.2
	NumUses *int `pulumi:"numUses"`
	// If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.
	//
	// Deprecated: use `token_period` instead if you are running Vault >= 1.2
	Period *int `pulumi:"period"`
	// Policies to be set on tokens issued using this role.
	//
	// Deprecated: use `token_policies` instead if you are running Vault >= 1.2
	Policies []string `pulumi:"policies"`
	// The name of the role to retrieve the Role attributes for.
	RoleName             string   `pulumi:"roleName"`
	TokenBoundCidrs      []string `pulumi:"tokenBoundCidrs"`
	TokenExplicitMaxTtl  *int     `pulumi:"tokenExplicitMaxTtl"`
	TokenMaxTtl          *int     `pulumi:"tokenMaxTtl"`
	TokenNoDefaultPolicy *bool    `pulumi:"tokenNoDefaultPolicy"`
	TokenNumUses         *int     `pulumi:"tokenNumUses"`
	TokenPeriod          *int     `pulumi:"tokenPeriod"`
	TokenPolicies        []string `pulumi:"tokenPolicies"`
	TokenTtl             *int     `pulumi:"tokenTtl"`
	TokenType            *string  `pulumi:"tokenType"`
	// The TTL period of tokens issued using this role in seconds.
	//
	// Deprecated: use `token_ttl` instead if you are running Vault >= 1.2
	Ttl *int `pulumi:"ttl"`
}

// A collection of values returned by getAuthBackendRole.
type LookupAuthBackendRoleResult struct {
	Audience *string `pulumi:"audience"`
	Backend  *string `pulumi:"backend"`
	// Deprecated: use `token_bound_cidrs` instead if you are running Vault >= 1.2
	BoundCidrs []string `pulumi:"boundCidrs"`
	// List of service account names able to access this role. If set to "*" all names are allowed, both this and boundServiceAccountNamespaces can not be "*".
	BoundServiceAccountNames []string `pulumi:"boundServiceAccountNames"`
	// List of namespaces allowed to access this role. If set to "*" all namespaces are allowed, both this and boundServiceAccountNames can not be set to "*".
	BoundServiceAccountNamespaces []string `pulumi:"boundServiceAccountNamespaces"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The maximum allowed lifetime of tokens issued in seconds using this role.
	//
	// Deprecated: use `token_max_ttl` instead if you are running Vault >= 1.2
	MaxTtl *int `pulumi:"maxTtl"`
	// Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses.
	//
	// Deprecated: use `token_num_uses` instead if you are running Vault >= 1.2
	NumUses *int `pulumi:"numUses"`
	// If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.
	//
	// Deprecated: use `token_period` instead if you are running Vault >= 1.2
	Period *int `pulumi:"period"`
	// Policies to be set on tokens issued using this role.
	//
	// Deprecated: use `token_policies` instead if you are running Vault >= 1.2
	Policies             []string `pulumi:"policies"`
	RoleName             string   `pulumi:"roleName"`
	TokenBoundCidrs      []string `pulumi:"tokenBoundCidrs"`
	TokenExplicitMaxTtl  *int     `pulumi:"tokenExplicitMaxTtl"`
	TokenMaxTtl          *int     `pulumi:"tokenMaxTtl"`
	TokenNoDefaultPolicy *bool    `pulumi:"tokenNoDefaultPolicy"`
	TokenNumUses         *int     `pulumi:"tokenNumUses"`
	TokenPeriod          *int     `pulumi:"tokenPeriod"`
	TokenPolicies        []string `pulumi:"tokenPolicies"`
	TokenTtl             *int     `pulumi:"tokenTtl"`
	TokenType            *string  `pulumi:"tokenType"`
	// The TTL period of tokens issued using this role in seconds.
	//
	// Deprecated: use `token_ttl` instead if you are running Vault >= 1.2
	Ttl *int `pulumi:"ttl"`
}
