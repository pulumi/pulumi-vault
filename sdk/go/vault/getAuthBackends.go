// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vault

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vault.GetAuthBackends(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vault.GetAuthBackends(ctx, &vault.GetAuthBackendsArgs{
//				Type: pulumi.StringRef("kubernetes"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetAuthBackends(ctx *pulumi.Context, args *GetAuthBackendsArgs, opts ...pulumi.InvokeOption) (*GetAuthBackendsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuthBackendsResult
	err := ctx.Invoke("vault:index/getAuthBackends:getAuthBackends", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthBackends.
type GetAuthBackendsArgs struct {
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// The name of the auth method type. Allows filtering of backends returned by type.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getAuthBackends.
type GetAuthBackendsResult struct {
	// The accessor IDs for the auth methods.
	Accessors []string `pulumi:"accessors"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	Namespace *string `pulumi:"namespace"`
	// List of auth backend mount points.
	Paths []string `pulumi:"paths"`
	Type  *string  `pulumi:"type"`
}

func GetAuthBackendsOutput(ctx *pulumi.Context, args GetAuthBackendsOutputArgs, opts ...pulumi.InvokeOption) GetAuthBackendsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAuthBackendsResult, error) {
			args := v.(GetAuthBackendsArgs)
			r, err := GetAuthBackends(ctx, &args, opts...)
			var s GetAuthBackendsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAuthBackendsResultOutput)
}

// A collection of arguments for invoking getAuthBackends.
type GetAuthBackendsOutputArgs struct {
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The name of the auth method type. Allows filtering of backends returned by type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetAuthBackendsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthBackendsArgs)(nil)).Elem()
}

// A collection of values returned by getAuthBackends.
type GetAuthBackendsResultOutput struct{ *pulumi.OutputState }

func (GetAuthBackendsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthBackendsResult)(nil)).Elem()
}

func (o GetAuthBackendsResultOutput) ToGetAuthBackendsResultOutput() GetAuthBackendsResultOutput {
	return o
}

func (o GetAuthBackendsResultOutput) ToGetAuthBackendsResultOutputWithContext(ctx context.Context) GetAuthBackendsResultOutput {
	return o
}

// The accessor IDs for the auth methods.
func (o GetAuthBackendsResultOutput) Accessors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthBackendsResult) []string { return v.Accessors }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAuthBackendsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthBackendsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAuthBackendsResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuthBackendsResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// List of auth backend mount points.
func (o GetAuthBackendsResultOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthBackendsResult) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

func (o GetAuthBackendsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuthBackendsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuthBackendsResultOutput{})
}
