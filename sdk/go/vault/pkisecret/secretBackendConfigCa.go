// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pkisecret

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/pkiSecret"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pkiSecret.NewSecretBackendConfigCa(ctx, "intermediate", &pkiSecret.SecretBackendConfigCaArgs{
//				Backend:   pulumi.Any(vault_mount.Intermediate.Path),
//				PemBundle: pulumi.String("-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwvEHeJCXnFgi88rE1dTX6FHdBPK0wSjedh0ywVnCZxLWbBv/\n5PytjTcCPdrfW7g2sfbPwOge/WF3X2KeYSP8SxZA0czmz6QDspeG921JkZWtyp5o\n++N0leLTIUAhq339p3O1onAOUO1k4sHfmCwfrDpTn2hcx4URa5Pzzb1fHigusjIH\n1mcGdncaA6Z2CzO1w4E8kPOUukIDrcZT4faOZrWUIQZKQw2JzTyKJ+ZMDCZq2TFz\nWwpL3eG48wB7J7mibFQ/9nFvxpIflBjDAZ8QiqkwYr5N0DNsTxcfTCSeubfJDCUf\nIWwFZhLitzwOxazazUQKXX/SPMQ1l/L9o3nnHwIDAQABAoIBAAQidJQcDPsl62fc\nTxxx7TpiMhvewfKu2TkMGX18V+EzxxR364+BxHSQTB3fvIkHeTGBGJrw0WdyX8PI\nJa/NwZYeHLXWcLbKtcFd8WDiEoNh91Oq1HMzOc/MBcpYv94RSAX7MEkHs2YIAvHE\nRufFV86hVhC1d/JLYjkz5CHi+Fd9XTYjBK78tHhJd4IJPu5LYvwlmzC1zeS7s1Tg\nQW1FQuVDV8tWa4PMTrQHwfaGqn95AKc+tbg+ubpCiWl5bBNI3Ghuh4sAC9dMdAkd\nw27i29O9/Y3XJSSGUZlZqDBP4YU388RgHpzLDUxgRcaQt9vdeEz6frULPW67e9D2\nmPPDzjECgYEA4aPOwvnSwGoOKsS6vANGy4Ajsq09PR+1ltMJUR5kDlXGuZWI72eX\n3/GAnovDuCp0tbYt0r7Fmkfel0Ore7SYM18TH5QGpPddcZLvKUf7AchCIOYY0Te3\npS9+7S1lEGrLXyuox4N26Ov6wHVrmZTcQoZsDWbjYxNNsNACsiQNjGMCgYEA3SvQ\nJets9e9SgNVvao2TijX+/vcNKRfcWB71T9Xc4BuSNEu5+ZLtptlwaSnVCVu1Xilk\nsWDh+3EhByl4EteENPvE/7A2s1sfcDOprvg0r52aBZKeTp0AukrT8+Ad4hap7g1x\n2Lz11MFDkhRqt2KqQaIL+5Mq5WfptbBJ0YI7ARUCgYAD6iSfK1hlsDFYupsGwgPL\nagi0g97pHZC38idaOe3AdeqBs79xb9mpr/XsSj52Bn6J3IRFALxK5e5Nr4XdGo/9\nbCvXw2iuGgCMBOGTVMVdDY1gJr3Ne2r7Oay5Dq2PMFsg5pACDhzVA6sRBbh9LKD5\non1jaiKNyHrzk1hIoOl/QwKBgA+Ov2uLbfS2yvTpDpdOMiyss603r6NOXF+Ofe8J\nuinBhr1K/mAB59muveuH18Z6vv1KqByaFgtb39jjH+Eja9dWRns95/sh08pOuAbo\nyrv3uBfgQmaBQMXZ8aLcBv4aXgWyyGlYkWpP1fL2oLMZq6RGQ9WEeqX8c0ImjmrA\nYGopAoGBAJZPFlZi2Rfq4MfFZp/X1/zM09hphZwkxkSI+RnsjDUjTgB8CuQul5ep\nKWE98yLw4C25Cqw5fKKQ2addizLnZCAIfJKVNRjYLWlWyGQydDEUzqwXlSLS9LVX\nLxLkWDajIyjeFn21Ttb42L9pBo3TAQIxUenom/lP2SQTvCKBiPai\n-----END RSA PRIVATE KEY-----\n-----BEGIN CERTIFICATE-----\nMIIDazCCAlOgAwIBAgIUahce2sCO7Bom/Rznd5HsNAlr1NgwDQYJKoZIhvcNAQEL\nBQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\nGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0xODEyMDIwMTAxNDRaFw00NjEy\nMTUwMTAxNDRaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw\nHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwggEiMA0GCSqGSIb3DQEB\nAQUAA4IBDwAwggEKAoIBAQDC8Qd4kJecWCLzysTV1NfoUd0E8rTBKN52HTLBWcJn\nEtZsG//k/K2NNwI92t9buDax9s/A6B79YXdfYp5hI/xLFkDRzObPpAOyl4b3bUmR\nla3Knmj743SV4tMhQCGrff2nc7WicA5Q7WTiwd+YLB+sOlOfaFzHhRFrk/PNvV8e\nKC6yMgfWZwZ2dxoDpnYLM7XDgTyQ85S6QgOtxlPh9o5mtZQhBkpDDYnNPIon5kwM\nJmrZMXNbCkvd4bjzAHsnuaJsVD/2cW/Gkh+UGMMBnxCKqTBivk3QM2xPFx9MJJ65\nt8kMJR8hbAVmEuK3PA7FrNrNRApdf9I8xDWX8v2jeecfAgMBAAGjUzBRMB0GA1Ud\nDgQWBBQXGfrns8OqxTGKsXG5pDZS/WyyYDAfBgNVHSMEGDAWgBQXGfrns8OqxTGK\nsXG5pDZS/WyyYDAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCt\n8aUX26cl2PgdIEByZSHAX5G+2b0IEtTclPkl4uDyyKRY4dVq6gK3ueVSU5eUmBip\nJbV5aRetovGOcV//8vbxkZm/ntQ8Oo+2sfGR5lIzd0UdlOr5pkD6g3bFy/zJ+4DR\nDAe8fklUacfz6CFmD+H8GyHm+fKmF+mjr4oOGQW6OegRDJHuiipUk2lJyuXdlPSa\nFpNRO2sGbjn000ANinFgnFiVzGDnx0/G1Kii/6GWrI6rrdVmXioQzF+8AloWckeB\n+hbmbwkwQa/JrLb5SWcBDOXSgtn1Li3XF5AQQBBjA3pOlyBXqnI94Irw89Lv9uPT\nMUR4qFxeUOW/GJGccMUd\n-----END CERTIFICATE-----\n"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				vault_mount.Intermediate,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SecretBackendConfigCa struct {
	pulumi.CustomResourceState

	// The PKI secret backend the resource belongs to.
	Backend pulumi.StringOutput `pulumi:"backend"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// The key and certificate PEM bundle
	PemBundle pulumi.StringOutput `pulumi:"pemBundle"`
}

// NewSecretBackendConfigCa registers a new resource with the given unique name, arguments, and options.
func NewSecretBackendConfigCa(ctx *pulumi.Context,
	name string, args *SecretBackendConfigCaArgs, opts ...pulumi.ResourceOption) (*SecretBackendConfigCa, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Backend == nil {
		return nil, errors.New("invalid value for required argument 'Backend'")
	}
	if args.PemBundle == nil {
		return nil, errors.New("invalid value for required argument 'PemBundle'")
	}
	if args.PemBundle != nil {
		args.PemBundle = pulumi.ToSecret(args.PemBundle).(pulumi.StringOutput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"pemBundle",
	})
	opts = append(opts, secrets)
	var resource SecretBackendConfigCa
	err := ctx.RegisterResource("vault:pkiSecret/secretBackendConfigCa:SecretBackendConfigCa", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretBackendConfigCa gets an existing SecretBackendConfigCa resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretBackendConfigCa(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretBackendConfigCaState, opts ...pulumi.ResourceOption) (*SecretBackendConfigCa, error) {
	var resource SecretBackendConfigCa
	err := ctx.ReadResource("vault:pkiSecret/secretBackendConfigCa:SecretBackendConfigCa", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretBackendConfigCa resources.
type secretBackendConfigCaState struct {
	// The PKI secret backend the resource belongs to.
	Backend *string `pulumi:"backend"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// The key and certificate PEM bundle
	PemBundle *string `pulumi:"pemBundle"`
}

type SecretBackendConfigCaState struct {
	// The PKI secret backend the resource belongs to.
	Backend pulumi.StringPtrInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// The key and certificate PEM bundle
	PemBundle pulumi.StringPtrInput
}

func (SecretBackendConfigCaState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretBackendConfigCaState)(nil)).Elem()
}

type secretBackendConfigCaArgs struct {
	// The PKI secret backend the resource belongs to.
	Backend string `pulumi:"backend"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// The key and certificate PEM bundle
	PemBundle string `pulumi:"pemBundle"`
}

// The set of arguments for constructing a SecretBackendConfigCa resource.
type SecretBackendConfigCaArgs struct {
	// The PKI secret backend the resource belongs to.
	Backend pulumi.StringInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// The key and certificate PEM bundle
	PemBundle pulumi.StringInput
}

func (SecretBackendConfigCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretBackendConfigCaArgs)(nil)).Elem()
}

type SecretBackendConfigCaInput interface {
	pulumi.Input

	ToSecretBackendConfigCaOutput() SecretBackendConfigCaOutput
	ToSecretBackendConfigCaOutputWithContext(ctx context.Context) SecretBackendConfigCaOutput
}

func (*SecretBackendConfigCa) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretBackendConfigCa)(nil)).Elem()
}

func (i *SecretBackendConfigCa) ToSecretBackendConfigCaOutput() SecretBackendConfigCaOutput {
	return i.ToSecretBackendConfigCaOutputWithContext(context.Background())
}

func (i *SecretBackendConfigCa) ToSecretBackendConfigCaOutputWithContext(ctx context.Context) SecretBackendConfigCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretBackendConfigCaOutput)
}

// SecretBackendConfigCaArrayInput is an input type that accepts SecretBackendConfigCaArray and SecretBackendConfigCaArrayOutput values.
// You can construct a concrete instance of `SecretBackendConfigCaArrayInput` via:
//
//	SecretBackendConfigCaArray{ SecretBackendConfigCaArgs{...} }
type SecretBackendConfigCaArrayInput interface {
	pulumi.Input

	ToSecretBackendConfigCaArrayOutput() SecretBackendConfigCaArrayOutput
	ToSecretBackendConfigCaArrayOutputWithContext(context.Context) SecretBackendConfigCaArrayOutput
}

type SecretBackendConfigCaArray []SecretBackendConfigCaInput

func (SecretBackendConfigCaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretBackendConfigCa)(nil)).Elem()
}

func (i SecretBackendConfigCaArray) ToSecretBackendConfigCaArrayOutput() SecretBackendConfigCaArrayOutput {
	return i.ToSecretBackendConfigCaArrayOutputWithContext(context.Background())
}

func (i SecretBackendConfigCaArray) ToSecretBackendConfigCaArrayOutputWithContext(ctx context.Context) SecretBackendConfigCaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretBackendConfigCaArrayOutput)
}

// SecretBackendConfigCaMapInput is an input type that accepts SecretBackendConfigCaMap and SecretBackendConfigCaMapOutput values.
// You can construct a concrete instance of `SecretBackendConfigCaMapInput` via:
//
//	SecretBackendConfigCaMap{ "key": SecretBackendConfigCaArgs{...} }
type SecretBackendConfigCaMapInput interface {
	pulumi.Input

	ToSecretBackendConfigCaMapOutput() SecretBackendConfigCaMapOutput
	ToSecretBackendConfigCaMapOutputWithContext(context.Context) SecretBackendConfigCaMapOutput
}

type SecretBackendConfigCaMap map[string]SecretBackendConfigCaInput

func (SecretBackendConfigCaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretBackendConfigCa)(nil)).Elem()
}

func (i SecretBackendConfigCaMap) ToSecretBackendConfigCaMapOutput() SecretBackendConfigCaMapOutput {
	return i.ToSecretBackendConfigCaMapOutputWithContext(context.Background())
}

func (i SecretBackendConfigCaMap) ToSecretBackendConfigCaMapOutputWithContext(ctx context.Context) SecretBackendConfigCaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretBackendConfigCaMapOutput)
}

type SecretBackendConfigCaOutput struct{ *pulumi.OutputState }

func (SecretBackendConfigCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretBackendConfigCa)(nil)).Elem()
}

func (o SecretBackendConfigCaOutput) ToSecretBackendConfigCaOutput() SecretBackendConfigCaOutput {
	return o
}

func (o SecretBackendConfigCaOutput) ToSecretBackendConfigCaOutputWithContext(ctx context.Context) SecretBackendConfigCaOutput {
	return o
}

// The PKI secret backend the resource belongs to.
func (o SecretBackendConfigCaOutput) Backend() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretBackendConfigCa) pulumi.StringOutput { return v.Backend }).(pulumi.StringOutput)
}

// The namespace to provision the resource in.
// The value should not contain leading or trailing forward slashes.
// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
// *Available only for Vault Enterprise*.
func (o SecretBackendConfigCaOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretBackendConfigCa) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The key and certificate PEM bundle
func (o SecretBackendConfigCaOutput) PemBundle() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretBackendConfigCa) pulumi.StringOutput { return v.PemBundle }).(pulumi.StringOutput)
}

type SecretBackendConfigCaArrayOutput struct{ *pulumi.OutputState }

func (SecretBackendConfigCaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretBackendConfigCa)(nil)).Elem()
}

func (o SecretBackendConfigCaArrayOutput) ToSecretBackendConfigCaArrayOutput() SecretBackendConfigCaArrayOutput {
	return o
}

func (o SecretBackendConfigCaArrayOutput) ToSecretBackendConfigCaArrayOutputWithContext(ctx context.Context) SecretBackendConfigCaArrayOutput {
	return o
}

func (o SecretBackendConfigCaArrayOutput) Index(i pulumi.IntInput) SecretBackendConfigCaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretBackendConfigCa {
		return vs[0].([]*SecretBackendConfigCa)[vs[1].(int)]
	}).(SecretBackendConfigCaOutput)
}

type SecretBackendConfigCaMapOutput struct{ *pulumi.OutputState }

func (SecretBackendConfigCaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretBackendConfigCa)(nil)).Elem()
}

func (o SecretBackendConfigCaMapOutput) ToSecretBackendConfigCaMapOutput() SecretBackendConfigCaMapOutput {
	return o
}

func (o SecretBackendConfigCaMapOutput) ToSecretBackendConfigCaMapOutputWithContext(ctx context.Context) SecretBackendConfigCaMapOutput {
	return o
}

func (o SecretBackendConfigCaMapOutput) MapIndex(k pulumi.StringInput) SecretBackendConfigCaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretBackendConfigCa {
		return vs[0].(map[string]*SecretBackendConfigCa)[vs[1].(string)]
	}).(SecretBackendConfigCaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretBackendConfigCaInput)(nil)).Elem(), &SecretBackendConfigCa{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretBackendConfigCaArrayInput)(nil)).Elem(), SecretBackendConfigCaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretBackendConfigCaMapInput)(nil)).Elem(), SecretBackendConfigCaMap{})
	pulumi.RegisterOutputType(SecretBackendConfigCaOutput{})
	pulumi.RegisterOutputType(SecretBackendConfigCaArrayOutput{})
	pulumi.RegisterOutputType(SecretBackendConfigCaMapOutput{})
}
