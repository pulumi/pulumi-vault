// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pkisecret

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault"
//	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault/pkisecret"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pki, err := vault.NewMount(ctx, "pki", &vault.MountArgs{
//				Path:        pulumi.String("pki"),
//				Type:        pulumi.String("pki"),
//				Description: pulumi.String("PKI secret engine mount"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = pkisecret.GetBackendConfigCmpv2Output(ctx, pkisecret.GetBackendConfigCmpv2OutputArgs{
//				Backend: pki.Path,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func LookupBackendConfigCmpv2(ctx *pulumi.Context, args *LookupBackendConfigCmpv2Args, opts ...pulumi.InvokeOption) (*LookupBackendConfigCmpv2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackendConfigCmpv2Result
	err := ctx.Invoke("vault:pkiSecret/getBackendConfigCmpv2:getBackendConfigCmpv2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackendConfigCmpv2.
type LookupBackendConfigCmpv2Args struct {
	// The path to the PKI secret backend to
	// read the CMPv2 configuration from, with no leading or trailing `/`s.
	//
	// # Attributes Reference
	Backend string `pulumi:"backend"`
	// A comma-separated list of validations not to perform on CMPv2 messages.
	DisabledValidations []string `pulumi:"disabledValidations"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
}

// A collection of values returned by getBackendConfigCmpv2.
type LookupBackendConfigCmpv2Result struct {
	AuditFields           []string                             `pulumi:"auditFields"`
	Authenticators        []GetBackendConfigCmpv2Authenticator `pulumi:"authenticators"`
	Backend               string                               `pulumi:"backend"`
	DefaultPathPolicy     string                               `pulumi:"defaultPathPolicy"`
	DisabledValidations   []string                             `pulumi:"disabledValidations"`
	EnableSentinelParsing bool                                 `pulumi:"enableSentinelParsing"`
	Enabled               bool                                 `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	LastUpdated string  `pulumi:"lastUpdated"`
	Namespace   *string `pulumi:"namespace"`
}

func LookupBackendConfigCmpv2Output(ctx *pulumi.Context, args LookupBackendConfigCmpv2OutputArgs, opts ...pulumi.InvokeOption) LookupBackendConfigCmpv2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBackendConfigCmpv2ResultOutput, error) {
			args := v.(LookupBackendConfigCmpv2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vault:pkiSecret/getBackendConfigCmpv2:getBackendConfigCmpv2", args, LookupBackendConfigCmpv2ResultOutput{}, options).(LookupBackendConfigCmpv2ResultOutput), nil
		}).(LookupBackendConfigCmpv2ResultOutput)
}

// A collection of arguments for invoking getBackendConfigCmpv2.
type LookupBackendConfigCmpv2OutputArgs struct {
	// The path to the PKI secret backend to
	// read the CMPv2 configuration from, with no leading or trailing `/`s.
	//
	// # Attributes Reference
	Backend pulumi.StringInput `pulumi:"backend"`
	// A comma-separated list of validations not to perform on CMPv2 messages.
	DisabledValidations pulumi.StringArrayInput `pulumi:"disabledValidations"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (LookupBackendConfigCmpv2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackendConfigCmpv2Args)(nil)).Elem()
}

// A collection of values returned by getBackendConfigCmpv2.
type LookupBackendConfigCmpv2ResultOutput struct{ *pulumi.OutputState }

func (LookupBackendConfigCmpv2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackendConfigCmpv2Result)(nil)).Elem()
}

func (o LookupBackendConfigCmpv2ResultOutput) ToLookupBackendConfigCmpv2ResultOutput() LookupBackendConfigCmpv2ResultOutput {
	return o
}

func (o LookupBackendConfigCmpv2ResultOutput) ToLookupBackendConfigCmpv2ResultOutputWithContext(ctx context.Context) LookupBackendConfigCmpv2ResultOutput {
	return o
}

func (o LookupBackendConfigCmpv2ResultOutput) AuditFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) []string { return v.AuditFields }).(pulumi.StringArrayOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) Authenticators() GetBackendConfigCmpv2AuthenticatorArrayOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) []GetBackendConfigCmpv2Authenticator { return v.Authenticators }).(GetBackendConfigCmpv2AuthenticatorArrayOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) Backend() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) string { return v.Backend }).(pulumi.StringOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) DefaultPathPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) string { return v.DefaultPathPolicy }).(pulumi.StringOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) DisabledValidations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) []string { return v.DisabledValidations }).(pulumi.StringArrayOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) EnableSentinelParsing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) bool { return v.EnableSentinelParsing }).(pulumi.BoolOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackendConfigCmpv2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o LookupBackendConfigCmpv2ResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackendConfigCmpv2Result) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackendConfigCmpv2ResultOutput{})
}
