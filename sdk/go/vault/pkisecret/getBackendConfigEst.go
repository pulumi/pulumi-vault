// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pkisecret

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault"
//	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault/pkiSecret"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pki, err := vault.NewMount(ctx, "pki", &vault.MountArgs{
//				Path:        pulumi.String("pki"),
//				Type:        pulumi.String("pki"),
//				Description: pulumi.String("PKI secret engine mount"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = pkiSecret.GetBackendConfigEstOutput(ctx, pkisecret.GetBackendConfigEstOutputArgs{
//				Backend: pki.Path,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func LookupBackendConfigEst(ctx *pulumi.Context, args *LookupBackendConfigEstArgs, opts ...pulumi.InvokeOption) (*LookupBackendConfigEstResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackendConfigEstResult
	err := ctx.Invoke("vault:pkiSecret/getBackendConfigEst:getBackendConfigEst", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackendConfigEst.
type LookupBackendConfigEstArgs struct {
	// The path to the PKI secret backend to
	// read the EST configuration from, with no leading or trailing `/`s.
	Backend string `pulumi:"backend"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
}

// A collection of values returned by getBackendConfigEst.
type LookupBackendConfigEstResult struct {
	// Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
	AuditFields []string `pulumi:"auditFields"`
	// Lists the mount accessors EST should delegate authentication requests towards (see below for nested schema).
	Authenticators []GetBackendConfigEstAuthenticator `pulumi:"authenticators"`
	Backend        string                             `pulumi:"backend"`
	// If set, this mount is registered as the default `.well-known/est` URL path. Only a single mount can enable this across a Vault cluster.
	DefaultMount bool `pulumi:"defaultMount"`
	// Required to be set if defaultMount is enabled. Specifies the behavior for requests using the default EST label. Can be sign-verbatim or a role given by role:<role_name>.
	DefaultPathPolicy string `pulumi:"defaultPathPolicy"`
	// If set, parse out fields from the provided CSR making them available for Sentinel policies.
	EnableSentinelParsing bool `pulumi:"enableSentinelParsing"`
	// Specifies whether EST is enabled.
	Enabled bool `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A pairing of an EST label with the redirected behavior for requests hitting that role. The path policy can be sign-verbatim or a role given by role:<role_name>. Labels must be unique across Vault cluster, and will register .well-known/est/<label> URL paths.
	LabelToPathPolicy map[string]string `pulumi:"labelToPathPolicy"`
	// A read-only timestamp representing the last time the configuration was updated.
	LastUpdated string  `pulumi:"lastUpdated"`
	Namespace   *string `pulumi:"namespace"`
}

func LookupBackendConfigEstOutput(ctx *pulumi.Context, args LookupBackendConfigEstOutputArgs, opts ...pulumi.InvokeOption) LookupBackendConfigEstResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackendConfigEstResultOutput, error) {
			args := v.(LookupBackendConfigEstArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupBackendConfigEstResult
			secret, err := ctx.InvokePackageRaw("vault:pkiSecret/getBackendConfigEst:getBackendConfigEst", args, &rv, "", opts...)
			if err != nil {
				return LookupBackendConfigEstResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupBackendConfigEstResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupBackendConfigEstResultOutput), nil
			}
			return output, nil
		}).(LookupBackendConfigEstResultOutput)
}

// A collection of arguments for invoking getBackendConfigEst.
type LookupBackendConfigEstOutputArgs struct {
	// The path to the PKI secret backend to
	// read the EST configuration from, with no leading or trailing `/`s.
	Backend pulumi.StringInput `pulumi:"backend"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (LookupBackendConfigEstOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackendConfigEstArgs)(nil)).Elem()
}

// A collection of values returned by getBackendConfigEst.
type LookupBackendConfigEstResultOutput struct{ *pulumi.OutputState }

func (LookupBackendConfigEstResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackendConfigEstResult)(nil)).Elem()
}

func (o LookupBackendConfigEstResultOutput) ToLookupBackendConfigEstResultOutput() LookupBackendConfigEstResultOutput {
	return o
}

func (o LookupBackendConfigEstResultOutput) ToLookupBackendConfigEstResultOutputWithContext(ctx context.Context) LookupBackendConfigEstResultOutput {
	return o
}

// Fields parsed from the CSR that appear in the audit and can be used by sentinel policies.
func (o LookupBackendConfigEstResultOutput) AuditFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) []string { return v.AuditFields }).(pulumi.StringArrayOutput)
}

// Lists the mount accessors EST should delegate authentication requests towards (see below for nested schema).
func (o LookupBackendConfigEstResultOutput) Authenticators() GetBackendConfigEstAuthenticatorArrayOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) []GetBackendConfigEstAuthenticator { return v.Authenticators }).(GetBackendConfigEstAuthenticatorArrayOutput)
}

func (o LookupBackendConfigEstResultOutput) Backend() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) string { return v.Backend }).(pulumi.StringOutput)
}

// If set, this mount is registered as the default `.well-known/est` URL path. Only a single mount can enable this across a Vault cluster.
func (o LookupBackendConfigEstResultOutput) DefaultMount() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) bool { return v.DefaultMount }).(pulumi.BoolOutput)
}

// Required to be set if defaultMount is enabled. Specifies the behavior for requests using the default EST label. Can be sign-verbatim or a role given by role:<role_name>.
func (o LookupBackendConfigEstResultOutput) DefaultPathPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) string { return v.DefaultPathPolicy }).(pulumi.StringOutput)
}

// If set, parse out fields from the provided CSR making them available for Sentinel policies.
func (o LookupBackendConfigEstResultOutput) EnableSentinelParsing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) bool { return v.EnableSentinelParsing }).(pulumi.BoolOutput)
}

// Specifies whether EST is enabled.
func (o LookupBackendConfigEstResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackendConfigEstResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) string { return v.Id }).(pulumi.StringOutput)
}

// A pairing of an EST label with the redirected behavior for requests hitting that role. The path policy can be sign-verbatim or a role given by role:<role_name>. Labels must be unique across Vault cluster, and will register .well-known/est/<label> URL paths.
func (o LookupBackendConfigEstResultOutput) LabelToPathPolicy() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) map[string]string { return v.LabelToPathPolicy }).(pulumi.StringMapOutput)
}

// A read-only timestamp representing the last time the configuration was updated.
func (o LookupBackendConfigEstResultOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o LookupBackendConfigEstResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackendConfigEstResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackendConfigEstResultOutput{})
}
