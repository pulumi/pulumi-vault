// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ldap

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "vault:ldap/authBackend:AuthBackend":
		r = &AuthBackend{}
	case "vault:ldap/authBackendGroup:AuthBackendGroup":
		r = &AuthBackendGroup{}
	case "vault:ldap/authBackendUser:AuthBackendUser":
		r = &AuthBackendUser{}
	case "vault:ldap/secretBackend:SecretBackend":
		r = &SecretBackend{}
	case "vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole":
		r = &SecretBackendDynamicRole{}
	case "vault:ldap/secretBackendLibrarySet:SecretBackendLibrarySet":
		r = &SecretBackendLibrarySet{}
	case "vault:ldap/secretBackendStaticRole:SecretBackendStaticRole":
		r = &SecretBackendStaticRole{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := vault.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"vault",
		"ldap/authBackend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vault",
		"ldap/authBackendGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vault",
		"ldap/authBackendUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vault",
		"ldap/secretBackend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vault",
		"ldap/secretBackendDynamicRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vault",
		"ldap/secretBackendLibrarySet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vault",
		"ldap/secretBackendStaticRole",
		&module{version},
	)
}
