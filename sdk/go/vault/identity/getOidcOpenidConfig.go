// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetOidcOpenidConfig(ctx *pulumi.Context, args *GetOidcOpenidConfigArgs, opts ...pulumi.InvokeOption) (*GetOidcOpenidConfigResult, error) {
	var rv GetOidcOpenidConfigResult
	err := ctx.Invoke("vault:identity/getOidcOpenidConfig:getOidcOpenidConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOidcOpenidConfig.
type GetOidcOpenidConfigArgs struct {
	// The name of the OIDC Provider in Vault.
	Name string `pulumi:"name"`
}

// A collection of values returned by getOidcOpenidConfig.
type GetOidcOpenidConfigResult struct {
	// The Authorization Endpoint for the provider.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// The grant types supported by the provider.
	GrantTypesSupporteds []string `pulumi:"grantTypesSupporteds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The signing algorithms supported by
	// the provider.
	IdTokenSigningAlgValuesSupporteds []string `pulumi:"idTokenSigningAlgValuesSupporteds"`
	// The URL of the issuer for the provider.
	Issuer string `pulumi:"issuer"`
	// The well known keys URI for the provider.
	JwksUri string `pulumi:"jwksUri"`
	Name    string `pulumi:"name"`
	// Specifies whether Request URI Parameter is
	// supported by the provider.
	RequestUriParameterSupported bool `pulumi:"requestUriParameterSupported"`
	// The response types supported by the provider.
	ResponseTypesSupporteds []string `pulumi:"responseTypesSupporteds"`
	// The scopes supported by the provider.
	ScopesSupporteds []string `pulumi:"scopesSupporteds"`
	// The subject types supported by the provider.
	SubjectTypesSupporteds []string `pulumi:"subjectTypesSupporteds"`
	// The Token Endpoint for the provider.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The token endpoint auth methods supported by the provider.
	TokenEndpointAuthMethodsSupporteds []string `pulumi:"tokenEndpointAuthMethodsSupporteds"`
	// The User Info Endpoint for the provider
	UserinfoEndpoint string `pulumi:"userinfoEndpoint"`
}

func GetOidcOpenidConfigOutput(ctx *pulumi.Context, args GetOidcOpenidConfigOutputArgs, opts ...pulumi.InvokeOption) GetOidcOpenidConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOidcOpenidConfigResult, error) {
			args := v.(GetOidcOpenidConfigArgs)
			r, err := GetOidcOpenidConfig(ctx, &args, opts...)
			return *r, err
		}).(GetOidcOpenidConfigResultOutput)
}

// A collection of arguments for invoking getOidcOpenidConfig.
type GetOidcOpenidConfigOutputArgs struct {
	// The name of the OIDC Provider in Vault.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOidcOpenidConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOidcOpenidConfigArgs)(nil)).Elem()
}

// A collection of values returned by getOidcOpenidConfig.
type GetOidcOpenidConfigResultOutput struct{ *pulumi.OutputState }

func (GetOidcOpenidConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOidcOpenidConfigResult)(nil)).Elem()
}

func (o GetOidcOpenidConfigResultOutput) ToGetOidcOpenidConfigResultOutput() GetOidcOpenidConfigResultOutput {
	return o
}

func (o GetOidcOpenidConfigResultOutput) ToGetOidcOpenidConfigResultOutputWithContext(ctx context.Context) GetOidcOpenidConfigResultOutput {
	return o
}

// The Authorization Endpoint for the provider.
func (o GetOidcOpenidConfigResultOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// The grant types supported by the provider.
func (o GetOidcOpenidConfigResultOutput) GrantTypesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.GrantTypesSupporteds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOidcOpenidConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The signing algorithms supported by
// the provider.
func (o GetOidcOpenidConfigResultOutput) IdTokenSigningAlgValuesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.IdTokenSigningAlgValuesSupporteds }).(pulumi.StringArrayOutput)
}

// The URL of the issuer for the provider.
func (o GetOidcOpenidConfigResultOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.Issuer }).(pulumi.StringOutput)
}

// The well known keys URI for the provider.
func (o GetOidcOpenidConfigResultOutput) JwksUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.JwksUri }).(pulumi.StringOutput)
}

func (o GetOidcOpenidConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies whether Request URI Parameter is
// supported by the provider.
func (o GetOidcOpenidConfigResultOutput) RequestUriParameterSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) bool { return v.RequestUriParameterSupported }).(pulumi.BoolOutput)
}

// The response types supported by the provider.
func (o GetOidcOpenidConfigResultOutput) ResponseTypesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.ResponseTypesSupporteds }).(pulumi.StringArrayOutput)
}

// The scopes supported by the provider.
func (o GetOidcOpenidConfigResultOutput) ScopesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.ScopesSupporteds }).(pulumi.StringArrayOutput)
}

// The subject types supported by the provider.
func (o GetOidcOpenidConfigResultOutput) SubjectTypesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.SubjectTypesSupporteds }).(pulumi.StringArrayOutput)
}

// The Token Endpoint for the provider.
func (o GetOidcOpenidConfigResultOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The token endpoint auth methods supported by the provider.
func (o GetOidcOpenidConfigResultOutput) TokenEndpointAuthMethodsSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.TokenEndpointAuthMethodsSupporteds }).(pulumi.StringArrayOutput)
}

// The User Info Endpoint for the provider
func (o GetOidcOpenidConfigResultOutput) UserinfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.UserinfoEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOidcOpenidConfigResultOutput{})
}
