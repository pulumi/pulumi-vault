// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			key, err := identity.NewOidcKey(ctx, "key", &identity.OidcKeyArgs{
//				AllowedClientIds: pulumi.StringArray{
//					pulumi.String("*"),
//				},
//				RotationPeriod:  pulumi.Int(3600),
//				VerificationTtl: pulumi.Int(3600),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = identity.NewOidcClient(ctx, "app", &identity.OidcClientArgs{
//				Key: key.Name,
//				RedirectUris: pulumi.StringArray{
//					pulumi.String("http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback"),
//					pulumi.String("http://127.0.0.1:8251/callback"),
//					pulumi.String("http://127.0.0.1:8080/callback"),
//				},
//				IdTokenTtl:     pulumi.Int(2400),
//				AccessTokenTtl: pulumi.Int(7200),
//			})
//			if err != nil {
//				return err
//			}
//			provider, err := identity.NewOidcProvider(ctx, "provider", &identity.OidcProviderArgs{
//				AllowedClientIds: pulumi.StringArray{
//					vault_identity_oidc_client.Test.Client_id,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = identity.GetOidcOpenidConfigOutput(ctx, identity.GetOidcOpenidConfigOutputArgs{
//				Name: provider.Name,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetOidcOpenidConfig(ctx *pulumi.Context, args *GetOidcOpenidConfigArgs, opts ...pulumi.InvokeOption) (*GetOidcOpenidConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOidcOpenidConfigResult
	err := ctx.Invoke("vault:identity/getOidcOpenidConfig:getOidcOpenidConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOidcOpenidConfig.
type GetOidcOpenidConfigArgs struct {
	// The name of the OIDC Provider in Vault.
	Name string `pulumi:"name"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
}

// A collection of values returned by getOidcOpenidConfig.
type GetOidcOpenidConfigResult struct {
	// The Authorization Endpoint for the provider.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// The grant types supported by the provider.
	GrantTypesSupporteds []string `pulumi:"grantTypesSupporteds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The signing algorithms supported by
	// the provider.
	IdTokenSigningAlgValuesSupporteds []string `pulumi:"idTokenSigningAlgValuesSupporteds"`
	// The URL of the issuer for the provider.
	Issuer string `pulumi:"issuer"`
	// The well known keys URI for the provider.
	JwksUri   string  `pulumi:"jwksUri"`
	Name      string  `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
	// Specifies whether Request URI Parameter is
	// supported by the provider.
	RequestUriParameterSupported bool `pulumi:"requestUriParameterSupported"`
	// The response types supported by the provider.
	ResponseTypesSupporteds []string `pulumi:"responseTypesSupporteds"`
	// The scopes supported by the provider.
	ScopesSupporteds []string `pulumi:"scopesSupporteds"`
	// The subject types supported by the provider.
	SubjectTypesSupporteds []string `pulumi:"subjectTypesSupporteds"`
	// The Token Endpoint for the provider.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The token endpoint auth methods supported by the provider.
	TokenEndpointAuthMethodsSupporteds []string `pulumi:"tokenEndpointAuthMethodsSupporteds"`
	// The User Info Endpoint for the provider
	UserinfoEndpoint string `pulumi:"userinfoEndpoint"`
}

func GetOidcOpenidConfigOutput(ctx *pulumi.Context, args GetOidcOpenidConfigOutputArgs, opts ...pulumi.InvokeOption) GetOidcOpenidConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOidcOpenidConfigResult, error) {
			args := v.(GetOidcOpenidConfigArgs)
			r, err := GetOidcOpenidConfig(ctx, &args, opts...)
			var s GetOidcOpenidConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOidcOpenidConfigResultOutput)
}

// A collection of arguments for invoking getOidcOpenidConfig.
type GetOidcOpenidConfigOutputArgs struct {
	// The name of the OIDC Provider in Vault.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (GetOidcOpenidConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOidcOpenidConfigArgs)(nil)).Elem()
}

// A collection of values returned by getOidcOpenidConfig.
type GetOidcOpenidConfigResultOutput struct{ *pulumi.OutputState }

func (GetOidcOpenidConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOidcOpenidConfigResult)(nil)).Elem()
}

func (o GetOidcOpenidConfigResultOutput) ToGetOidcOpenidConfigResultOutput() GetOidcOpenidConfigResultOutput {
	return o
}

func (o GetOidcOpenidConfigResultOutput) ToGetOidcOpenidConfigResultOutputWithContext(ctx context.Context) GetOidcOpenidConfigResultOutput {
	return o
}

func (o GetOidcOpenidConfigResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetOidcOpenidConfigResult] {
	return pulumix.Output[GetOidcOpenidConfigResult]{
		OutputState: o.OutputState,
	}
}

// The Authorization Endpoint for the provider.
func (o GetOidcOpenidConfigResultOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// The grant types supported by the provider.
func (o GetOidcOpenidConfigResultOutput) GrantTypesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.GrantTypesSupporteds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOidcOpenidConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The signing algorithms supported by
// the provider.
func (o GetOidcOpenidConfigResultOutput) IdTokenSigningAlgValuesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.IdTokenSigningAlgValuesSupporteds }).(pulumi.StringArrayOutput)
}

// The URL of the issuer for the provider.
func (o GetOidcOpenidConfigResultOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.Issuer }).(pulumi.StringOutput)
}

// The well known keys URI for the provider.
func (o GetOidcOpenidConfigResultOutput) JwksUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.JwksUri }).(pulumi.StringOutput)
}

func (o GetOidcOpenidConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOidcOpenidConfigResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies whether Request URI Parameter is
// supported by the provider.
func (o GetOidcOpenidConfigResultOutput) RequestUriParameterSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) bool { return v.RequestUriParameterSupported }).(pulumi.BoolOutput)
}

// The response types supported by the provider.
func (o GetOidcOpenidConfigResultOutput) ResponseTypesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.ResponseTypesSupporteds }).(pulumi.StringArrayOutput)
}

// The scopes supported by the provider.
func (o GetOidcOpenidConfigResultOutput) ScopesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.ScopesSupporteds }).(pulumi.StringArrayOutput)
}

// The subject types supported by the provider.
func (o GetOidcOpenidConfigResultOutput) SubjectTypesSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.SubjectTypesSupporteds }).(pulumi.StringArrayOutput)
}

// The Token Endpoint for the provider.
func (o GetOidcOpenidConfigResultOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The token endpoint auth methods supported by the provider.
func (o GetOidcOpenidConfigResultOutput) TokenEndpointAuthMethodsSupporteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) []string { return v.TokenEndpointAuthMethodsSupporteds }).(pulumi.StringArrayOutput)
}

// The User Info Endpoint for the provider
func (o GetOidcOpenidConfigResultOutput) UserinfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOidcOpenidConfigResult) string { return v.UserinfoEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOidcOpenidConfigResultOutput{})
}
