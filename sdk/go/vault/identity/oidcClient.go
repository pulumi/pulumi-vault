// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages OIDC Clients in a Vault server. See the [Vault documentation](https://www.vaultproject.io/api-docs/secret/identity/oidc-provider#create-or-update-an-assignment)
// for more information.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			testOidcAssignment, err := identity.NewOidcAssignment(ctx, "testOidcAssignment", &identity.OidcAssignmentArgs{
//				EntityIds: pulumi.StringArray{
//					pulumi.String("ascbascas-2231a-sdfaa"),
//				},
//				GroupIds: pulumi.StringArray{
//					pulumi.String("sajkdsad-32414-sfsada"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = identity.NewOidcClient(ctx, "testOidcClient", &identity.OidcClientArgs{
//				RedirectUris: pulumi.StringArray{
//					pulumi.String("http://127.0.0.1:9200/v1/auth-methods/oidc:authenticate:callback"),
//					pulumi.String("http://127.0.0.1:8251/callback"),
//					pulumi.String("http://127.0.0.1:8080/callback"),
//				},
//				Assignments: pulumi.StringArray{
//					testOidcAssignment.Name,
//				},
//				IdTokenTtl:     pulumi.Int(2400),
//				AccessTokenTtl: pulumi.Int(7200),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// OIDC Clients can be imported using the `name`, e.g.
//
// ```sh
// $ pulumi import vault:identity/oidcClient:OidcClient test my-app
// ```
type OidcClient struct {
	pulumi.CustomResourceState

	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl pulumi.IntOutput `pulumi:"accessTokenTtl"`
	// A list of assignment resources associated with the client.
	Assignments pulumi.StringArrayOutput `pulumi:"assignments"`
	// The Client ID from Vault.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The Client Secret from Vault.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
	ClientType pulumi.StringOutput `pulumi:"clientType"`
	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the `verificationTtl` on the key.
	IdTokenTtl pulumi.IntOutput `pulumi:"idTokenTtl"`
	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the `default`
	// key is used.
	Key pulumi.StringOutput `pulumi:"key"`
	// The name of the client.
	Name pulumi.StringOutput `pulumi:"name"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// Redirection URI values used by the client.
	// One of these values must exactly match the `redirectUri` parameter value
	// used in each authentication request.
	RedirectUris pulumi.StringArrayOutput `pulumi:"redirectUris"`
}

// NewOidcClient registers a new resource with the given unique name, arguments, and options.
func NewOidcClient(ctx *pulumi.Context,
	name string, args *OidcClientArgs, opts ...pulumi.ResourceOption) (*OidcClient, error) {
	if args == nil {
		args = &OidcClientArgs{}
	}

	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OidcClient
	err := ctx.RegisterResource("vault:identity/oidcClient:OidcClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOidcClient gets an existing OidcClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOidcClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OidcClientState, opts ...pulumi.ResourceOption) (*OidcClient, error) {
	var resource OidcClient
	err := ctx.ReadResource("vault:identity/oidcClient:OidcClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OidcClient resources.
type oidcClientState struct {
	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl *int `pulumi:"accessTokenTtl"`
	// A list of assignment resources associated with the client.
	Assignments []string `pulumi:"assignments"`
	// The Client ID from Vault.
	ClientId *string `pulumi:"clientId"`
	// The Client Secret from Vault.
	ClientSecret *string `pulumi:"clientSecret"`
	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
	ClientType *string `pulumi:"clientType"`
	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the `verificationTtl` on the key.
	IdTokenTtl *int `pulumi:"idTokenTtl"`
	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the `default`
	// key is used.
	Key *string `pulumi:"key"`
	// The name of the client.
	Name *string `pulumi:"name"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// Redirection URI values used by the client.
	// One of these values must exactly match the `redirectUri` parameter value
	// used in each authentication request.
	RedirectUris []string `pulumi:"redirectUris"`
}

type OidcClientState struct {
	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl pulumi.IntPtrInput
	// A list of assignment resources associated with the client.
	Assignments pulumi.StringArrayInput
	// The Client ID from Vault.
	ClientId pulumi.StringPtrInput
	// The Client Secret from Vault.
	ClientSecret pulumi.StringPtrInput
	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
	ClientType pulumi.StringPtrInput
	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the `verificationTtl` on the key.
	IdTokenTtl pulumi.IntPtrInput
	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the `default`
	// key is used.
	Key pulumi.StringPtrInput
	// The name of the client.
	Name pulumi.StringPtrInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// Redirection URI values used by the client.
	// One of these values must exactly match the `redirectUri` parameter value
	// used in each authentication request.
	RedirectUris pulumi.StringArrayInput
}

func (OidcClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*oidcClientState)(nil)).Elem()
}

type oidcClientArgs struct {
	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl *int `pulumi:"accessTokenTtl"`
	// A list of assignment resources associated with the client.
	Assignments []string `pulumi:"assignments"`
	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
	ClientType *string `pulumi:"clientType"`
	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the `verificationTtl` on the key.
	IdTokenTtl *int `pulumi:"idTokenTtl"`
	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the `default`
	// key is used.
	Key *string `pulumi:"key"`
	// The name of the client.
	Name *string `pulumi:"name"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// Redirection URI values used by the client.
	// One of these values must exactly match the `redirectUri` parameter value
	// used in each authentication request.
	RedirectUris []string `pulumi:"redirectUris"`
}

// The set of arguments for constructing a OidcClient resource.
type OidcClientArgs struct {
	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl pulumi.IntPtrInput
	// A list of assignment resources associated with the client.
	Assignments pulumi.StringArrayInput
	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
	ClientType pulumi.StringPtrInput
	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the `verificationTtl` on the key.
	IdTokenTtl pulumi.IntPtrInput
	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the `default`
	// key is used.
	Key pulumi.StringPtrInput
	// The name of the client.
	Name pulumi.StringPtrInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// Redirection URI values used by the client.
	// One of these values must exactly match the `redirectUri` parameter value
	// used in each authentication request.
	RedirectUris pulumi.StringArrayInput
}

func (OidcClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oidcClientArgs)(nil)).Elem()
}

type OidcClientInput interface {
	pulumi.Input

	ToOidcClientOutput() OidcClientOutput
	ToOidcClientOutputWithContext(ctx context.Context) OidcClientOutput
}

func (*OidcClient) ElementType() reflect.Type {
	return reflect.TypeOf((**OidcClient)(nil)).Elem()
}

func (i *OidcClient) ToOidcClientOutput() OidcClientOutput {
	return i.ToOidcClientOutputWithContext(context.Background())
}

func (i *OidcClient) ToOidcClientOutputWithContext(ctx context.Context) OidcClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcClientOutput)
}

// OidcClientArrayInput is an input type that accepts OidcClientArray and OidcClientArrayOutput values.
// You can construct a concrete instance of `OidcClientArrayInput` via:
//
//	OidcClientArray{ OidcClientArgs{...} }
type OidcClientArrayInput interface {
	pulumi.Input

	ToOidcClientArrayOutput() OidcClientArrayOutput
	ToOidcClientArrayOutputWithContext(context.Context) OidcClientArrayOutput
}

type OidcClientArray []OidcClientInput

func (OidcClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OidcClient)(nil)).Elem()
}

func (i OidcClientArray) ToOidcClientArrayOutput() OidcClientArrayOutput {
	return i.ToOidcClientArrayOutputWithContext(context.Background())
}

func (i OidcClientArray) ToOidcClientArrayOutputWithContext(ctx context.Context) OidcClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcClientArrayOutput)
}

// OidcClientMapInput is an input type that accepts OidcClientMap and OidcClientMapOutput values.
// You can construct a concrete instance of `OidcClientMapInput` via:
//
//	OidcClientMap{ "key": OidcClientArgs{...} }
type OidcClientMapInput interface {
	pulumi.Input

	ToOidcClientMapOutput() OidcClientMapOutput
	ToOidcClientMapOutputWithContext(context.Context) OidcClientMapOutput
}

type OidcClientMap map[string]OidcClientInput

func (OidcClientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OidcClient)(nil)).Elem()
}

func (i OidcClientMap) ToOidcClientMapOutput() OidcClientMapOutput {
	return i.ToOidcClientMapOutputWithContext(context.Background())
}

func (i OidcClientMap) ToOidcClientMapOutputWithContext(ctx context.Context) OidcClientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcClientMapOutput)
}

type OidcClientOutput struct{ *pulumi.OutputState }

func (OidcClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OidcClient)(nil)).Elem()
}

func (o OidcClientOutput) ToOidcClientOutput() OidcClientOutput {
	return o
}

func (o OidcClientOutput) ToOidcClientOutputWithContext(ctx context.Context) OidcClientOutput {
	return o
}

// The time-to-live for access tokens obtained by the client.
func (o OidcClientOutput) AccessTokenTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.IntOutput { return v.AccessTokenTtl }).(pulumi.IntOutput)
}

// A list of assignment resources associated with the client.
func (o OidcClientOutput) Assignments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringArrayOutput { return v.Assignments }).(pulumi.StringArrayOutput)
}

// The Client ID from Vault.
func (o OidcClientOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret from Vault.
func (o OidcClientOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// The client type based on its ability to maintain confidentiality of credentials.
// The following client types are supported: `confidential`, `public`. Defaults to `confidential`.
func (o OidcClientOutput) ClientType() pulumi.StringOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringOutput { return v.ClientType }).(pulumi.StringOutput)
}

// The time-to-live for ID tokens obtained by the client.
// The value should be less than the `verificationTtl` on the key.
func (o OidcClientOutput) IdTokenTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.IntOutput { return v.IdTokenTtl }).(pulumi.IntOutput)
}

// A reference to a named key resource in Vault.
// This cannot be modified after creation. If not provided, the `default`
// key is used.
func (o OidcClientOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The name of the client.
func (o OidcClientOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The namespace to provision the resource in.
// The value should not contain leading or trailing forward slashes.
// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
// *Available only for Vault Enterprise*.
func (o OidcClientOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Redirection URI values used by the client.
// One of these values must exactly match the `redirectUri` parameter value
// used in each authentication request.
func (o OidcClientOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OidcClient) pulumi.StringArrayOutput { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

type OidcClientArrayOutput struct{ *pulumi.OutputState }

func (OidcClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OidcClient)(nil)).Elem()
}

func (o OidcClientArrayOutput) ToOidcClientArrayOutput() OidcClientArrayOutput {
	return o
}

func (o OidcClientArrayOutput) ToOidcClientArrayOutputWithContext(ctx context.Context) OidcClientArrayOutput {
	return o
}

func (o OidcClientArrayOutput) Index(i pulumi.IntInput) OidcClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OidcClient {
		return vs[0].([]*OidcClient)[vs[1].(int)]
	}).(OidcClientOutput)
}

type OidcClientMapOutput struct{ *pulumi.OutputState }

func (OidcClientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OidcClient)(nil)).Elem()
}

func (o OidcClientMapOutput) ToOidcClientMapOutput() OidcClientMapOutput {
	return o
}

func (o OidcClientMapOutput) ToOidcClientMapOutputWithContext(ctx context.Context) OidcClientMapOutput {
	return o
}

func (o OidcClientMapOutput) MapIndex(k pulumi.StringInput) OidcClientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OidcClient {
		return vs[0].(map[string]*OidcClient)[vs[1].(string)]
	}).(OidcClientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OidcClientInput)(nil)).Elem(), &OidcClient{})
	pulumi.RegisterInputType(reflect.TypeOf((*OidcClientArrayInput)(nil)).Elem(), OidcClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OidcClientMapInput)(nil)).Elem(), OidcClientMap{})
	pulumi.RegisterOutputType(OidcClientOutput{})
	pulumi.RegisterOutputType(OidcClientArrayOutput{})
	pulumi.RegisterOutputType(OidcClientMapOutput{})
}
