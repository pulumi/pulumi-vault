// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type BackendRoleAzureRole struct {
	RoleId   *string `pulumi:"roleId"`
	RoleName string  `pulumi:"roleName"`
	Scope    string  `pulumi:"scope"`
}

// BackendRoleAzureRoleInput is an input type that accepts BackendRoleAzureRoleArgs and BackendRoleAzureRoleOutput values.
// You can construct a concrete instance of `BackendRoleAzureRoleInput` via:
//
//          BackendRoleAzureRoleArgs{...}
type BackendRoleAzureRoleInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput
	ToBackendRoleAzureRoleOutputWithContext(context.Context) BackendRoleAzureRoleOutput
}

type BackendRoleAzureRoleArgs struct {
	RoleId   pulumi.StringPtrInput `pulumi:"roleId"`
	RoleName pulumi.StringInput    `pulumi:"roleName"`
	Scope    pulumi.StringInput    `pulumi:"scope"`
}

func (BackendRoleAzureRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRole)(nil)).Elem()
}

func (i BackendRoleAzureRoleArgs) ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput {
	return i.ToBackendRoleAzureRoleOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArgs) ToBackendRoleAzureRoleOutputWithContext(ctx context.Context) BackendRoleAzureRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleOutput)
}

// BackendRoleAzureRoleArrayInput is an input type that accepts BackendRoleAzureRoleArray and BackendRoleAzureRoleArrayOutput values.
// You can construct a concrete instance of `BackendRoleAzureRoleArrayInput` via:
//
//          BackendRoleAzureRoleArray{ BackendRoleAzureRoleArgs{...} }
type BackendRoleAzureRoleArrayInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput
	ToBackendRoleAzureRoleArrayOutputWithContext(context.Context) BackendRoleAzureRoleArrayOutput
}

type BackendRoleAzureRoleArray []BackendRoleAzureRoleInput

func (BackendRoleAzureRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRole)(nil)).Elem()
}

func (i BackendRoleAzureRoleArray) ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput {
	return i.ToBackendRoleAzureRoleArrayOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArray) ToBackendRoleAzureRoleArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleArrayOutput)
}

type BackendRoleAzureRoleOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRole)(nil)).Elem()
}

func (o BackendRoleAzureRoleOutput) ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput {
	return o
}

func (o BackendRoleAzureRoleOutput) ToBackendRoleAzureRoleOutputWithContext(ctx context.Context) BackendRoleAzureRoleOutput {
	return o
}

func (o BackendRoleAzureRoleOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o BackendRoleAzureRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o BackendRoleAzureRoleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) string { return v.Scope }).(pulumi.StringOutput)
}

type BackendRoleAzureRoleArrayOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRole)(nil)).Elem()
}

func (o BackendRoleAzureRoleArrayOutput) ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArrayOutput) ToBackendRoleAzureRoleArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArrayOutput) Index(i pulumi.IntInput) BackendRoleAzureRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendRoleAzureRole {
		return vs[0].([]BackendRoleAzureRole)[vs[1].(int)]
	}).(BackendRoleAzureRoleOutput)
}

func init() {
	pulumi.RegisterOutputType(BackendRoleAzureRoleOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleArrayOutput{})
}
