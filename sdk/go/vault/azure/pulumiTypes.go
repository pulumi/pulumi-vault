// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type BackendRoleAzureGroup struct {
	GroupName string  `pulumi:"groupName"`
	ObjectId  *string `pulumi:"objectId"`
}

// BackendRoleAzureGroupInput is an input type that accepts BackendRoleAzureGroupArgs and BackendRoleAzureGroupOutput values.
// You can construct a concrete instance of `BackendRoleAzureGroupInput` via:
//
//	BackendRoleAzureGroupArgs{...}
type BackendRoleAzureGroupInput interface {
	pulumi.Input

	ToBackendRoleAzureGroupOutput() BackendRoleAzureGroupOutput
	ToBackendRoleAzureGroupOutputWithContext(context.Context) BackendRoleAzureGroupOutput
}

type BackendRoleAzureGroupArgs struct {
	GroupName pulumi.StringInput    `pulumi:"groupName"`
	ObjectId  pulumi.StringPtrInput `pulumi:"objectId"`
}

func (BackendRoleAzureGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureGroup)(nil)).Elem()
}

func (i BackendRoleAzureGroupArgs) ToBackendRoleAzureGroupOutput() BackendRoleAzureGroupOutput {
	return i.ToBackendRoleAzureGroupOutputWithContext(context.Background())
}

func (i BackendRoleAzureGroupArgs) ToBackendRoleAzureGroupOutputWithContext(ctx context.Context) BackendRoleAzureGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureGroupOutput)
}

// BackendRoleAzureGroupArrayInput is an input type that accepts BackendRoleAzureGroupArray and BackendRoleAzureGroupArrayOutput values.
// You can construct a concrete instance of `BackendRoleAzureGroupArrayInput` via:
//
//	BackendRoleAzureGroupArray{ BackendRoleAzureGroupArgs{...} }
type BackendRoleAzureGroupArrayInput interface {
	pulumi.Input

	ToBackendRoleAzureGroupArrayOutput() BackendRoleAzureGroupArrayOutput
	ToBackendRoleAzureGroupArrayOutputWithContext(context.Context) BackendRoleAzureGroupArrayOutput
}

type BackendRoleAzureGroupArray []BackendRoleAzureGroupInput

func (BackendRoleAzureGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureGroup)(nil)).Elem()
}

func (i BackendRoleAzureGroupArray) ToBackendRoleAzureGroupArrayOutput() BackendRoleAzureGroupArrayOutput {
	return i.ToBackendRoleAzureGroupArrayOutputWithContext(context.Background())
}

func (i BackendRoleAzureGroupArray) ToBackendRoleAzureGroupArrayOutputWithContext(ctx context.Context) BackendRoleAzureGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureGroupArrayOutput)
}

type BackendRoleAzureGroupOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureGroup)(nil)).Elem()
}

func (o BackendRoleAzureGroupOutput) ToBackendRoleAzureGroupOutput() BackendRoleAzureGroupOutput {
	return o
}

func (o BackendRoleAzureGroupOutput) ToBackendRoleAzureGroupOutputWithContext(ctx context.Context) BackendRoleAzureGroupOutput {
	return o
}

func (o BackendRoleAzureGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o BackendRoleAzureGroupOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendRoleAzureGroup) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type BackendRoleAzureGroupArrayOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureGroup)(nil)).Elem()
}

func (o BackendRoleAzureGroupArrayOutput) ToBackendRoleAzureGroupArrayOutput() BackendRoleAzureGroupArrayOutput {
	return o
}

func (o BackendRoleAzureGroupArrayOutput) ToBackendRoleAzureGroupArrayOutputWithContext(ctx context.Context) BackendRoleAzureGroupArrayOutput {
	return o
}

func (o BackendRoleAzureGroupArrayOutput) Index(i pulumi.IntInput) BackendRoleAzureGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendRoleAzureGroup {
		return vs[0].([]BackendRoleAzureGroup)[vs[1].(int)]
	}).(BackendRoleAzureGroupOutput)
}

type BackendRoleAzureRole struct {
	RoleId   *string `pulumi:"roleId"`
	RoleName *string `pulumi:"roleName"`
	Scope    string  `pulumi:"scope"`
}

// BackendRoleAzureRoleInput is an input type that accepts BackendRoleAzureRoleArgs and BackendRoleAzureRoleOutput values.
// You can construct a concrete instance of `BackendRoleAzureRoleInput` via:
//
//	BackendRoleAzureRoleArgs{...}
type BackendRoleAzureRoleInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput
	ToBackendRoleAzureRoleOutputWithContext(context.Context) BackendRoleAzureRoleOutput
}

type BackendRoleAzureRoleArgs struct {
	RoleId   pulumi.StringPtrInput `pulumi:"roleId"`
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
	Scope    pulumi.StringInput    `pulumi:"scope"`
}

func (BackendRoleAzureRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRole)(nil)).Elem()
}

func (i BackendRoleAzureRoleArgs) ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput {
	return i.ToBackendRoleAzureRoleOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArgs) ToBackendRoleAzureRoleOutputWithContext(ctx context.Context) BackendRoleAzureRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleOutput)
}

// BackendRoleAzureRoleArrayInput is an input type that accepts BackendRoleAzureRoleArray and BackendRoleAzureRoleArrayOutput values.
// You can construct a concrete instance of `BackendRoleAzureRoleArrayInput` via:
//
//	BackendRoleAzureRoleArray{ BackendRoleAzureRoleArgs{...} }
type BackendRoleAzureRoleArrayInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput
	ToBackendRoleAzureRoleArrayOutputWithContext(context.Context) BackendRoleAzureRoleArrayOutput
}

type BackendRoleAzureRoleArray []BackendRoleAzureRoleInput

func (BackendRoleAzureRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRole)(nil)).Elem()
}

func (i BackendRoleAzureRoleArray) ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput {
	return i.ToBackendRoleAzureRoleArrayOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArray) ToBackendRoleAzureRoleArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleArrayOutput)
}

type BackendRoleAzureRoleOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRole)(nil)).Elem()
}

func (o BackendRoleAzureRoleOutput) ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput {
	return o
}

func (o BackendRoleAzureRoleOutput) ToBackendRoleAzureRoleOutputWithContext(ctx context.Context) BackendRoleAzureRoleOutput {
	return o
}

func (o BackendRoleAzureRoleOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o BackendRoleAzureRoleOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

func (o BackendRoleAzureRoleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) string { return v.Scope }).(pulumi.StringOutput)
}

type BackendRoleAzureRoleArrayOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRole)(nil)).Elem()
}

func (o BackendRoleAzureRoleArrayOutput) ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArrayOutput) ToBackendRoleAzureRoleArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArrayOutput) Index(i pulumi.IntInput) BackendRoleAzureRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendRoleAzureRole {
		return vs[0].([]BackendRoleAzureRole)[vs[1].(int)]
	}).(BackendRoleAzureRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackendRoleAzureGroupInput)(nil)).Elem(), BackendRoleAzureGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendRoleAzureGroupArrayInput)(nil)).Elem(), BackendRoleAzureGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendRoleAzureRoleInput)(nil)).Elem(), BackendRoleAzureRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendRoleAzureRoleArrayInput)(nil)).Elem(), BackendRoleAzureRoleArray{})
	pulumi.RegisterOutputType(BackendRoleAzureGroupOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureGroupArrayOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleArrayOutput{})
}
