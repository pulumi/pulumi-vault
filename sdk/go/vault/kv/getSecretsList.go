// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kv

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"encoding/json"
//	"fmt"
//
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault"
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/kv"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			kvv1, err := vault.NewMount(ctx, "kvv1", &vault.MountArgs{
//				Path: pulumi.String("kvv1"),
//				Type: pulumi.String("kv"),
//				Options: pulumi.Map{
//					"version": pulumi.Any("1"),
//				},
//				Description: pulumi.String("KV Version 1 secret engine mount"),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"zip": "zap",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = kv.NewSecret(ctx, "awsSecret", &kv.SecretArgs{
//				Path: kvv1.Path.ApplyT(func(path string) (string, error) {
//					return fmt.Sprintf("%v/aws-secret", path), nil
//				}).(pulumi.StringOutput),
//				DataJson: pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON1, err := json.Marshal(map[string]interface{}{
//				"foo": "bar",
//			})
//			if err != nil {
//				return err
//			}
//			json1 := string(tmpJSON1)
//			_, err = kv.NewSecret(ctx, "azureSecret", &kv.SecretArgs{
//				Path: kvv1.Path.ApplyT(func(path string) (string, error) {
//					return fmt.Sprintf("%v/azure-secret", path), nil
//				}).(pulumi.StringOutput),
//				DataJson: pulumi.String(json1),
//			})
//			if err != nil {
//				return err
//			}
//			_ = kv.GetSecretsListOutput(ctx, kv.GetSecretsListOutputArgs{
//				Path: kvv1.Path,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Required Vault Capabilities
//
// Use of this resource requires the `read` capability on the given path.
func GetSecretsList(ctx *pulumi.Context, args *GetSecretsListArgs, opts ...pulumi.InvokeOption) (*GetSecretsListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecretsListResult
	err := ctx.Invoke("vault:kv/getSecretsList:getSecretsList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretsList.
type GetSecretsListArgs struct {
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// Full KV-V1 path where secrets will be listed.
	Path string `pulumi:"path"`
}

// A collection of values returned by getSecretsList.
type GetSecretsListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of all secret names listed under the given path.
	Names     []string `pulumi:"names"`
	Namespace *string  `pulumi:"namespace"`
	Path      string   `pulumi:"path"`
}

func GetSecretsListOutput(ctx *pulumi.Context, args GetSecretsListOutputArgs, opts ...pulumi.InvokeOption) GetSecretsListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecretsListResult, error) {
			args := v.(GetSecretsListArgs)
			r, err := GetSecretsList(ctx, &args, opts...)
			var s GetSecretsListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecretsListResultOutput)
}

// A collection of arguments for invoking getSecretsList.
type GetSecretsListOutputArgs struct {
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Full KV-V1 path where secrets will be listed.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetSecretsListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsListArgs)(nil)).Elem()
}

// A collection of values returned by getSecretsList.
type GetSecretsListResultOutput struct{ *pulumi.OutputState }

func (GetSecretsListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsListResult)(nil)).Elem()
}

func (o GetSecretsListResultOutput) ToGetSecretsListResultOutput() GetSecretsListResultOutput {
	return o
}

func (o GetSecretsListResultOutput) ToGetSecretsListResultOutputWithContext(ctx context.Context) GetSecretsListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecretsListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsListResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of all secret names listed under the given path.
func (o GetSecretsListResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretsListResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetSecretsListResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretsListResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetSecretsListResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsListResult) string { return v.Path }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretsListResultOutput{})
}
