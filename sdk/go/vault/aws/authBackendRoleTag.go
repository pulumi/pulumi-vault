// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-vault/sdk/v6/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Reads role tag information from an AWS auth backend in Vault.
type AuthBackendRoleTag struct {
	pulumi.CustomResourceState

	// If set, allows migration of the underlying instances where the client resides. Use with caution.
	AllowInstanceMigration pulumi.BoolPtrOutput `pulumi:"allowInstanceMigration"`
	// The path to the AWS auth backend to
	// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
	Backend pulumi.StringPtrOutput `pulumi:"backend"`
	// If set, only allows a single token to be granted per instance ID.
	DisallowReauthentication pulumi.BoolPtrOutput `pulumi:"disallowReauthentication"`
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// The maximum TTL of the tokens issued using this role.
	MaxTtl pulumi.StringPtrOutput `pulumi:"maxTtl"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
	Policies pulumi.StringArrayOutput `pulumi:"policies"`
	// The name of the AWS auth backend role to read
	// role tags from, with no leading or trailing `/`s.
	Role pulumi.StringOutput `pulumi:"role"`
	// The key of the role tag.
	TagKey pulumi.StringOutput `pulumi:"tagKey"`
	// The value to set the role key.
	TagValue pulumi.StringOutput `pulumi:"tagValue"`
}

// NewAuthBackendRoleTag registers a new resource with the given unique name, arguments, and options.
func NewAuthBackendRoleTag(ctx *pulumi.Context,
	name string, args *AuthBackendRoleTagArgs, opts ...pulumi.ResourceOption) (*AuthBackendRoleTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthBackendRoleTag
	err := ctx.RegisterResource("vault:aws/authBackendRoleTag:AuthBackendRoleTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthBackendRoleTag gets an existing AuthBackendRoleTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthBackendRoleTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthBackendRoleTagState, opts ...pulumi.ResourceOption) (*AuthBackendRoleTag, error) {
	var resource AuthBackendRoleTag
	err := ctx.ReadResource("vault:aws/authBackendRoleTag:AuthBackendRoleTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthBackendRoleTag resources.
type authBackendRoleTagState struct {
	// If set, allows migration of the underlying instances where the client resides. Use with caution.
	AllowInstanceMigration *bool `pulumi:"allowInstanceMigration"`
	// The path to the AWS auth backend to
	// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
	Backend *string `pulumi:"backend"`
	// If set, only allows a single token to be granted per instance ID.
	DisallowReauthentication *bool `pulumi:"disallowReauthentication"`
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId *string `pulumi:"instanceId"`
	// The maximum TTL of the tokens issued using this role.
	MaxTtl *string `pulumi:"maxTtl"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
	Policies []string `pulumi:"policies"`
	// The name of the AWS auth backend role to read
	// role tags from, with no leading or trailing `/`s.
	Role *string `pulumi:"role"`
	// The key of the role tag.
	TagKey *string `pulumi:"tagKey"`
	// The value to set the role key.
	TagValue *string `pulumi:"tagValue"`
}

type AuthBackendRoleTagState struct {
	// If set, allows migration of the underlying instances where the client resides. Use with caution.
	AllowInstanceMigration pulumi.BoolPtrInput
	// The path to the AWS auth backend to
	// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
	Backend pulumi.StringPtrInput
	// If set, only allows a single token to be granted per instance ID.
	DisallowReauthentication pulumi.BoolPtrInput
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId pulumi.StringPtrInput
	// The maximum TTL of the tokens issued using this role.
	MaxTtl pulumi.StringPtrInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
	Policies pulumi.StringArrayInput
	// The name of the AWS auth backend role to read
	// role tags from, with no leading or trailing `/`s.
	Role pulumi.StringPtrInput
	// The key of the role tag.
	TagKey pulumi.StringPtrInput
	// The value to set the role key.
	TagValue pulumi.StringPtrInput
}

func (AuthBackendRoleTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*authBackendRoleTagState)(nil)).Elem()
}

type authBackendRoleTagArgs struct {
	// If set, allows migration of the underlying instances where the client resides. Use with caution.
	AllowInstanceMigration *bool `pulumi:"allowInstanceMigration"`
	// The path to the AWS auth backend to
	// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
	Backend *string `pulumi:"backend"`
	// If set, only allows a single token to be granted per instance ID.
	DisallowReauthentication *bool `pulumi:"disallowReauthentication"`
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId *string `pulumi:"instanceId"`
	// The maximum TTL of the tokens issued using this role.
	MaxTtl *string `pulumi:"maxTtl"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
	Policies []string `pulumi:"policies"`
	// The name of the AWS auth backend role to read
	// role tags from, with no leading or trailing `/`s.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a AuthBackendRoleTag resource.
type AuthBackendRoleTagArgs struct {
	// If set, allows migration of the underlying instances where the client resides. Use with caution.
	AllowInstanceMigration pulumi.BoolPtrInput
	// The path to the AWS auth backend to
	// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
	Backend pulumi.StringPtrInput
	// If set, only allows a single token to be granted per instance ID.
	DisallowReauthentication pulumi.BoolPtrInput
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId pulumi.StringPtrInput
	// The maximum TTL of the tokens issued using this role.
	MaxTtl pulumi.StringPtrInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
	Policies pulumi.StringArrayInput
	// The name of the AWS auth backend role to read
	// role tags from, with no leading or trailing `/`s.
	Role pulumi.StringInput
}

func (AuthBackendRoleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authBackendRoleTagArgs)(nil)).Elem()
}

type AuthBackendRoleTagInput interface {
	pulumi.Input

	ToAuthBackendRoleTagOutput() AuthBackendRoleTagOutput
	ToAuthBackendRoleTagOutputWithContext(ctx context.Context) AuthBackendRoleTagOutput
}

func (*AuthBackendRoleTag) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthBackendRoleTag)(nil)).Elem()
}

func (i *AuthBackendRoleTag) ToAuthBackendRoleTagOutput() AuthBackendRoleTagOutput {
	return i.ToAuthBackendRoleTagOutputWithContext(context.Background())
}

func (i *AuthBackendRoleTag) ToAuthBackendRoleTagOutputWithContext(ctx context.Context) AuthBackendRoleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendRoleTagOutput)
}

// AuthBackendRoleTagArrayInput is an input type that accepts AuthBackendRoleTagArray and AuthBackendRoleTagArrayOutput values.
// You can construct a concrete instance of `AuthBackendRoleTagArrayInput` via:
//
//	AuthBackendRoleTagArray{ AuthBackendRoleTagArgs{...} }
type AuthBackendRoleTagArrayInput interface {
	pulumi.Input

	ToAuthBackendRoleTagArrayOutput() AuthBackendRoleTagArrayOutput
	ToAuthBackendRoleTagArrayOutputWithContext(context.Context) AuthBackendRoleTagArrayOutput
}

type AuthBackendRoleTagArray []AuthBackendRoleTagInput

func (AuthBackendRoleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthBackendRoleTag)(nil)).Elem()
}

func (i AuthBackendRoleTagArray) ToAuthBackendRoleTagArrayOutput() AuthBackendRoleTagArrayOutput {
	return i.ToAuthBackendRoleTagArrayOutputWithContext(context.Background())
}

func (i AuthBackendRoleTagArray) ToAuthBackendRoleTagArrayOutputWithContext(ctx context.Context) AuthBackendRoleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendRoleTagArrayOutput)
}

// AuthBackendRoleTagMapInput is an input type that accepts AuthBackendRoleTagMap and AuthBackendRoleTagMapOutput values.
// You can construct a concrete instance of `AuthBackendRoleTagMapInput` via:
//
//	AuthBackendRoleTagMap{ "key": AuthBackendRoleTagArgs{...} }
type AuthBackendRoleTagMapInput interface {
	pulumi.Input

	ToAuthBackendRoleTagMapOutput() AuthBackendRoleTagMapOutput
	ToAuthBackendRoleTagMapOutputWithContext(context.Context) AuthBackendRoleTagMapOutput
}

type AuthBackendRoleTagMap map[string]AuthBackendRoleTagInput

func (AuthBackendRoleTagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthBackendRoleTag)(nil)).Elem()
}

func (i AuthBackendRoleTagMap) ToAuthBackendRoleTagMapOutput() AuthBackendRoleTagMapOutput {
	return i.ToAuthBackendRoleTagMapOutputWithContext(context.Background())
}

func (i AuthBackendRoleTagMap) ToAuthBackendRoleTagMapOutputWithContext(ctx context.Context) AuthBackendRoleTagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendRoleTagMapOutput)
}

type AuthBackendRoleTagOutput struct{ *pulumi.OutputState }

func (AuthBackendRoleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthBackendRoleTag)(nil)).Elem()
}

func (o AuthBackendRoleTagOutput) ToAuthBackendRoleTagOutput() AuthBackendRoleTagOutput {
	return o
}

func (o AuthBackendRoleTagOutput) ToAuthBackendRoleTagOutputWithContext(ctx context.Context) AuthBackendRoleTagOutput {
	return o
}

// If set, allows migration of the underlying instances where the client resides. Use with caution.
func (o AuthBackendRoleTagOutput) AllowInstanceMigration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.BoolPtrOutput { return v.AllowInstanceMigration }).(pulumi.BoolPtrOutput)
}

// The path to the AWS auth backend to
// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
func (o AuthBackendRoleTagOutput) Backend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringPtrOutput { return v.Backend }).(pulumi.StringPtrOutput)
}

// If set, only allows a single token to be granted per instance ID.
func (o AuthBackendRoleTagOutput) DisallowReauthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.BoolPtrOutput { return v.DisallowReauthentication }).(pulumi.BoolPtrOutput)
}

// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
func (o AuthBackendRoleTagOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The maximum TTL of the tokens issued using this role.
func (o AuthBackendRoleTagOutput) MaxTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringPtrOutput { return v.MaxTtl }).(pulumi.StringPtrOutput)
}

// The namespace to provision the resource in.
// The value should not contain leading or trailing forward slashes.
// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault/index.html#namespace).
// *Available only for Vault Enterprise*.
func (o AuthBackendRoleTagOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
func (o AuthBackendRoleTagOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringArrayOutput { return v.Policies }).(pulumi.StringArrayOutput)
}

// The name of the AWS auth backend role to read
// role tags from, with no leading or trailing `/`s.
func (o AuthBackendRoleTagOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// The key of the role tag.
func (o AuthBackendRoleTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringOutput { return v.TagKey }).(pulumi.StringOutput)
}

// The value to set the role key.
func (o AuthBackendRoleTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthBackendRoleTag) pulumi.StringOutput { return v.TagValue }).(pulumi.StringOutput)
}

type AuthBackendRoleTagArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendRoleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthBackendRoleTag)(nil)).Elem()
}

func (o AuthBackendRoleTagArrayOutput) ToAuthBackendRoleTagArrayOutput() AuthBackendRoleTagArrayOutput {
	return o
}

func (o AuthBackendRoleTagArrayOutput) ToAuthBackendRoleTagArrayOutputWithContext(ctx context.Context) AuthBackendRoleTagArrayOutput {
	return o
}

func (o AuthBackendRoleTagArrayOutput) Index(i pulumi.IntInput) AuthBackendRoleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthBackendRoleTag {
		return vs[0].([]*AuthBackendRoleTag)[vs[1].(int)]
	}).(AuthBackendRoleTagOutput)
}

type AuthBackendRoleTagMapOutput struct{ *pulumi.OutputState }

func (AuthBackendRoleTagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthBackendRoleTag)(nil)).Elem()
}

func (o AuthBackendRoleTagMapOutput) ToAuthBackendRoleTagMapOutput() AuthBackendRoleTagMapOutput {
	return o
}

func (o AuthBackendRoleTagMapOutput) ToAuthBackendRoleTagMapOutputWithContext(ctx context.Context) AuthBackendRoleTagMapOutput {
	return o
}

func (o AuthBackendRoleTagMapOutput) MapIndex(k pulumi.StringInput) AuthBackendRoleTagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthBackendRoleTag {
		return vs[0].(map[string]*AuthBackendRoleTag)[vs[1].(string)]
	}).(AuthBackendRoleTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthBackendRoleTagInput)(nil)).Elem(), &AuthBackendRoleTag{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthBackendRoleTagArrayInput)(nil)).Elem(), AuthBackendRoleTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthBackendRoleTagMapInput)(nil)).Elem(), AuthBackendRoleTagMap{})
	pulumi.RegisterOutputType(AuthBackendRoleTagOutput{})
	pulumi.RegisterOutputType(AuthBackendRoleTagArrayOutput{})
	pulumi.RegisterOutputType(AuthBackendRoleTagMapOutput{})
}
