// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vault

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v7/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v7/go/vault"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			oci, err := vault.NewOciAuthBackend(ctx, "oci", &vault.OciAuthBackendArgs{
//				Path:          pulumi.String("oci"),
//				HomeTenancyId: pulumi.String("ocid1.tenancy.oc1..aaaaaaaah7zkvaffv26pzyauoe2zbnionqvhvsexamplee557wakiofi4ysgqq"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vault.NewOciAuthBackendRole(ctx, "example", &vault.OciAuthBackendRoleArgs{
//				Backend: oci.Path,
//				Name:    pulumi.String("test-role"),
//				OcidLists: pulumi.StringArray{
//					pulumi.String("ocid1.group.oc1..aaaaaaaabmyiinfq32y5aha3r2yo4exampleo4yg3fjk2sbne4567tropaa"),
//					pulumi.String("ocid1.dynamicgroup.oc1..aaaaaaaabvfwct33xri5examplegov4zyjp3rd5d7sk9jjdggxijhco56hrq"),
//				},
//				TokenTtl:    pulumi.Int(60),
//				TokenMaxTtl: pulumi.Int(120),
//				TokenPolicies: pulumi.StringArray{
//					pulumi.String("default"),
//					pulumi.String("dev"),
//					pulumi.String("prod"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OCI auth backend roles can be imported using `auth/`, the `backend` path, `/role/`, and the `role` name e.g.
//
// ```sh
// $ pulumi import vault:index/ociAuthBackendRole:OciAuthBackendRole example auth/oci/role/test-role
// ```
type OciAuthBackendRole struct {
	pulumi.CustomResourceState

	// Unique name of the auth backend to configure.
	Backend pulumi.StringPtrOutput `pulumi:"backend"`
	// The name of the role.
	Name pulumi.StringOutput `pulumi:"name"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// The list of Group or Dynamic Group OCIDs that can take this role.
	OcidLists pulumi.StringArrayOutput `pulumi:"ocidLists"`
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	TokenBoundCidrs pulumi.StringArrayOutput `pulumi:"tokenBoundCidrs"`
	// Generated Token's Explicit Maximum TTL in seconds
	TokenExplicitMaxTtl pulumi.IntPtrOutput `pulumi:"tokenExplicitMaxTtl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl pulumi.IntPtrOutput `pulumi:"tokenMaxTtl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy pulumi.BoolPtrOutput `pulumi:"tokenNoDefaultPolicy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses pulumi.IntPtrOutput `pulumi:"tokenNumUses"`
	// Generated Token's Period
	TokenPeriod pulumi.IntPtrOutput `pulumi:"tokenPeriod"`
	// Generated Token's Policies
	TokenPolicies pulumi.StringArrayOutput `pulumi:"tokenPolicies"`
	// The initial ttl of the token to generate in seconds
	TokenTtl pulumi.IntPtrOutput `pulumi:"tokenTtl"`
	// The type of token to generate, service or batch
	TokenType pulumi.StringPtrOutput `pulumi:"tokenType"`
}

// NewOciAuthBackendRole registers a new resource with the given unique name, arguments, and options.
func NewOciAuthBackendRole(ctx *pulumi.Context,
	name string, args *OciAuthBackendRoleArgs, opts ...pulumi.ResourceOption) (*OciAuthBackendRole, error) {
	if args == nil {
		args = &OciAuthBackendRoleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OciAuthBackendRole
	err := ctx.RegisterResource("vault:index/ociAuthBackendRole:OciAuthBackendRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOciAuthBackendRole gets an existing OciAuthBackendRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOciAuthBackendRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OciAuthBackendRoleState, opts ...pulumi.ResourceOption) (*OciAuthBackendRole, error) {
	var resource OciAuthBackendRole
	err := ctx.ReadResource("vault:index/ociAuthBackendRole:OciAuthBackendRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OciAuthBackendRole resources.
type ociAuthBackendRoleState struct {
	// Unique name of the auth backend to configure.
	Backend *string `pulumi:"backend"`
	// The name of the role.
	Name *string `pulumi:"name"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// The list of Group or Dynamic Group OCIDs that can take this role.
	OcidLists []string `pulumi:"ocidLists"`
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	TokenBoundCidrs []string `pulumi:"tokenBoundCidrs"`
	// Generated Token's Explicit Maximum TTL in seconds
	TokenExplicitMaxTtl *int `pulumi:"tokenExplicitMaxTtl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int `pulumi:"tokenMaxTtl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `pulumi:"tokenNoDefaultPolicy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int `pulumi:"tokenNumUses"`
	// Generated Token's Period
	TokenPeriod *int `pulumi:"tokenPeriod"`
	// Generated Token's Policies
	TokenPolicies []string `pulumi:"tokenPolicies"`
	// The initial ttl of the token to generate in seconds
	TokenTtl *int `pulumi:"tokenTtl"`
	// The type of token to generate, service or batch
	TokenType *string `pulumi:"tokenType"`
}

type OciAuthBackendRoleState struct {
	// Unique name of the auth backend to configure.
	Backend pulumi.StringPtrInput
	// The name of the role.
	Name pulumi.StringPtrInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// The list of Group or Dynamic Group OCIDs that can take this role.
	OcidLists pulumi.StringArrayInput
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	TokenBoundCidrs pulumi.StringArrayInput
	// Generated Token's Explicit Maximum TTL in seconds
	TokenExplicitMaxTtl pulumi.IntPtrInput
	// The maximum lifetime of the generated token
	TokenMaxTtl pulumi.IntPtrInput
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy pulumi.BoolPtrInput
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses pulumi.IntPtrInput
	// Generated Token's Period
	TokenPeriod pulumi.IntPtrInput
	// Generated Token's Policies
	TokenPolicies pulumi.StringArrayInput
	// The initial ttl of the token to generate in seconds
	TokenTtl pulumi.IntPtrInput
	// The type of token to generate, service or batch
	TokenType pulumi.StringPtrInput
}

func (OciAuthBackendRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*ociAuthBackendRoleState)(nil)).Elem()
}

type ociAuthBackendRoleArgs struct {
	// Unique name of the auth backend to configure.
	Backend *string `pulumi:"backend"`
	// The name of the role.
	Name *string `pulumi:"name"`
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// The list of Group or Dynamic Group OCIDs that can take this role.
	OcidLists []string `pulumi:"ocidLists"`
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	TokenBoundCidrs []string `pulumi:"tokenBoundCidrs"`
	// Generated Token's Explicit Maximum TTL in seconds
	TokenExplicitMaxTtl *int `pulumi:"tokenExplicitMaxTtl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int `pulumi:"tokenMaxTtl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `pulumi:"tokenNoDefaultPolicy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int `pulumi:"tokenNumUses"`
	// Generated Token's Period
	TokenPeriod *int `pulumi:"tokenPeriod"`
	// Generated Token's Policies
	TokenPolicies []string `pulumi:"tokenPolicies"`
	// The initial ttl of the token to generate in seconds
	TokenTtl *int `pulumi:"tokenTtl"`
	// The type of token to generate, service or batch
	TokenType *string `pulumi:"tokenType"`
}

// The set of arguments for constructing a OciAuthBackendRole resource.
type OciAuthBackendRoleArgs struct {
	// Unique name of the auth backend to configure.
	Backend pulumi.StringPtrInput
	// The name of the role.
	Name pulumi.StringPtrInput
	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput
	// The list of Group or Dynamic Group OCIDs that can take this role.
	OcidLists pulumi.StringArrayInput
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	TokenBoundCidrs pulumi.StringArrayInput
	// Generated Token's Explicit Maximum TTL in seconds
	TokenExplicitMaxTtl pulumi.IntPtrInput
	// The maximum lifetime of the generated token
	TokenMaxTtl pulumi.IntPtrInput
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy pulumi.BoolPtrInput
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses pulumi.IntPtrInput
	// Generated Token's Period
	TokenPeriod pulumi.IntPtrInput
	// Generated Token's Policies
	TokenPolicies pulumi.StringArrayInput
	// The initial ttl of the token to generate in seconds
	TokenTtl pulumi.IntPtrInput
	// The type of token to generate, service or batch
	TokenType pulumi.StringPtrInput
}

func (OciAuthBackendRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ociAuthBackendRoleArgs)(nil)).Elem()
}

type OciAuthBackendRoleInput interface {
	pulumi.Input

	ToOciAuthBackendRoleOutput() OciAuthBackendRoleOutput
	ToOciAuthBackendRoleOutputWithContext(ctx context.Context) OciAuthBackendRoleOutput
}

func (*OciAuthBackendRole) ElementType() reflect.Type {
	return reflect.TypeOf((**OciAuthBackendRole)(nil)).Elem()
}

func (i *OciAuthBackendRole) ToOciAuthBackendRoleOutput() OciAuthBackendRoleOutput {
	return i.ToOciAuthBackendRoleOutputWithContext(context.Background())
}

func (i *OciAuthBackendRole) ToOciAuthBackendRoleOutputWithContext(ctx context.Context) OciAuthBackendRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciAuthBackendRoleOutput)
}

// OciAuthBackendRoleArrayInput is an input type that accepts OciAuthBackendRoleArray and OciAuthBackendRoleArrayOutput values.
// You can construct a concrete instance of `OciAuthBackendRoleArrayInput` via:
//
//	OciAuthBackendRoleArray{ OciAuthBackendRoleArgs{...} }
type OciAuthBackendRoleArrayInput interface {
	pulumi.Input

	ToOciAuthBackendRoleArrayOutput() OciAuthBackendRoleArrayOutput
	ToOciAuthBackendRoleArrayOutputWithContext(context.Context) OciAuthBackendRoleArrayOutput
}

type OciAuthBackendRoleArray []OciAuthBackendRoleInput

func (OciAuthBackendRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OciAuthBackendRole)(nil)).Elem()
}

func (i OciAuthBackendRoleArray) ToOciAuthBackendRoleArrayOutput() OciAuthBackendRoleArrayOutput {
	return i.ToOciAuthBackendRoleArrayOutputWithContext(context.Background())
}

func (i OciAuthBackendRoleArray) ToOciAuthBackendRoleArrayOutputWithContext(ctx context.Context) OciAuthBackendRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciAuthBackendRoleArrayOutput)
}

// OciAuthBackendRoleMapInput is an input type that accepts OciAuthBackendRoleMap and OciAuthBackendRoleMapOutput values.
// You can construct a concrete instance of `OciAuthBackendRoleMapInput` via:
//
//	OciAuthBackendRoleMap{ "key": OciAuthBackendRoleArgs{...} }
type OciAuthBackendRoleMapInput interface {
	pulumi.Input

	ToOciAuthBackendRoleMapOutput() OciAuthBackendRoleMapOutput
	ToOciAuthBackendRoleMapOutputWithContext(context.Context) OciAuthBackendRoleMapOutput
}

type OciAuthBackendRoleMap map[string]OciAuthBackendRoleInput

func (OciAuthBackendRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OciAuthBackendRole)(nil)).Elem()
}

func (i OciAuthBackendRoleMap) ToOciAuthBackendRoleMapOutput() OciAuthBackendRoleMapOutput {
	return i.ToOciAuthBackendRoleMapOutputWithContext(context.Background())
}

func (i OciAuthBackendRoleMap) ToOciAuthBackendRoleMapOutputWithContext(ctx context.Context) OciAuthBackendRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciAuthBackendRoleMapOutput)
}

type OciAuthBackendRoleOutput struct{ *pulumi.OutputState }

func (OciAuthBackendRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OciAuthBackendRole)(nil)).Elem()
}

func (o OciAuthBackendRoleOutput) ToOciAuthBackendRoleOutput() OciAuthBackendRoleOutput {
	return o
}

func (o OciAuthBackendRoleOutput) ToOciAuthBackendRoleOutputWithContext(ctx context.Context) OciAuthBackendRoleOutput {
	return o
}

// Unique name of the auth backend to configure.
func (o OciAuthBackendRoleOutput) Backend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.StringPtrOutput { return v.Backend }).(pulumi.StringPtrOutput)
}

// The name of the role.
func (o OciAuthBackendRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The namespace to provision the resource in.
// The value should not contain leading or trailing forward slashes.
// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
// *Available only for Vault Enterprise*.
func (o OciAuthBackendRoleOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The list of Group or Dynamic Group OCIDs that can take this role.
func (o OciAuthBackendRoleOutput) OcidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.StringArrayOutput { return v.OcidLists }).(pulumi.StringArrayOutput)
}

// Specifies the blocks of IP addresses which are allowed to use the generated token
func (o OciAuthBackendRoleOutput) TokenBoundCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.StringArrayOutput { return v.TokenBoundCidrs }).(pulumi.StringArrayOutput)
}

// Generated Token's Explicit Maximum TTL in seconds
func (o OciAuthBackendRoleOutput) TokenExplicitMaxTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.IntPtrOutput { return v.TokenExplicitMaxTtl }).(pulumi.IntPtrOutput)
}

// The maximum lifetime of the generated token
func (o OciAuthBackendRoleOutput) TokenMaxTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.IntPtrOutput { return v.TokenMaxTtl }).(pulumi.IntPtrOutput)
}

// If true, the 'default' policy will not automatically be added to generated tokens
func (o OciAuthBackendRoleOutput) TokenNoDefaultPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.BoolPtrOutput { return v.TokenNoDefaultPolicy }).(pulumi.BoolPtrOutput)
}

// The maximum number of times a token may be used, a value of zero means unlimited
func (o OciAuthBackendRoleOutput) TokenNumUses() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.IntPtrOutput { return v.TokenNumUses }).(pulumi.IntPtrOutput)
}

// Generated Token's Period
func (o OciAuthBackendRoleOutput) TokenPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.IntPtrOutput { return v.TokenPeriod }).(pulumi.IntPtrOutput)
}

// Generated Token's Policies
func (o OciAuthBackendRoleOutput) TokenPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.StringArrayOutput { return v.TokenPolicies }).(pulumi.StringArrayOutput)
}

// The initial ttl of the token to generate in seconds
func (o OciAuthBackendRoleOutput) TokenTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.IntPtrOutput { return v.TokenTtl }).(pulumi.IntPtrOutput)
}

// The type of token to generate, service or batch
func (o OciAuthBackendRoleOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OciAuthBackendRole) pulumi.StringPtrOutput { return v.TokenType }).(pulumi.StringPtrOutput)
}

type OciAuthBackendRoleArrayOutput struct{ *pulumi.OutputState }

func (OciAuthBackendRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OciAuthBackendRole)(nil)).Elem()
}

func (o OciAuthBackendRoleArrayOutput) ToOciAuthBackendRoleArrayOutput() OciAuthBackendRoleArrayOutput {
	return o
}

func (o OciAuthBackendRoleArrayOutput) ToOciAuthBackendRoleArrayOutputWithContext(ctx context.Context) OciAuthBackendRoleArrayOutput {
	return o
}

func (o OciAuthBackendRoleArrayOutput) Index(i pulumi.IntInput) OciAuthBackendRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OciAuthBackendRole {
		return vs[0].([]*OciAuthBackendRole)[vs[1].(int)]
	}).(OciAuthBackendRoleOutput)
}

type OciAuthBackendRoleMapOutput struct{ *pulumi.OutputState }

func (OciAuthBackendRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OciAuthBackendRole)(nil)).Elem()
}

func (o OciAuthBackendRoleMapOutput) ToOciAuthBackendRoleMapOutput() OciAuthBackendRoleMapOutput {
	return o
}

func (o OciAuthBackendRoleMapOutput) ToOciAuthBackendRoleMapOutputWithContext(ctx context.Context) OciAuthBackendRoleMapOutput {
	return o
}

func (o OciAuthBackendRoleMapOutput) MapIndex(k pulumi.StringInput) OciAuthBackendRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OciAuthBackendRole {
		return vs[0].(map[string]*OciAuthBackendRole)[vs[1].(string)]
	}).(OciAuthBackendRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OciAuthBackendRoleInput)(nil)).Elem(), &OciAuthBackendRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciAuthBackendRoleArrayInput)(nil)).Elem(), OciAuthBackendRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciAuthBackendRoleMapInput)(nil)).Elem(), OciAuthBackendRoleMap{})
	pulumi.RegisterOutputType(OciAuthBackendRoleOutput{})
	pulumi.RegisterOutputType(OciAuthBackendRoleArrayOutput{})
	pulumi.RegisterOutputType(OciAuthBackendRoleMapOutput{})
}
