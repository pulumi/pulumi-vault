// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages policy mappings for Github Teams authenticated via Github. See the [Vault
// documentation](https://www.vaultproject.io/docs/auth/github/) for more
// information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vault/sdk/v2/go/vault/github"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := github.NewAuthBackend(ctx, "example", &github.AuthBackendArgs{
// 			Organization: pulumi.String("myorg"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = github.NewTeam(ctx, "tfDevs", &github.TeamArgs{
// 			Backend: example.ID(),
// 			Team:    pulumi.String("terraform-developers"),
// 			Policies: pulumi.StringArray{
// 				pulumi.String("developer"),
// 				pulumi.String("read-only"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Team struct {
	pulumi.CustomResourceState

	// Path where the github auth backend is mounted. Defaults to `github`
	// if not specified.
	Backend pulumi.StringPtrOutput `pulumi:"backend"`
	// An array of strings specifying the policies to be set on tokens
	// issued using this role.
	Policies pulumi.StringArrayOutput `pulumi:"policies"`
	// GitHub team name in "slugified" format.
	Team pulumi.StringOutput `pulumi:"team"`
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenBoundCidrs pulumi.StringArrayOutput `pulumi:"tokenBoundCidrs"`
	// Generated Token's Explicit Maximum TTL in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenExplicitMaxTtl pulumi.IntPtrOutput `pulumi:"tokenExplicitMaxTtl"`
	// The maximum lifetime of the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenMaxTtl pulumi.IntPtrOutput `pulumi:"tokenMaxTtl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNoDefaultPolicy pulumi.BoolPtrOutput `pulumi:"tokenNoDefaultPolicy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNumUses pulumi.IntPtrOutput `pulumi:"tokenNumUses"`
	// Generated Token's Period
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPeriod pulumi.IntPtrOutput `pulumi:"tokenPeriod"`
	// Generated Token's Policies
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPolicies pulumi.StringArrayOutput `pulumi:"tokenPolicies"`
	// The initial ttl of the token to generate in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenTtl pulumi.IntPtrOutput `pulumi:"tokenTtl"`
	// The type of token to generate, service or batch
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenType pulumi.StringPtrOutput `pulumi:"tokenType"`
}

// NewTeam registers a new resource with the given unique name, arguments, and options.
func NewTeam(ctx *pulumi.Context,
	name string, args *TeamArgs, opts ...pulumi.ResourceOption) (*Team, error) {
	if args == nil || args.Team == nil {
		return nil, errors.New("missing required argument 'Team'")
	}
	if args == nil {
		args = &TeamArgs{}
	}
	var resource Team
	err := ctx.RegisterResource("vault:github/team:Team", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTeam gets an existing Team resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTeam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TeamState, opts ...pulumi.ResourceOption) (*Team, error) {
	var resource Team
	err := ctx.ReadResource("vault:github/team:Team", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Team resources.
type teamState struct {
	// Path where the github auth backend is mounted. Defaults to `github`
	// if not specified.
	Backend *string `pulumi:"backend"`
	// An array of strings specifying the policies to be set on tokens
	// issued using this role.
	Policies []string `pulumi:"policies"`
	// GitHub team name in "slugified" format.
	Team *string `pulumi:"team"`
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenBoundCidrs []string `pulumi:"tokenBoundCidrs"`
	// Generated Token's Explicit Maximum TTL in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenExplicitMaxTtl *int `pulumi:"tokenExplicitMaxTtl"`
	// The maximum lifetime of the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenMaxTtl *int `pulumi:"tokenMaxTtl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNoDefaultPolicy *bool `pulumi:"tokenNoDefaultPolicy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNumUses *int `pulumi:"tokenNumUses"`
	// Generated Token's Period
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPeriod *int `pulumi:"tokenPeriod"`
	// Generated Token's Policies
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPolicies []string `pulumi:"tokenPolicies"`
	// The initial ttl of the token to generate in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenTtl *int `pulumi:"tokenTtl"`
	// The type of token to generate, service or batch
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenType *string `pulumi:"tokenType"`
}

type TeamState struct {
	// Path where the github auth backend is mounted. Defaults to `github`
	// if not specified.
	Backend pulumi.StringPtrInput
	// An array of strings specifying the policies to be set on tokens
	// issued using this role.
	Policies pulumi.StringArrayInput
	// GitHub team name in "slugified" format.
	Team pulumi.StringPtrInput
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenBoundCidrs pulumi.StringArrayInput
	// Generated Token's Explicit Maximum TTL in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenExplicitMaxTtl pulumi.IntPtrInput
	// The maximum lifetime of the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenMaxTtl pulumi.IntPtrInput
	// If true, the 'default' policy will not automatically be added to generated tokens
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNoDefaultPolicy pulumi.BoolPtrInput
	// The maximum number of times a token may be used, a value of zero means unlimited
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNumUses pulumi.IntPtrInput
	// Generated Token's Period
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPeriod pulumi.IntPtrInput
	// Generated Token's Policies
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPolicies pulumi.StringArrayInput
	// The initial ttl of the token to generate in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenTtl pulumi.IntPtrInput
	// The type of token to generate, service or batch
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenType pulumi.StringPtrInput
}

func (TeamState) ElementType() reflect.Type {
	return reflect.TypeOf((*teamState)(nil)).Elem()
}

type teamArgs struct {
	// Path where the github auth backend is mounted. Defaults to `github`
	// if not specified.
	Backend *string `pulumi:"backend"`
	// An array of strings specifying the policies to be set on tokens
	// issued using this role.
	Policies []string `pulumi:"policies"`
	// GitHub team name in "slugified" format.
	Team string `pulumi:"team"`
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenBoundCidrs []string `pulumi:"tokenBoundCidrs"`
	// Generated Token's Explicit Maximum TTL in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenExplicitMaxTtl *int `pulumi:"tokenExplicitMaxTtl"`
	// The maximum lifetime of the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenMaxTtl *int `pulumi:"tokenMaxTtl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNoDefaultPolicy *bool `pulumi:"tokenNoDefaultPolicy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNumUses *int `pulumi:"tokenNumUses"`
	// Generated Token's Period
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPeriod *int `pulumi:"tokenPeriod"`
	// Generated Token's Policies
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPolicies []string `pulumi:"tokenPolicies"`
	// The initial ttl of the token to generate in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenTtl *int `pulumi:"tokenTtl"`
	// The type of token to generate, service or batch
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenType *string `pulumi:"tokenType"`
}

// The set of arguments for constructing a Team resource.
type TeamArgs struct {
	// Path where the github auth backend is mounted. Defaults to `github`
	// if not specified.
	Backend pulumi.StringPtrInput
	// An array of strings specifying the policies to be set on tokens
	// issued using this role.
	Policies pulumi.StringArrayInput
	// GitHub team name in "slugified" format.
	Team pulumi.StringInput
	// Specifies the blocks of IP addresses which are allowed to use the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenBoundCidrs pulumi.StringArrayInput
	// Generated Token's Explicit Maximum TTL in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenExplicitMaxTtl pulumi.IntPtrInput
	// The maximum lifetime of the generated token
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenMaxTtl pulumi.IntPtrInput
	// If true, the 'default' policy will not automatically be added to generated tokens
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNoDefaultPolicy pulumi.BoolPtrInput
	// The maximum number of times a token may be used, a value of zero means unlimited
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenNumUses pulumi.IntPtrInput
	// Generated Token's Period
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPeriod pulumi.IntPtrInput
	// Generated Token's Policies
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenPolicies pulumi.StringArrayInput
	// The initial ttl of the token to generate in seconds
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenTtl pulumi.IntPtrInput
	// The type of token to generate, service or batch
	//
	// Deprecated: This parameter should be moved to the Github Auth backend config block. It does nothing in a user/team block.
	TokenType pulumi.StringPtrInput
}

func (TeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*teamArgs)(nil)).Elem()
}
