// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source supports the "/transform/encode/{role_name}" Vault endpoint.
//
// It encodes the provided value using a named role.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault"
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/transform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			transform, err := vault.NewMount(ctx, "transform", &vault.MountArgs{
//				Path: pulumi.String("transform"),
//				Type: pulumi.String("transform"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = transform.NewTransformation(ctx, "ccn-fpe", &transform.TransformationArgs{
//				Path:        transform.Path,
//				Type:        pulumi.String("fpe"),
//				Template:    pulumi.String("builtin/creditcardnumber"),
//				TweakSource: pulumi.String("internal"),
//				AllowedRoles: pulumi.StringArray{
//					pulumi.String("payments"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			payments, err := transform.NewRole(ctx, "payments", &transform.RoleArgs{
//				Path: ccn_fpe.Path,
//				Transformations: pulumi.StringArray{
//					pulumi.String("ccn-fpe"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = transform.GetEncodeOutput(ctx, transform.GetEncodeOutputArgs{
//				Path:     payments.Path,
//				RoleName: pulumi.String("payments"),
//				BatchInputs: pulumi.MapArray{
//					pulumi.Map{
//						"value": pulumi.Any("1111-2222-3333-4444"),
//					},
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetEncode(ctx *pulumi.Context, args *GetEncodeArgs, opts ...pulumi.InvokeOption) (*GetEncodeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEncodeResult
	err := ctx.Invoke("vault:transform/getEncode:getEncode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEncode.
type GetEncodeArgs struct {
	// Specifies a list of items to be encoded in a single batch. If this parameter is set, the parameters 'value', 'transformation' and 'tweak' will be ignored. Each batch item within the list can specify these parameters instead.
	BatchInputs []map[string]interface{} `pulumi:"batchInputs"`
	// The result of encoding a batch.
	BatchResults []map[string]interface{} `pulumi:"batchResults"`
	// The result of encoding a value.
	EncodedValue *string `pulumi:"encodedValue"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
	// Path to where the back-end is mounted within Vault.
	Path string `pulumi:"path"`
	// The name of the role.
	RoleName string `pulumi:"roleName"`
	// The transformation to perform. If no value is provided and the role contains a single transformation, this value will be inferred from the role.
	Transformation *string `pulumi:"transformation"`
	// The tweak value to use. Only applicable for FPE transformations
	Tweak *string `pulumi:"tweak"`
	// The value in which to encode.
	Value *string `pulumi:"value"`
}

// A collection of values returned by getEncode.
type GetEncodeResult struct {
	BatchInputs  []map[string]interface{} `pulumi:"batchInputs"`
	BatchResults []map[string]interface{} `pulumi:"batchResults"`
	EncodedValue string                   `pulumi:"encodedValue"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	Namespace      *string `pulumi:"namespace"`
	Path           string  `pulumi:"path"`
	RoleName       string  `pulumi:"roleName"`
	Transformation *string `pulumi:"transformation"`
	Tweak          *string `pulumi:"tweak"`
	Value          *string `pulumi:"value"`
}

func GetEncodeOutput(ctx *pulumi.Context, args GetEncodeOutputArgs, opts ...pulumi.InvokeOption) GetEncodeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEncodeResult, error) {
			args := v.(GetEncodeArgs)
			r, err := GetEncode(ctx, &args, opts...)
			var s GetEncodeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEncodeResultOutput)
}

// A collection of arguments for invoking getEncode.
type GetEncodeOutputArgs struct {
	// Specifies a list of items to be encoded in a single batch. If this parameter is set, the parameters 'value', 'transformation' and 'tweak' will be ignored. Each batch item within the list can specify these parameters instead.
	BatchInputs pulumi.MapArrayInput `pulumi:"batchInputs"`
	// The result of encoding a batch.
	BatchResults pulumi.MapArrayInput `pulumi:"batchResults"`
	// The result of encoding a value.
	EncodedValue pulumi.StringPtrInput `pulumi:"encodedValue"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path to where the back-end is mounted within Vault.
	Path pulumi.StringInput `pulumi:"path"`
	// The name of the role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
	// The transformation to perform. If no value is provided and the role contains a single transformation, this value will be inferred from the role.
	Transformation pulumi.StringPtrInput `pulumi:"transformation"`
	// The tweak value to use. Only applicable for FPE transformations
	Tweak pulumi.StringPtrInput `pulumi:"tweak"`
	// The value in which to encode.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetEncodeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEncodeArgs)(nil)).Elem()
}

// A collection of values returned by getEncode.
type GetEncodeResultOutput struct{ *pulumi.OutputState }

func (GetEncodeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEncodeResult)(nil)).Elem()
}

func (o GetEncodeResultOutput) ToGetEncodeResultOutput() GetEncodeResultOutput {
	return o
}

func (o GetEncodeResultOutput) ToGetEncodeResultOutputWithContext(ctx context.Context) GetEncodeResultOutput {
	return o
}

func (o GetEncodeResultOutput) BatchInputs() pulumi.MapArrayOutput {
	return o.ApplyT(func(v GetEncodeResult) []map[string]interface{} { return v.BatchInputs }).(pulumi.MapArrayOutput)
}

func (o GetEncodeResultOutput) BatchResults() pulumi.MapArrayOutput {
	return o.ApplyT(func(v GetEncodeResult) []map[string]interface{} { return v.BatchResults }).(pulumi.MapArrayOutput)
}

func (o GetEncodeResultOutput) EncodedValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetEncodeResult) string { return v.EncodedValue }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEncodeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEncodeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEncodeResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEncodeResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetEncodeResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetEncodeResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetEncodeResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEncodeResult) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o GetEncodeResultOutput) Transformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEncodeResult) *string { return v.Transformation }).(pulumi.StringPtrOutput)
}

func (o GetEncodeResultOutput) Tweak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEncodeResult) *string { return v.Tweak }).(pulumi.StringPtrOutput)
}

func (o GetEncodeResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEncodeResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEncodeResultOutput{})
}
