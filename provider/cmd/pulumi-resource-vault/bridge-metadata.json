{
    "auto-aliasing": {
        "resources": {
            "vault_ad_secret_backend": {
                "current": "vault:ad/secretBackend:SecretBackend",
                "majorVersion": 5
            },
            "vault_ad_secret_library": {
                "current": "vault:ad/secretLibrary:SecretLibrary",
                "majorVersion": 5,
                "fields": {
                    "service_account_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ad_secret_role": {
                "current": "vault:ad/secretRole:SecretRole",
                "majorVersion": 5
            },
            "vault_alicloud_auth_backend_role": {
                "current": "vault:alicloud/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_approle_auth_backend_login": {
                "current": "vault:appRole/authBackendLogin:AuthBackendLogin",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_approle_auth_backend_role": {
                "current": "vault:appRole/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "secret_id_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_approle_auth_backend_role_secret_id": {
                "current": "vault:appRole/authBackendRoleSecretId:AuthBackendRoleSecretId",
                "majorVersion": 5,
                "fields": {
                    "cidr_list": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_audit": {
                "current": "vault:index/audit:Audit",
                "majorVersion": 5
            },
            "vault_audit_request_header": {
                "current": "vault:index/auditRequestHeader:AuditRequestHeader",
                "majorVersion": 5
            },
            "vault_auth_backend": {
                "current": "vault:index/authBackend:AuthBackend",
                "majorVersion": 5,
                "fields": {
                    "tune": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_response_headers": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_request_keys": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_response_keys": {
                                    "maxItemsOne": false
                                },
                                "passthrough_request_headers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_aws_auth_backend_cert": {
                "current": "vault:aws/authBackendCert:AuthBackendCert",
                "majorVersion": 5
            },
            "vault_aws_auth_backend_client": {
                "current": "vault:aws/authBackendClient:AuthBackendClient",
                "majorVersion": 5
            },
            "vault_aws_auth_backend_config_identity": {
                "current": "vault:aws/authBackendConfigIdentity:AuthBackendConfigIdentity",
                "majorVersion": 5,
                "fields": {
                    "ec2_metadata": {
                        "maxItemsOne": false
                    },
                    "iam_metadata": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_aws_auth_backend_identity_whitelist": {
                "current": "vault:aws/authBackendIdentityWhitelist:AuthBackendIdentityWhitelist",
                "majorVersion": 5
            },
            "vault_aws_auth_backend_login": {
                "current": "vault:aws/authBackendLogin:AuthBackendLogin",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_aws_auth_backend_role": {
                "current": "vault:aws/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "bound_account_ids": {
                        "maxItemsOne": false
                    },
                    "bound_ami_ids": {
                        "maxItemsOne": false
                    },
                    "bound_ec2_instance_ids": {
                        "maxItemsOne": false
                    },
                    "bound_iam_instance_profile_arns": {
                        "maxItemsOne": false
                    },
                    "bound_iam_principal_arns": {
                        "maxItemsOne": false
                    },
                    "bound_iam_role_arns": {
                        "maxItemsOne": false
                    },
                    "bound_regions": {
                        "maxItemsOne": false
                    },
                    "bound_subnet_ids": {
                        "maxItemsOne": false
                    },
                    "bound_vpc_ids": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_aws_auth_backend_role_tag": {
                "current": "vault:aws/authBackendRoleTag:AuthBackendRoleTag",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_aws_auth_backend_roletag_blacklist": {
                "current": "vault:aws/authBackendRoletagBlacklist:AuthBackendRoletagBlacklist",
                "majorVersion": 5
            },
            "vault_aws_auth_backend_sts_role": {
                "current": "vault:aws/authBackendStsRole:AuthBackendStsRole",
                "majorVersion": 5
            },
            "vault_aws_secret_backend": {
                "current": "vault:aws/secretBackend:SecretBackend",
                "majorVersion": 5
            },
            "vault_aws_secret_backend_role": {
                "current": "vault:aws/secretBackendRole:SecretBackendRole",
                "majorVersion": 5,
                "fields": {
                    "iam_groups": {
                        "maxItemsOne": false
                    },
                    "policy_arns": {
                        "maxItemsOne": false
                    },
                    "role_arns": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_aws_secret_backend_static_role": {
                "current": "vault:aws/secretBackendStaticRole:SecretBackendStaticRole",
                "majorVersion": 5
            },
            "vault_azure_auth_backend_config": {
                "current": "vault:azure/authBackendConfig:AuthBackendConfig",
                "majorVersion": 5
            },
            "vault_azure_auth_backend_role": {
                "current": "vault:azure/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "bound_group_ids": {
                        "maxItemsOne": false
                    },
                    "bound_locations": {
                        "maxItemsOne": false
                    },
                    "bound_resource_groups": {
                        "maxItemsOne": false
                    },
                    "bound_scale_sets": {
                        "maxItemsOne": false
                    },
                    "bound_service_principal_ids": {
                        "maxItemsOne": false
                    },
                    "bound_subscription_ids": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_azure_secret_backend": {
                "current": "vault:azure/backend:Backend",
                "majorVersion": 5
            },
            "vault_azure_secret_backend_role": {
                "current": "vault:azure/backendRole:BackendRole",
                "majorVersion": 5,
                "fields": {
                    "azure_groups": {
                        "maxItemsOne": false
                    },
                    "azure_roles": {
                        "maxItemsOne": false
                    },
                    "tags": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_cert_auth_backend_role": {
                "current": "vault:index/certAuthBackendRole:CertAuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "allowed_common_names": {
                        "maxItemsOne": false
                    },
                    "allowed_dns_sans": {
                        "maxItemsOne": false
                    },
                    "allowed_email_sans": {
                        "maxItemsOne": false
                    },
                    "allowed_names": {
                        "maxItemsOne": false
                    },
                    "allowed_organization_units": {
                        "maxItemsOne": false
                    },
                    "allowed_organizational_units": {
                        "maxItemsOne": false
                    },
                    "allowed_uri_sans": {
                        "maxItemsOne": false
                    },
                    "ocsp_servers_override": {
                        "maxItemsOne": false
                    },
                    "required_extensions": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_consul_secret_backend": {
                "current": "vault:consul/secretBackend:SecretBackend",
                "majorVersion": 5
            },
            "vault_consul_secret_backend_role": {
                "current": "vault:consul/secretBackendRole:SecretBackendRole",
                "majorVersion": 5,
                "fields": {
                    "consul_policies": {
                        "maxItemsOne": false
                    },
                    "consul_roles": {
                        "maxItemsOne": false
                    },
                    "node_identities": {
                        "maxItemsOne": false
                    },
                    "policies": {
                        "maxItemsOne": false
                    },
                    "service_identities": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_database_secret_backend_connection": {
                "current": "vault:database/secretBackendConnection:SecretBackendConnection",
                "majorVersion": 5,
                "fields": {
                    "allowed_roles": {
                        "maxItemsOne": false
                    },
                    "cassandra": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "hosts": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "couchbase": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "hosts": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "elasticsearch": {
                        "maxItemsOne": true
                    },
                    "hana": {
                        "maxItemsOne": true
                    },
                    "influxdb": {
                        "maxItemsOne": true
                    },
                    "mongodb": {
                        "maxItemsOne": true
                    },
                    "mongodbatlas": {
                        "maxItemsOne": true
                    },
                    "mssql": {
                        "maxItemsOne": true
                    },
                    "mysql": {
                        "maxItemsOne": true
                    },
                    "mysql_aurora": {
                        "maxItemsOne": true
                    },
                    "mysql_legacy": {
                        "maxItemsOne": true
                    },
                    "mysql_rds": {
                        "maxItemsOne": true
                    },
                    "oracle": {
                        "maxItemsOne": true
                    },
                    "postgresql": {
                        "maxItemsOne": true
                    },
                    "redis": {
                        "maxItemsOne": true
                    },
                    "redis_elasticache": {
                        "maxItemsOne": true
                    },
                    "redshift": {
                        "maxItemsOne": true
                    },
                    "root_rotation_statements": {
                        "maxItemsOne": false
                    },
                    "snowflake": {
                        "maxItemsOne": true
                    }
                }
            },
            "vault_database_secret_backend_role": {
                "current": "vault:database/secretBackendRole:SecretBackendRole",
                "majorVersion": 5,
                "fields": {
                    "creation_statements": {
                        "maxItemsOne": false
                    },
                    "renew_statements": {
                        "maxItemsOne": false
                    },
                    "revocation_statements": {
                        "maxItemsOne": false
                    },
                    "rollback_statements": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_database_secret_backend_static_role": {
                "current": "vault:database/secretBackendStaticRole:SecretBackendStaticRole",
                "majorVersion": 5,
                "fields": {
                    "rotation_statements": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_database_secrets_mount": {
                "current": "vault:database/secretsMount:SecretsMount",
                "majorVersion": 5,
                "fields": {
                    "allowed_managed_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_request_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_response_keys": {
                        "maxItemsOne": false
                    },
                    "cassandra": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "hosts": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "couchbase": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "hosts": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "elasticsearch": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "hana": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "influxdb": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mongodb": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mongodbatlas": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mssql": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mysql": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mysql_aurora": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mysql_legacy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mysql_rds": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "oracle": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "postgresql": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "redis": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "redis_elasticache": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "redshift": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "snowflake": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_roles": {
                                    "maxItemsOne": false
                                },
                                "root_rotation_statements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_egp_policy": {
                "current": "vault:index/egpPolicy:EgpPolicy",
                "majorVersion": 5,
                "fields": {
                    "paths": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_gcp_auth_backend": {
                "current": "vault:gcp/authBackend:AuthBackend",
                "majorVersion": 5,
                "fields": {
                    "custom_endpoint": {
                        "maxItemsOne": true
                    },
                    "tune": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_response_headers": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_request_keys": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_response_keys": {
                                    "maxItemsOne": false
                                },
                                "passthrough_request_headers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_gcp_auth_backend_role": {
                "current": "vault:gcp/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "bound_instance_groups": {
                        "maxItemsOne": false
                    },
                    "bound_labels": {
                        "maxItemsOne": false
                    },
                    "bound_projects": {
                        "maxItemsOne": false
                    },
                    "bound_regions": {
                        "maxItemsOne": false
                    },
                    "bound_service_accounts": {
                        "maxItemsOne": false
                    },
                    "bound_zones": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_gcp_secret_backend": {
                "current": "vault:gcp/secretBackend:SecretBackend",
                "majorVersion": 5
            },
            "vault_gcp_secret_impersonated_account": {
                "current": "vault:gcp/secretImpersonatedAccount:SecretImpersonatedAccount",
                "majorVersion": 5,
                "fields": {
                    "token_scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_gcp_secret_roleset": {
                "current": "vault:gcp/secretRoleset:SecretRoleset",
                "majorVersion": 5,
                "fields": {
                    "binding": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "roles": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "token_scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_gcp_secret_static_account": {
                "current": "vault:gcp/secretStaticAccount:SecretStaticAccount",
                "majorVersion": 5,
                "fields": {
                    "binding": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "roles": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "token_scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_generic_endpoint": {
                "current": "vault:generic/endpoint:Endpoint",
                "majorVersion": 5,
                "fields": {
                    "write_fields": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_generic_secret": {
                "current": "vault:generic/secret:Secret",
                "majorVersion": 5
            },
            "vault_github_auth_backend": {
                "current": "vault:github/authBackend:AuthBackend",
                "majorVersion": 5,
                "fields": {
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    },
                    "tune": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_response_headers": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_request_keys": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_response_keys": {
                                    "maxItemsOne": false
                                },
                                "passthrough_request_headers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_github_team": {
                "current": "vault:github/team:Team",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_github_user": {
                "current": "vault:github/user:User",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_entity": {
                "current": "vault:identity/entity:Entity",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_entity_alias": {
                "current": "vault:identity/entityAlias:EntityAlias",
                "majorVersion": 5
            },
            "vault_identity_entity_policies": {
                "current": "vault:identity/entityPolicies:EntityPolicies",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_group": {
                "current": "vault:identity/group:Group",
                "majorVersion": 5,
                "fields": {
                    "member_entity_ids": {
                        "maxItemsOne": false
                    },
                    "member_group_ids": {
                        "maxItemsOne": false
                    },
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_group_alias": {
                "current": "vault:identity/groupAlias:GroupAlias",
                "majorVersion": 5
            },
            "vault_identity_group_member_entity_ids": {
                "current": "vault:identity/groupMemberEntityIds:GroupMemberEntityIds",
                "majorVersion": 5,
                "fields": {
                    "member_entity_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_group_member_group_ids": {
                "current": "vault:identity/groupMemberGroupIds:GroupMemberGroupIds",
                "majorVersion": 5,
                "fields": {
                    "member_group_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_group_policies": {
                "current": "vault:identity/groupPolicies:GroupPolicies",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_mfa_duo": {
                "current": "vault:identity/mfaDuo:MfaDuo",
                "majorVersion": 5
            },
            "vault_identity_mfa_login_enforcement": {
                "current": "vault:identity/mfaLoginEnforcement:MfaLoginEnforcement",
                "majorVersion": 5,
                "fields": {
                    "auth_method_accessors": {
                        "maxItemsOne": false
                    },
                    "auth_method_types": {
                        "maxItemsOne": false
                    },
                    "identity_entity_ids": {
                        "maxItemsOne": false
                    },
                    "identity_group_ids": {
                        "maxItemsOne": false
                    },
                    "mfa_method_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_mfa_okta": {
                "current": "vault:identity/mfaOkta:MfaOkta",
                "majorVersion": 5
            },
            "vault_identity_mfa_pingid": {
                "current": "vault:identity/mfaPingid:MfaPingid",
                "majorVersion": 5
            },
            "vault_identity_mfa_totp": {
                "current": "vault:identity/mfaTotp:MfaTotp",
                "majorVersion": 5
            },
            "vault_identity_oidc": {
                "current": "vault:identity/oidc:Oidc",
                "majorVersion": 5
            },
            "vault_identity_oidc_assignment": {
                "current": "vault:identity/oidcAssignment:OidcAssignment",
                "majorVersion": 5,
                "fields": {
                    "entity_ids": {
                        "maxItemsOne": false
                    },
                    "group_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_oidc_client": {
                "current": "vault:identity/oidcClient:OidcClient",
                "majorVersion": 5,
                "fields": {
                    "assignments": {
                        "maxItemsOne": false
                    },
                    "redirect_uris": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_oidc_key": {
                "current": "vault:identity/oidcKey:OidcKey",
                "majorVersion": 5,
                "fields": {
                    "allowed_client_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_oidc_key_allowed_client_id": {
                "current": "vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID",
                "majorVersion": 5
            },
            "vault_identity_oidc_provider": {
                "current": "vault:identity/oidcProvider:OidcProvider",
                "majorVersion": 5,
                "fields": {
                    "allowed_client_ids": {
                        "maxItemsOne": false
                    },
                    "scopes_supported": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_oidc_role": {
                "current": "vault:identity/oidcRole:OidcRole",
                "majorVersion": 5
            },
            "vault_identity_oidc_scope": {
                "current": "vault:identity/oidcScope:OidcScope",
                "majorVersion": 5
            },
            "vault_jwt_auth_backend": {
                "current": "vault:jwt/authBackend:AuthBackend",
                "majorVersion": 5,
                "fields": {
                    "jwt_supported_algs": {
                        "maxItemsOne": false
                    },
                    "jwt_validation_pubkeys": {
                        "maxItemsOne": false
                    },
                    "oidc_response_types": {
                        "maxItemsOne": false
                    },
                    "tune": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_response_headers": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_request_keys": {
                                    "maxItemsOne": false
                                },
                                "audit_non_hmac_response_keys": {
                                    "maxItemsOne": false
                                },
                                "passthrough_request_headers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_jwt_auth_backend_role": {
                "current": "vault:jwt/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "allowed_redirect_uris": {
                        "maxItemsOne": false
                    },
                    "bound_audiences": {
                        "maxItemsOne": false
                    },
                    "oidc_scopes": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kmip_secret_backend": {
                "current": "vault:kmip/secretBackend:SecretBackend",
                "majorVersion": 5,
                "fields": {
                    "listen_addrs": {
                        "maxItemsOne": false
                    },
                    "server_hostnames": {
                        "maxItemsOne": false
                    },
                    "server_ips": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kmip_secret_role": {
                "current": "vault:kmip/secretRole:SecretRole",
                "majorVersion": 5
            },
            "vault_kmip_secret_scope": {
                "current": "vault:kmip/secretScope:SecretScope",
                "majorVersion": 5
            },
            "vault_kubernetes_auth_backend_config": {
                "current": "vault:kubernetes/authBackendConfig:AuthBackendConfig",
                "majorVersion": 5,
                "fields": {
                    "pem_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kubernetes_auth_backend_role": {
                "current": "vault:kubernetes/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "bound_service_account_names": {
                        "maxItemsOne": false
                    },
                    "bound_service_account_namespaces": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kubernetes_secret_backend": {
                "current": "vault:kubernetes/secretBackend:SecretBackend",
                "majorVersion": 5,
                "fields": {
                    "allowed_managed_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_request_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_response_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kubernetes_secret_backend_role": {
                "current": "vault:kubernetes/secretBackendRole:SecretBackendRole",
                "majorVersion": 5,
                "fields": {
                    "allowed_kubernetes_namespaces": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kv_secret": {
                "current": "vault:kv/secret:Secret",
                "majorVersion": 5
            },
            "vault_kv_secret_backend_v2": {
                "current": "vault:kv/secretBackendV2:SecretBackendV2",
                "majorVersion": 5
            },
            "vault_kv_secret_v2": {
                "current": "vault:kv/secretV2:SecretV2",
                "majorVersion": 5,
                "fields": {
                    "custom_metadata": {
                        "maxItemsOne": true
                    }
                }
            },
            "vault_ldap_auth_backend": {
                "current": "vault:ldap/authBackend:AuthBackend",
                "majorVersion": 5,
                "fields": {
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ldap_auth_backend_group": {
                "current": "vault:ldap/authBackendGroup:AuthBackendGroup",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ldap_auth_backend_user": {
                "current": "vault:ldap/authBackendUser:AuthBackendUser",
                "majorVersion": 5,
                "fields": {
                    "groups": {
                        "maxItemsOne": false
                    },
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ldap_secret_backend": {
                "current": "vault:ldap/secretBackend:SecretBackend",
                "majorVersion": 5,
                "fields": {
                    "allowed_managed_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_request_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_response_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ldap_secret_backend_dynamic_role": {
                "current": "vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole",
                "majorVersion": 5
            },
            "vault_ldap_secret_backend_library_set": {
                "current": "vault:ldap/secretBackendLibrarySet:SecretBackendLibrarySet",
                "majorVersion": 5,
                "fields": {
                    "service_account_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ldap_secret_backend_static_role": {
                "current": "vault:ldap/secretBackendStaticRole:SecretBackendStaticRole",
                "majorVersion": 5
            },
            "vault_managed_keys": {
                "current": "vault:managed/keys:Keys",
                "majorVersion": 5,
                "fields": {
                    "aws": {
                        "maxItemsOne": false
                    },
                    "azure": {
                        "maxItemsOne": false
                    },
                    "pkcs": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_mfa_duo": {
                "current": "vault:index/mfaDuo:MfaDuo",
                "majorVersion": 5
            },
            "vault_mfa_okta": {
                "current": "vault:index/mfaOkta:MfaOkta",
                "majorVersion": 5
            },
            "vault_mfa_pingid": {
                "current": "vault:index/mfaPingid:MfaPingid",
                "majorVersion": 5
            },
            "vault_mfa_totp": {
                "current": "vault:index/mfaTotp:MfaTotp",
                "majorVersion": 5
            },
            "vault_mongodbatlas_secret_backend": {
                "current": "vault:mongodbatlas/secretBackend:SecretBackend",
                "majorVersion": 5
            },
            "vault_mongodbatlas_secret_role": {
                "current": "vault:mongodbatlas/secretRole:SecretRole",
                "majorVersion": 5,
                "fields": {
                    "cidr_blocks": {
                        "maxItemsOne": false
                    },
                    "ip_addresses": {
                        "maxItemsOne": false
                    },
                    "project_roles": {
                        "maxItemsOne": false
                    },
                    "roles": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_mount": {
                "current": "vault:index/mount:Mount",
                "majorVersion": 5,
                "fields": {
                    "allowed_managed_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_request_keys": {
                        "maxItemsOne": false
                    },
                    "audit_non_hmac_response_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_namespace": {
                "current": "vault:index/namespace:Namespace",
                "majorVersion": 5
            },
            "vault_nomad_secret_backend": {
                "current": "vault:index/nomadSecretBackend:NomadSecretBackend",
                "majorVersion": 5
            },
            "vault_nomad_secret_role": {
                "current": "vault:index/nomadSecretRole:NomadSecretRole",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_okta_auth_backend": {
                "current": "vault:okta/authBackend:AuthBackend",
                "majorVersion": 5,
                "fields": {
                    "group": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "policies": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "user": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "groups": {
                                    "maxItemsOne": false
                                },
                                "policies": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_okta_auth_backend_group": {
                "current": "vault:okta/authBackendGroup:AuthBackendGroup",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_okta_auth_backend_user": {
                "current": "vault:okta/authBackendUser:AuthBackendUser",
                "majorVersion": 5,
                "fields": {
                    "groups": {
                        "maxItemsOne": false
                    },
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_password_policy": {
                "current": "vault:index/passwordPolicy:PasswordPolicy",
                "majorVersion": 5
            },
            "vault_pki_secret_backend_cert": {
                "current": "vault:pkiSecret/secretBackendCert:SecretBackendCert",
                "majorVersion": 5,
                "fields": {
                    "alt_names": {
                        "maxItemsOne": false
                    },
                    "ip_sans": {
                        "maxItemsOne": false
                    },
                    "other_sans": {
                        "maxItemsOne": false
                    },
                    "uri_sans": {
                        "maxItemsOne": false
                    },
                    "user_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_config_ca": {
                "current": "vault:pkiSecret/secretBackendConfigCa:SecretBackendConfigCa",
                "majorVersion": 5
            },
            "vault_pki_secret_backend_config_issuers": {
                "current": "vault:pkiSecret/secretBackendConfigIssuers:SecretBackendConfigIssuers",
                "majorVersion": 5
            },
            "vault_pki_secret_backend_config_urls": {
                "current": "vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls",
                "majorVersion": 5,
                "fields": {
                    "crl_distribution_points": {
                        "maxItemsOne": false
                    },
                    "issuing_certificates": {
                        "maxItemsOne": false
                    },
                    "ocsp_servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_crl_config": {
                "current": "vault:pkiSecret/secretBackendCrlConfig:SecretBackendCrlConfig",
                "majorVersion": 5
            },
            "vault_pki_secret_backend_intermediate_cert_request": {
                "current": "vault:pkiSecret/secretBackendIntermediateCertRequest:SecretBackendIntermediateCertRequest",
                "majorVersion": 5,
                "fields": {
                    "alt_names": {
                        "maxItemsOne": false
                    },
                    "ip_sans": {
                        "maxItemsOne": false
                    },
                    "other_sans": {
                        "maxItemsOne": false
                    },
                    "uri_sans": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_intermediate_set_signed": {
                "current": "vault:pkiSecret/secretBackendIntermediateSetSigned:SecretBackendIntermediateSetSigned",
                "majorVersion": 5,
                "fields": {
                    "imported_issuers": {
                        "maxItemsOne": false
                    },
                    "imported_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_issuer": {
                "current": "vault:pkiSecret/secretBackendIssuer:SecretBackendIssuer",
                "majorVersion": 5,
                "fields": {
                    "crl_distribution_points": {
                        "maxItemsOne": false
                    },
                    "issuing_certificates": {
                        "maxItemsOne": false
                    },
                    "manual_chain": {
                        "maxItemsOne": false
                    },
                    "ocsp_servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_key": {
                "current": "vault:pkiSecret/secretBackendKey:SecretBackendKey",
                "majorVersion": 5
            },
            "vault_pki_secret_backend_role": {
                "current": "vault:pkiSecret/secretBackendRole:SecretBackendRole",
                "majorVersion": 5,
                "fields": {
                    "allowed_domains": {
                        "maxItemsOne": false
                    },
                    "allowed_other_sans": {
                        "maxItemsOne": false
                    },
                    "allowed_serial_numbers": {
                        "maxItemsOne": false
                    },
                    "allowed_uri_sans": {
                        "maxItemsOne": false
                    },
                    "allowed_user_ids": {
                        "maxItemsOne": false
                    },
                    "country": {
                        "maxItemsOne": false
                    },
                    "ext_key_usage": {
                        "maxItemsOne": false
                    },
                    "ext_key_usage_oids": {
                        "maxItemsOne": false
                    },
                    "key_usage": {
                        "maxItemsOne": false
                    },
                    "locality": {
                        "maxItemsOne": false
                    },
                    "organization": {
                        "maxItemsOne": false
                    },
                    "ou": {
                        "maxItemsOne": false
                    },
                    "policy_identifier": {
                        "maxItemsOne": false
                    },
                    "policy_identifiers": {
                        "maxItemsOne": false
                    },
                    "postal_code": {
                        "maxItemsOne": false
                    },
                    "province": {
                        "maxItemsOne": false
                    },
                    "street_address": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_root_cert": {
                "current": "vault:pkiSecret/secretBackendRootCert:SecretBackendRootCert",
                "majorVersion": 5,
                "fields": {
                    "alt_names": {
                        "maxItemsOne": false
                    },
                    "ip_sans": {
                        "maxItemsOne": false
                    },
                    "other_sans": {
                        "maxItemsOne": false
                    },
                    "permitted_dns_domains": {
                        "maxItemsOne": false
                    },
                    "uri_sans": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_root_sign_intermediate": {
                "current": "vault:pkiSecret/secretBackendRootSignIntermediate:SecretBackendRootSignIntermediate",
                "majorVersion": 5,
                "fields": {
                    "alt_names": {
                        "maxItemsOne": false
                    },
                    "ca_chain": {
                        "maxItemsOne": false
                    },
                    "ip_sans": {
                        "maxItemsOne": false
                    },
                    "other_sans": {
                        "maxItemsOne": false
                    },
                    "permitted_dns_domains": {
                        "maxItemsOne": false
                    },
                    "uri_sans": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_sign": {
                "current": "vault:pkiSecret/secretBackendSign:SecretBackendSign",
                "majorVersion": 5,
                "fields": {
                    "alt_names": {
                        "maxItemsOne": false
                    },
                    "ca_chain": {
                        "maxItemsOne": false
                    },
                    "ip_sans": {
                        "maxItemsOne": false
                    },
                    "other_sans": {
                        "maxItemsOne": false
                    },
                    "uri_sans": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_policy": {
                "current": "vault:index/policy:Policy",
                "majorVersion": 5
            },
            "vault_quota_lease_count": {
                "current": "vault:index/quotaLeaseCount:QuotaLeaseCount",
                "majorVersion": 5
            },
            "vault_quota_rate_limit": {
                "current": "vault:index/quotaRateLimit:QuotaRateLimit",
                "majorVersion": 5
            },
            "vault_rabbitmq_secret_backend": {
                "current": "vault:rabbitMq/secretBackend:SecretBackend",
                "majorVersion": 5
            },
            "vault_rabbitmq_secret_backend_role": {
                "current": "vault:rabbitMq/secretBackendRole:SecretBackendRole",
                "majorVersion": 5,
                "fields": {
                    "vhost": {
                        "maxItemsOne": false
                    },
                    "vhost_topic": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "vhost": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_raft_autopilot": {
                "current": "vault:index/raftAutopilot:RaftAutopilot",
                "majorVersion": 5
            },
            "vault_raft_snapshot_agent_config": {
                "current": "vault:index/raftSnapshotAgentConfig:RaftSnapshotAgentConfig",
                "majorVersion": 5
            },
            "vault_rgp_policy": {
                "current": "vault:index/rgpPolicy:RgpPolicy",
                "majorVersion": 5
            },
            "vault_saml_auth_backend": {
                "current": "vault:saml/authBackend:AuthBackend",
                "majorVersion": 5,
                "fields": {
                    "acs_urls": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_saml_auth_backend_role": {
                "current": "vault:saml/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "bound_subjects": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_secrets_sync_association": {
                "current": "vault:secrets/syncAssociation:SyncAssociation",
                "majorVersion": 5
            },
            "vault_secrets_sync_aws_destination": {
                "current": "vault:secrets/syncAwsDestination:SyncAwsDestination",
                "majorVersion": 5
            },
            "vault_secrets_sync_azure_destination": {
                "current": "vault:secrets/syncAzureDestination:SyncAzureDestination",
                "majorVersion": 5
            },
            "vault_secrets_sync_config": {
                "current": "vault:secrets/syncConfig:SyncConfig",
                "majorVersion": 5
            },
            "vault_secrets_sync_gcp_destination": {
                "current": "vault:secrets/syncGcpDestination:SyncGcpDestination",
                "majorVersion": 5
            },
            "vault_secrets_sync_gh_destination": {
                "current": "vault:secrets/syncGhDestination:SyncGhDestination",
                "majorVersion": 5
            },
            "vault_secrets_sync_vercel_destination": {
                "current": "vault:secrets/syncVercelDestination:SyncVercelDestination",
                "majorVersion": 5,
                "fields": {
                    "deployment_environments": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ssh_secret_backend_ca": {
                "current": "vault:ssh/secretBackendCa:SecretBackendCa",
                "majorVersion": 5
            },
            "vault_ssh_secret_backend_role": {
                "current": "vault:ssh/secretBackendRole:SecretBackendRole",
                "majorVersion": 5,
                "fields": {
                    "allowed_user_key_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "lengths": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_terraform_cloud_secret_backend": {
                "current": "vault:terraformcloud/secretBackend:SecretBackend",
                "majorVersion": 5
            },
            "vault_terraform_cloud_secret_creds": {
                "current": "vault:terraformcloud/secretCreds:SecretCreds",
                "majorVersion": 5
            },
            "vault_terraform_cloud_secret_role": {
                "current": "vault:terraformcloud/secretRole:SecretRole",
                "majorVersion": 5
            },
            "vault_token": {
                "current": "vault:index/token:Token",
                "majorVersion": 5,
                "fields": {
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_token_auth_backend_role": {
                "current": "vault:tokenauth/authBackendRole:AuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "allowed_entity_aliases": {
                        "maxItemsOne": false
                    },
                    "allowed_policies": {
                        "maxItemsOne": false
                    },
                    "allowed_policies_glob": {
                        "maxItemsOne": false
                    },
                    "disallowed_policies": {
                        "maxItemsOne": false
                    },
                    "disallowed_policies_glob": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_transform_alphabet": {
                "current": "vault:transform/alphabet:Alphabet",
                "majorVersion": 5
            },
            "vault_transform_role": {
                "current": "vault:transform/role:Role",
                "majorVersion": 5,
                "fields": {
                    "transformations": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_transform_template": {
                "current": "vault:transform/template:Template",
                "majorVersion": 5
            },
            "vault_transform_transformation": {
                "current": "vault:transform/transformation:Transformation",
                "majorVersion": 5,
                "fields": {
                    "allowed_roles": {
                        "maxItemsOne": false
                    },
                    "templates": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_transit_secret_backend_key": {
                "current": "vault:transit/secretBackendKey:SecretBackendKey",
                "majorVersion": 5,
                "fields": {
                    "keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_transit_secret_cache_config": {
                "current": "vault:transit/secretCacheConfig:SecretCacheConfig",
                "majorVersion": 5
            }
        },
        "datasources": {
            "vault_ad_access_credentials": {
                "current": "vault:ad/getAccessCredentials:getAccessCredentials",
                "majorVersion": 5
            },
            "vault_approle_auth_backend_role_id": {
                "current": "vault:appRole/getAuthBackendRoleId:getAuthBackendRoleId",
                "majorVersion": 5
            },
            "vault_auth_backend": {
                "current": "vault:index/getAuthBackend:getAuthBackend",
                "majorVersion": 5
            },
            "vault_auth_backends": {
                "current": "vault:index/getAuthBackends:getAuthBackends",
                "majorVersion": 5,
                "fields": {
                    "accessors": {
                        "maxItemsOne": false
                    },
                    "paths": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_aws_access_credentials": {
                "current": "vault:aws/getAccessCredentials:getAccessCredentials",
                "majorVersion": 5
            },
            "vault_aws_static_access_credentials": {
                "current": "vault:aws/getStaticAccessCredentials:getStaticAccessCredentials",
                "majorVersion": 5
            },
            "vault_azure_access_credentials": {
                "current": "vault:azure/getAccessCredentials:getAccessCredentials",
                "majorVersion": 5
            },
            "vault_gcp_auth_backend_role": {
                "current": "vault:gcp/getAuthBackendRole:getAuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "bound_instance_groups": {
                        "maxItemsOne": false
                    },
                    "bound_labels": {
                        "maxItemsOne": false
                    },
                    "bound_projects": {
                        "maxItemsOne": false
                    },
                    "bound_regions": {
                        "maxItemsOne": false
                    },
                    "bound_service_accounts": {
                        "maxItemsOne": false
                    },
                    "bound_zones": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_generic_secret": {
                "current": "vault:generic/getSecret:getSecret",
                "majorVersion": 5
            },
            "vault_identity_entity": {
                "current": "vault:identity/getEntity:getEntity",
                "majorVersion": 5,
                "fields": {
                    "aliases": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "merged_from_canonical_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "direct_group_ids": {
                        "maxItemsOne": false
                    },
                    "group_ids": {
                        "maxItemsOne": false
                    },
                    "inherited_group_ids": {
                        "maxItemsOne": false
                    },
                    "merged_entity_ids": {
                        "maxItemsOne": false
                    },
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_group": {
                "current": "vault:identity/getGroup:getGroup",
                "majorVersion": 5,
                "fields": {
                    "alias_merged_from_canonical_ids": {
                        "maxItemsOne": false
                    },
                    "member_entity_ids": {
                        "maxItemsOne": false
                    },
                    "member_group_ids": {
                        "maxItemsOne": false
                    },
                    "parent_group_ids": {
                        "maxItemsOne": false
                    },
                    "policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_oidc_client_creds": {
                "current": "vault:identity/getOidcClientCreds:getOidcClientCreds",
                "majorVersion": 5
            },
            "vault_identity_oidc_openid_config": {
                "current": "vault:identity/getOidcOpenidConfig:getOidcOpenidConfig",
                "majorVersion": 5,
                "fields": {
                    "grant_types_supported": {
                        "maxItemsOne": false
                    },
                    "id_token_signing_alg_values_supported": {
                        "maxItemsOne": false
                    },
                    "response_types_supported": {
                        "maxItemsOne": false
                    },
                    "scopes_supported": {
                        "maxItemsOne": false
                    },
                    "subject_types_supported": {
                        "maxItemsOne": false
                    },
                    "token_endpoint_auth_methods_supported": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_identity_oidc_public_keys": {
                "current": "vault:identity/getOidcPublicKeys:getOidcPublicKeys",
                "majorVersion": 5,
                "fields": {
                    "keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kubernetes_auth_backend_config": {
                "current": "vault:kubernetes/getAuthBackendConfig:getAuthBackendConfig",
                "majorVersion": 5,
                "fields": {
                    "pem_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kubernetes_auth_backend_role": {
                "current": "vault:kubernetes/getAuthBackendRole:getAuthBackendRole",
                "majorVersion": 5,
                "fields": {
                    "bound_service_account_names": {
                        "maxItemsOne": false
                    },
                    "bound_service_account_namespaces": {
                        "maxItemsOne": false
                    },
                    "token_bound_cidrs": {
                        "maxItemsOne": false
                    },
                    "token_policies": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kubernetes_service_account_token": {
                "current": "vault:kubernetes/getServiceAccountToken:getServiceAccountToken",
                "majorVersion": 5
            },
            "vault_kv_secret": {
                "current": "vault:kv/getSecret:getSecret",
                "majorVersion": 5
            },
            "vault_kv_secret_subkeys_v2": {
                "current": "vault:kv/getSecretSubkeysV2:getSecretSubkeysV2",
                "majorVersion": 5
            },
            "vault_kv_secret_v2": {
                "current": "vault:kv/getSecretV2:getSecretV2",
                "majorVersion": 5
            },
            "vault_kv_secrets_list": {
                "current": "vault:kv/getSecretsList:getSecretsList",
                "majorVersion": 5,
                "fields": {
                    "names": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_kv_secrets_list_v2": {
                "current": "vault:kv/getSecretsListV2:getSecretsListV2",
                "majorVersion": 5,
                "fields": {
                    "names": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ldap_dynamic_credentials": {
                "current": "vault:ldap/getDynamicCredentials:getDynamicCredentials",
                "majorVersion": 5,
                "fields": {
                    "distinguished_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_ldap_static_credentials": {
                "current": "vault:ldap/getStaticCredentials:getStaticCredentials",
                "majorVersion": 5
            },
            "vault_nomad_access_token": {
                "current": "vault:index/getNomadAccessToken:getNomadAccessToken",
                "majorVersion": 5
            },
            "vault_pki_secret_backend_issuer": {
                "current": "vault:pkiSecret/getBackendIssuer:getBackendIssuer",
                "majorVersion": 5,
                "fields": {
                    "ca_chain": {
                        "maxItemsOne": false
                    },
                    "manual_chain": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_issuers": {
                "current": "vault:pkiSecret/getBackendIssuers:getBackendIssuers",
                "majorVersion": 5,
                "fields": {
                    "keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_pki_secret_backend_key": {
                "current": "vault:pkiSecret/getBackendKey:getBackendKey",
                "majorVersion": 5
            },
            "vault_pki_secret_backend_keys": {
                "current": "vault:pkiSecret/getBackendKeys:getBackendKeys",
                "majorVersion": 5,
                "fields": {
                    "keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_policy_document": {
                "current": "vault:index/getPolicyDocument:getPolicyDocument",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_parameter": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "value": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "capabilities": {
                                    "maxItemsOne": false
                                },
                                "denied_parameter": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "value": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "required_parameters": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "vault_raft_autopilot_state": {
                "current": "vault:index/getRaftAutopilotState:getRaftAutopilotState",
                "majorVersion": 5,
                "fields": {
                    "voters": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_transform_decode": {
                "current": "vault:transform/getDecode:getDecode",
                "majorVersion": 5,
                "fields": {
                    "batch_input": {
                        "maxItemsOne": false
                    },
                    "batch_results": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_transform_encode": {
                "current": "vault:transform/getEncode:getEncode",
                "majorVersion": 5,
                "fields": {
                    "batch_input": {
                        "maxItemsOne": false
                    },
                    "batch_results": {
                        "maxItemsOne": false
                    }
                }
            },
            "vault_transit_decrypt": {
                "current": "vault:transit/getDecrypt:getDecrypt",
                "majorVersion": 5
            },
            "vault_transit_encrypt": {
                "current": "vault:transit/getEncrypt:getEncrypt",
                "majorVersion": 5
            }
        }
    },
    "auto-settings": {},
    "renames": {
        "resources": {
            "vault:ad/secretBackend:SecretBackend": "vault_ad_secret_backend",
            "vault:ad/secretLibrary:SecretLibrary": "vault_ad_secret_library",
            "vault:ad/secretRole:SecretRole": "vault_ad_secret_role",
            "vault:alicloud/authBackendRole:AuthBackendRole": "vault_alicloud_auth_backend_role",
            "vault:appRole/authBackendLogin:AuthBackendLogin": "vault_approle_auth_backend_login",
            "vault:appRole/authBackendRole:AuthBackendRole": "vault_approle_auth_backend_role",
            "vault:appRole/authBackendRoleSecretId:AuthBackendRoleSecretId": "vault_approle_auth_backend_role_secret_id",
            "vault:aws/authBackendCert:AuthBackendCert": "vault_aws_auth_backend_cert",
            "vault:aws/authBackendClient:AuthBackendClient": "vault_aws_auth_backend_client",
            "vault:aws/authBackendConfigIdentity:AuthBackendConfigIdentity": "vault_aws_auth_backend_config_identity",
            "vault:aws/authBackendIdentityWhitelist:AuthBackendIdentityWhitelist": "vault_aws_auth_backend_identity_whitelist",
            "vault:aws/authBackendLogin:AuthBackendLogin": "vault_aws_auth_backend_login",
            "vault:aws/authBackendRole:AuthBackendRole": "vault_aws_auth_backend_role",
            "vault:aws/authBackendRoleTag:AuthBackendRoleTag": "vault_aws_auth_backend_role_tag",
            "vault:aws/authBackendRoletagBlacklist:AuthBackendRoletagBlacklist": "vault_aws_auth_backend_roletag_blacklist",
            "vault:aws/authBackendStsRole:AuthBackendStsRole": "vault_aws_auth_backend_sts_role",
            "vault:aws/secretBackend:SecretBackend": "vault_aws_secret_backend",
            "vault:aws/secretBackendRole:SecretBackendRole": "vault_aws_secret_backend_role",
            "vault:aws/secretBackendStaticRole:SecretBackendStaticRole": "vault_aws_secret_backend_static_role",
            "vault:azure/authBackendConfig:AuthBackendConfig": "vault_azure_auth_backend_config",
            "vault:azure/authBackendRole:AuthBackendRole": "vault_azure_auth_backend_role",
            "vault:azure/backend:Backend": "vault_azure_secret_backend",
            "vault:azure/backendRole:BackendRole": "vault_azure_secret_backend_role",
            "vault:consul/secretBackend:SecretBackend": "vault_consul_secret_backend",
            "vault:consul/secretBackendRole:SecretBackendRole": "vault_consul_secret_backend_role",
            "vault:database/secretBackendConnection:SecretBackendConnection": "vault_database_secret_backend_connection",
            "vault:database/secretBackendRole:SecretBackendRole": "vault_database_secret_backend_role",
            "vault:database/secretBackendStaticRole:SecretBackendStaticRole": "vault_database_secret_backend_static_role",
            "vault:database/secretsMount:SecretsMount": "vault_database_secrets_mount",
            "vault:gcp/authBackend:AuthBackend": "vault_gcp_auth_backend",
            "vault:gcp/authBackendRole:AuthBackendRole": "vault_gcp_auth_backend_role",
            "vault:gcp/secretBackend:SecretBackend": "vault_gcp_secret_backend",
            "vault:gcp/secretImpersonatedAccount:SecretImpersonatedAccount": "vault_gcp_secret_impersonated_account",
            "vault:gcp/secretRoleset:SecretRoleset": "vault_gcp_secret_roleset",
            "vault:gcp/secretStaticAccount:SecretStaticAccount": "vault_gcp_secret_static_account",
            "vault:generic/endpoint:Endpoint": "vault_generic_endpoint",
            "vault:generic/secret:Secret": "vault_generic_secret",
            "vault:github/authBackend:AuthBackend": "vault_github_auth_backend",
            "vault:github/team:Team": "vault_github_team",
            "vault:github/user:User": "vault_github_user",
            "vault:identity/entity:Entity": "vault_identity_entity",
            "vault:identity/entityAlias:EntityAlias": "vault_identity_entity_alias",
            "vault:identity/entityPolicies:EntityPolicies": "vault_identity_entity_policies",
            "vault:identity/group:Group": "vault_identity_group",
            "vault:identity/groupAlias:GroupAlias": "vault_identity_group_alias",
            "vault:identity/groupMemberEntityIds:GroupMemberEntityIds": "vault_identity_group_member_entity_ids",
            "vault:identity/groupMemberGroupIds:GroupMemberGroupIds": "vault_identity_group_member_group_ids",
            "vault:identity/groupPolicies:GroupPolicies": "vault_identity_group_policies",
            "vault:identity/mfaDuo:MfaDuo": "vault_identity_mfa_duo",
            "vault:identity/mfaLoginEnforcement:MfaLoginEnforcement": "vault_identity_mfa_login_enforcement",
            "vault:identity/mfaOkta:MfaOkta": "vault_identity_mfa_okta",
            "vault:identity/mfaPingid:MfaPingid": "vault_identity_mfa_pingid",
            "vault:identity/mfaTotp:MfaTotp": "vault_identity_mfa_totp",
            "vault:identity/oidc:Oidc": "vault_identity_oidc",
            "vault:identity/oidcAssignment:OidcAssignment": "vault_identity_oidc_assignment",
            "vault:identity/oidcClient:OidcClient": "vault_identity_oidc_client",
            "vault:identity/oidcKey:OidcKey": "vault_identity_oidc_key",
            "vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID": "vault_identity_oidc_key_allowed_client_id",
            "vault:identity/oidcProvider:OidcProvider": "vault_identity_oidc_provider",
            "vault:identity/oidcRole:OidcRole": "vault_identity_oidc_role",
            "vault:identity/oidcScope:OidcScope": "vault_identity_oidc_scope",
            "vault:index/audit:Audit": "vault_audit",
            "vault:index/auditRequestHeader:AuditRequestHeader": "vault_audit_request_header",
            "vault:index/authBackend:AuthBackend": "vault_auth_backend",
            "vault:index/certAuthBackendRole:CertAuthBackendRole": "vault_cert_auth_backend_role",
            "vault:index/egpPolicy:EgpPolicy": "vault_egp_policy",
            "vault:index/mfaDuo:MfaDuo": "vault_mfa_duo",
            "vault:index/mfaOkta:MfaOkta": "vault_mfa_okta",
            "vault:index/mfaPingid:MfaPingid": "vault_mfa_pingid",
            "vault:index/mfaTotp:MfaTotp": "vault_mfa_totp",
            "vault:index/mount:Mount": "vault_mount",
            "vault:index/namespace:Namespace": "vault_namespace",
            "vault:index/nomadSecretBackend:NomadSecretBackend": "vault_nomad_secret_backend",
            "vault:index/nomadSecretRole:NomadSecretRole": "vault_nomad_secret_role",
            "vault:index/passwordPolicy:PasswordPolicy": "vault_password_policy",
            "vault:index/policy:Policy": "vault_policy",
            "vault:index/quotaLeaseCount:QuotaLeaseCount": "vault_quota_lease_count",
            "vault:index/quotaRateLimit:QuotaRateLimit": "vault_quota_rate_limit",
            "vault:index/raftAutopilot:RaftAutopilot": "vault_raft_autopilot",
            "vault:index/raftSnapshotAgentConfig:RaftSnapshotAgentConfig": "vault_raft_snapshot_agent_config",
            "vault:index/rgpPolicy:RgpPolicy": "vault_rgp_policy",
            "vault:index/token:Token": "vault_token",
            "vault:jwt/authBackend:AuthBackend": "vault_jwt_auth_backend",
            "vault:jwt/authBackendRole:AuthBackendRole": "vault_jwt_auth_backend_role",
            "vault:kmip/secretBackend:SecretBackend": "vault_kmip_secret_backend",
            "vault:kmip/secretRole:SecretRole": "vault_kmip_secret_role",
            "vault:kmip/secretScope:SecretScope": "vault_kmip_secret_scope",
            "vault:kubernetes/authBackendConfig:AuthBackendConfig": "vault_kubernetes_auth_backend_config",
            "vault:kubernetes/authBackendRole:AuthBackendRole": "vault_kubernetes_auth_backend_role",
            "vault:kubernetes/secretBackend:SecretBackend": "vault_kubernetes_secret_backend",
            "vault:kubernetes/secretBackendRole:SecretBackendRole": "vault_kubernetes_secret_backend_role",
            "vault:kv/secret:Secret": "vault_kv_secret",
            "vault:kv/secretBackendV2:SecretBackendV2": "vault_kv_secret_backend_v2",
            "vault:kv/secretV2:SecretV2": "vault_kv_secret_v2",
            "vault:ldap/authBackend:AuthBackend": "vault_ldap_auth_backend",
            "vault:ldap/authBackendGroup:AuthBackendGroup": "vault_ldap_auth_backend_group",
            "vault:ldap/authBackendUser:AuthBackendUser": "vault_ldap_auth_backend_user",
            "vault:ldap/secretBackend:SecretBackend": "vault_ldap_secret_backend",
            "vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole": "vault_ldap_secret_backend_dynamic_role",
            "vault:ldap/secretBackendLibrarySet:SecretBackendLibrarySet": "vault_ldap_secret_backend_library_set",
            "vault:ldap/secretBackendStaticRole:SecretBackendStaticRole": "vault_ldap_secret_backend_static_role",
            "vault:managed/keys:Keys": "vault_managed_keys",
            "vault:mongodbatlas/secretBackend:SecretBackend": "vault_mongodbatlas_secret_backend",
            "vault:mongodbatlas/secretRole:SecretRole": "vault_mongodbatlas_secret_role",
            "vault:okta/authBackend:AuthBackend": "vault_okta_auth_backend",
            "vault:okta/authBackendGroup:AuthBackendGroup": "vault_okta_auth_backend_group",
            "vault:okta/authBackendUser:AuthBackendUser": "vault_okta_auth_backend_user",
            "vault:pkiSecret/secretBackendCert:SecretBackendCert": "vault_pki_secret_backend_cert",
            "vault:pkiSecret/secretBackendConfigCa:SecretBackendConfigCa": "vault_pki_secret_backend_config_ca",
            "vault:pkiSecret/secretBackendConfigIssuers:SecretBackendConfigIssuers": "vault_pki_secret_backend_config_issuers",
            "vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls": "vault_pki_secret_backend_config_urls",
            "vault:pkiSecret/secretBackendCrlConfig:SecretBackendCrlConfig": "vault_pki_secret_backend_crl_config",
            "vault:pkiSecret/secretBackendIntermediateCertRequest:SecretBackendIntermediateCertRequest": "vault_pki_secret_backend_intermediate_cert_request",
            "vault:pkiSecret/secretBackendIntermediateSetSigned:SecretBackendIntermediateSetSigned": "vault_pki_secret_backend_intermediate_set_signed",
            "vault:pkiSecret/secretBackendIssuer:SecretBackendIssuer": "vault_pki_secret_backend_issuer",
            "vault:pkiSecret/secretBackendKey:SecretBackendKey": "vault_pki_secret_backend_key",
            "vault:pkiSecret/secretBackendRole:SecretBackendRole": "vault_pki_secret_backend_role",
            "vault:pkiSecret/secretBackendRootCert:SecretBackendRootCert": "vault_pki_secret_backend_root_cert",
            "vault:pkiSecret/secretBackendRootSignIntermediate:SecretBackendRootSignIntermediate": "vault_pki_secret_backend_root_sign_intermediate",
            "vault:pkiSecret/secretBackendSign:SecretBackendSign": "vault_pki_secret_backend_sign",
            "vault:rabbitMq/secretBackend:SecretBackend": "vault_rabbitmq_secret_backend",
            "vault:rabbitMq/secretBackendRole:SecretBackendRole": "vault_rabbitmq_secret_backend_role",
            "vault:saml/authBackend:AuthBackend": "vault_saml_auth_backend",
            "vault:saml/authBackendRole:AuthBackendRole": "vault_saml_auth_backend_role",
            "vault:secrets/syncAssociation:SyncAssociation": "vault_secrets_sync_association",
            "vault:secrets/syncAwsDestination:SyncAwsDestination": "vault_secrets_sync_aws_destination",
            "vault:secrets/syncAzureDestination:SyncAzureDestination": "vault_secrets_sync_azure_destination",
            "vault:secrets/syncConfig:SyncConfig": "vault_secrets_sync_config",
            "vault:secrets/syncGcpDestination:SyncGcpDestination": "vault_secrets_sync_gcp_destination",
            "vault:secrets/syncGhDestination:SyncGhDestination": "vault_secrets_sync_gh_destination",
            "vault:secrets/syncVercelDestination:SyncVercelDestination": "vault_secrets_sync_vercel_destination",
            "vault:ssh/secretBackendCa:SecretBackendCa": "vault_ssh_secret_backend_ca",
            "vault:ssh/secretBackendRole:SecretBackendRole": "vault_ssh_secret_backend_role",
            "vault:terraformcloud/secretBackend:SecretBackend": "vault_terraform_cloud_secret_backend",
            "vault:terraformcloud/secretCreds:SecretCreds": "vault_terraform_cloud_secret_creds",
            "vault:terraformcloud/secretRole:SecretRole": "vault_terraform_cloud_secret_role",
            "vault:tokenauth/authBackendRole:AuthBackendRole": "vault_token_auth_backend_role",
            "vault:transform/alphabet:Alphabet": "vault_transform_alphabet",
            "vault:transform/role:Role": "vault_transform_role",
            "vault:transform/template:Template": "vault_transform_template",
            "vault:transform/transformation:Transformation": "vault_transform_transformation",
            "vault:transit/secretBackendKey:SecretBackendKey": "vault_transit_secret_backend_key",
            "vault:transit/secretCacheConfig:SecretCacheConfig": "vault_transit_secret_cache_config"
        },
        "functions": {
            "vault:ad/getAccessCredentials:getAccessCredentials": "vault_ad_access_credentials",
            "vault:appRole/getAuthBackendRoleId:getAuthBackendRoleId": "vault_approle_auth_backend_role_id",
            "vault:aws/getAccessCredentials:getAccessCredentials": "vault_aws_access_credentials",
            "vault:aws/getStaticAccessCredentials:getStaticAccessCredentials": "vault_aws_static_access_credentials",
            "vault:azure/getAccessCredentials:getAccessCredentials": "vault_azure_access_credentials",
            "vault:gcp/getAuthBackendRole:getAuthBackendRole": "vault_gcp_auth_backend_role",
            "vault:generic/getSecret:getSecret": "vault_generic_secret",
            "vault:identity/getEntity:getEntity": "vault_identity_entity",
            "vault:identity/getGroup:getGroup": "vault_identity_group",
            "vault:identity/getOidcClientCreds:getOidcClientCreds": "vault_identity_oidc_client_creds",
            "vault:identity/getOidcOpenidConfig:getOidcOpenidConfig": "vault_identity_oidc_openid_config",
            "vault:identity/getOidcPublicKeys:getOidcPublicKeys": "vault_identity_oidc_public_keys",
            "vault:index/getAuthBackend:getAuthBackend": "vault_auth_backend",
            "vault:index/getAuthBackends:getAuthBackends": "vault_auth_backends",
            "vault:index/getNomadAccessToken:getNomadAccessToken": "vault_nomad_access_token",
            "vault:index/getPolicyDocument:getPolicyDocument": "vault_policy_document",
            "vault:index/getRaftAutopilotState:getRaftAutopilotState": "vault_raft_autopilot_state",
            "vault:kubernetes/getAuthBackendConfig:getAuthBackendConfig": "vault_kubernetes_auth_backend_config",
            "vault:kubernetes/getAuthBackendRole:getAuthBackendRole": "vault_kubernetes_auth_backend_role",
            "vault:kubernetes/getServiceAccountToken:getServiceAccountToken": "vault_kubernetes_service_account_token",
            "vault:kv/getSecret:getSecret": "vault_kv_secret",
            "vault:kv/getSecretSubkeysV2:getSecretSubkeysV2": "vault_kv_secret_subkeys_v2",
            "vault:kv/getSecretV2:getSecretV2": "vault_kv_secret_v2",
            "vault:kv/getSecretsList:getSecretsList": "vault_kv_secrets_list",
            "vault:kv/getSecretsListV2:getSecretsListV2": "vault_kv_secrets_list_v2",
            "vault:ldap/getDynamicCredentials:getDynamicCredentials": "vault_ldap_dynamic_credentials",
            "vault:ldap/getStaticCredentials:getStaticCredentials": "vault_ldap_static_credentials",
            "vault:pkiSecret/getBackendIssuer:getBackendIssuer": "vault_pki_secret_backend_issuer",
            "vault:pkiSecret/getBackendIssuers:getBackendIssuers": "vault_pki_secret_backend_issuers",
            "vault:pkiSecret/getBackendKey:getBackendKey": "vault_pki_secret_backend_key",
            "vault:pkiSecret/getBackendKeys:getBackendKeys": "vault_pki_secret_backend_keys",
            "vault:transform/getDecode:getDecode": "vault_transform_decode",
            "vault:transform/getEncode:getEncode": "vault_transform_encode",
            "vault:transit/getDecrypt:getDecrypt": "vault_transit_decrypt",
            "vault:transit/getEncrypt:getEncrypt": "vault_transit_encrypt"
        },
        "renamedProperties": {
            "vault:ad/getAccessCredentials:getAccessCredentials": {
                "currentPassword": "current_password",
                "lastPassword": "last_password"
            },
            "vault:ad/secretBackend:SecretBackend": {
                "anonymousGroupSearch": "anonymous_group_search",
                "caseSensitiveNames": "case_sensitive_names",
                "clientTlsCert": "client_tls_cert",
                "clientTlsKey": "client_tls_key",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "denyNullBind": "deny_null_bind",
                "disableRemount": "disable_remount",
                "insecureTls": "insecure_tls",
                "lastRotationTolerance": "last_rotation_tolerance",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "maxTtl": "max_ttl",
                "passwordPolicy": "password_policy",
                "requestTimeout": "request_timeout",
                "tlsMaxVersion": "tls_max_version",
                "tlsMinVersion": "tls_min_version",
                "usePre111GroupCnBehavior": "use_pre111_group_cn_behavior",
                "useTokenGroups": "use_token_groups"
            },
            "vault:ad/secretLibrary:SecretLibrary": {
                "disableCheckInEnforcement": "disable_check_in_enforcement",
                "maxTtl": "max_ttl",
                "serviceAccountNames": "service_account_names"
            },
            "vault:ad/secretRole:SecretRole": {
                "lastVaultRotation": "last_vault_rotation",
                "passwordLastSet": "password_last_set",
                "serviceAccountName": "service_account_name"
            },
            "vault:alicloud/authBackendRole:AuthBackendRole": {
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:appRole/authBackendLogin:AuthBackendLogin": {
                "clientToken": "client_token",
                "leaseDuration": "lease_duration",
                "leaseStarted": "lease_started",
                "roleId": "role_id",
                "secretId": "secret_id"
            },
            "vault:appRole/authBackendRole:AuthBackendRole": {
                "bindSecretId": "bind_secret_id",
                "roleId": "role_id",
                "roleName": "role_name",
                "secretIdBoundCidrs": "secret_id_bound_cidrs",
                "secretIdNumUses": "secret_id_num_uses",
                "secretIdTtl": "secret_id_ttl",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:appRole/authBackendRoleSecretId:AuthBackendRoleSecretId": {
                "cidrLists": "cidr_list",
                "roleName": "role_name",
                "secretId": "secret_id",
                "withWrappedAccessor": "with_wrapped_accessor",
                "wrappingAccessor": "wrapping_accessor",
                "wrappingToken": "wrapping_token",
                "wrappingTtl": "wrapping_ttl"
            },
            "vault:appRole/getAuthBackendRoleId:getAuthBackendRoleId": {
                "roleId": "role_id",
                "roleName": "role_name"
            },
            "vault:aws/authBackendCert:AuthBackendCert": {
                "awsPublicCert": "aws_public_cert",
                "certName": "cert_name"
            },
            "vault:aws/authBackendClient:AuthBackendClient": {
                "accessKey": "access_key",
                "ec2Endpoint": "ec2_endpoint",
                "iamEndpoint": "iam_endpoint",
                "iamServerIdHeaderValue": "iam_server_id_header_value",
                "secretKey": "secret_key",
                "stsEndpoint": "sts_endpoint",
                "stsRegion": "sts_region",
                "useStsRegionFromClient": "use_sts_region_from_client"
            },
            "vault:aws/authBackendConfigIdentity:AuthBackendConfigIdentity": {
                "ec2Alias": "ec2_alias",
                "ec2Metadatas": "ec2_metadata",
                "iamAlias": "iam_alias",
                "iamMetadatas": "iam_metadata"
            },
            "vault:aws/authBackendIdentityWhitelist:AuthBackendIdentityWhitelist": {
                "disablePeriodicTidy": "disable_periodic_tidy",
                "safetyBuffer": "safety_buffer"
            },
            "vault:aws/authBackendLogin:AuthBackendLogin": {
                "authType": "auth_type",
                "clientToken": "client_token",
                "iamHttpRequestMethod": "iam_http_request_method",
                "iamRequestBody": "iam_request_body",
                "iamRequestHeaders": "iam_request_headers",
                "iamRequestUrl": "iam_request_url",
                "leaseDuration": "lease_duration",
                "leaseStartTime": "lease_start_time"
            },
            "vault:aws/authBackendRole:AuthBackendRole": {
                "allowInstanceMigration": "allow_instance_migration",
                "authType": "auth_type",
                "boundAccountIds": "bound_account_ids",
                "boundAmiIds": "bound_ami_ids",
                "boundEc2InstanceIds": "bound_ec2_instance_ids",
                "boundIamInstanceProfileArns": "bound_iam_instance_profile_arns",
                "boundIamPrincipalArns": "bound_iam_principal_arns",
                "boundIamRoleArns": "bound_iam_role_arns",
                "boundRegions": "bound_regions",
                "boundSubnetIds": "bound_subnet_ids",
                "boundVpcIds": "bound_vpc_ids",
                "disallowReauthentication": "disallow_reauthentication",
                "inferredAwsRegion": "inferred_aws_region",
                "inferredEntityType": "inferred_entity_type",
                "resolveAwsUniqueIds": "resolve_aws_unique_ids",
                "roleId": "role_id",
                "roleTag": "role_tag",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:aws/authBackendRoleTag:AuthBackendRoleTag": {
                "allowInstanceMigration": "allow_instance_migration",
                "disallowReauthentication": "disallow_reauthentication",
                "instanceId": "instance_id",
                "maxTtl": "max_ttl",
                "tagKey": "tag_key",
                "tagValue": "tag_value"
            },
            "vault:aws/authBackendRoletagBlacklist:AuthBackendRoletagBlacklist": {
                "disablePeriodicTidy": "disable_periodic_tidy",
                "safetyBuffer": "safety_buffer"
            },
            "vault:aws/authBackendStsRole:AuthBackendStsRole": {
                "accountId": "account_id",
                "stsRole": "sts_role"
            },
            "vault:aws/getAccessCredentials:getAccessCredentials": {
                "accessKey": "access_key",
                "leaseDuration": "lease_duration",
                "leaseId": "lease_id",
                "leaseRenewable": "lease_renewable",
                "leaseStartTime": "lease_start_time",
                "roleArn": "role_arn",
                "secretKey": "secret_key",
                "securityToken": "security_token"
            },
            "vault:aws/getStaticAccessCredentials:getStaticAccessCredentials": {
                "accessKey": "access_key",
                "secretKey": "secret_key"
            },
            "vault:aws/secretBackend:SecretBackend": {
                "accessKey": "access_key",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableRemount": "disable_remount",
                "iamEndpoint": "iam_endpoint",
                "identityTokenAudience": "identity_token_audience",
                "identityTokenKey": "identity_token_key",
                "identityTokenTtl": "identity_token_ttl",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "roleArn": "role_arn",
                "secretKey": "secret_key",
                "stsEndpoint": "sts_endpoint",
                "usernameTemplate": "username_template"
            },
            "vault:aws/secretBackendRole:SecretBackendRole": {
                "credentialType": "credential_type",
                "defaultStsTtl": "default_sts_ttl",
                "iamGroups": "iam_groups",
                "maxStsTtl": "max_sts_ttl",
                "permissionsBoundaryArn": "permissions_boundary_arn",
                "policyArns": "policy_arns",
                "policyDocument": "policy_document",
                "roleArns": "role_arns",
                "userPath": "user_path"
            },
            "vault:aws/secretBackendStaticRole:SecretBackendStaticRole": {
                "rotationPeriod": "rotation_period"
            },
            "vault:azure/BackendRoleAzureGroup:BackendRoleAzureGroup": {
                "groupName": "group_name",
                "objectId": "object_id"
            },
            "vault:azure/BackendRoleAzureRole:BackendRoleAzureRole": {
                "roleId": "role_id",
                "roleName": "role_name"
            },
            "vault:azure/authBackendConfig:AuthBackendConfig": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tenantId": "tenant_id"
            },
            "vault:azure/authBackendRole:AuthBackendRole": {
                "boundGroupIds": "bound_group_ids",
                "boundLocations": "bound_locations",
                "boundResourceGroups": "bound_resource_groups",
                "boundScaleSets": "bound_scale_sets",
                "boundServicePrincipalIds": "bound_service_principal_ids",
                "boundSubscriptionIds": "bound_subscription_ids",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:azure/backend:Backend": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "disableRemount": "disable_remount",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useMicrosoftGraphApi": "use_microsoft_graph_api"
            },
            "vault:azure/backendRole:BackendRole": {
                "applicationObjectId": "application_object_id",
                "azureGroups": "azure_groups",
                "azureRoles": "azure_roles",
                "maxTtl": "max_ttl",
                "permanentlyDelete": "permanently_delete",
                "signInAudience": "sign_in_audience"
            },
            "vault:azure/getAccessCredentials:getAccessCredentials": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "leaseDuration": "lease_duration",
                "leaseId": "lease_id",
                "leaseRenewable": "lease_renewable",
                "leaseStartTime": "lease_start_time",
                "maxCredValidationSeconds": "max_cred_validation_seconds",
                "numSecondsBetweenTests": "num_seconds_between_tests",
                "numSequentialSuccesses": "num_sequential_successes",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "validateCreds": "validate_creds"
            },
            "vault:config/authLogin:authLogin": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginAws:authLoginAws": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsIamEndpoint": "aws_iam_endpoint",
                "awsProfile": "aws_profile",
                "awsRegion": "aws_region",
                "awsRoleArn": "aws_role_arn",
                "awsRoleSessionName": "aws_role_session_name",
                "awsSecretAccessKey": "aws_secret_access_key",
                "awsSessionToken": "aws_session_token",
                "awsSharedCredentialsFile": "aws_shared_credentials_file",
                "awsStsEndpoint": "aws_sts_endpoint",
                "awsWebIdentityTokenFile": "aws_web_identity_token_file",
                "headerValue": "header_value",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginAzure:authLoginAzure": {
                "clientId": "client_id",
                "resourceGroupName": "resource_group_name",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useRootNamespace": "use_root_namespace",
                "vmName": "vm_name",
                "vmssName": "vmss_name"
            },
            "vault:config/authLoginCert:authLoginCert": {
                "certFile": "cert_file",
                "keyFile": "key_file",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginGcp:authLoginGcp": {
                "serviceAccount": "service_account",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginJwt:authLoginJwt": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginKerberos:authLoginKerberos": {
                "disableFastNegotiation": "disable_fast_negotiation",
                "keytabPath": "keytab_path",
                "krb5confPath": "krb5conf_path",
                "removeInstanceName": "remove_instance_name",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginOci:authLoginOci": {
                "authType": "auth_type",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginOidc:authLoginOidc": {
                "callbackAddress": "callback_address",
                "callbackListenerAddress": "callback_listener_address",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginRadius:authLoginRadius": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginTokenFile:authLoginTokenFile": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/authLoginUserpass:authLoginUserpass": {
                "passwordFile": "password_file",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:config/clientAuth:clientAuth": {
                "certFile": "cert_file",
                "keyFile": "key_file"
            },
            "vault:consul/secretBackend:SecretBackend": {
                "caCert": "ca_cert",
                "clientCert": "client_cert",
                "clientKey": "client_key",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableRemount": "disable_remount",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds"
            },
            "vault:consul/secretBackendRole:SecretBackendRole": {
                "consulNamespace": "consul_namespace",
                "consulPolicies": "consul_policies",
                "consulRoles": "consul_roles",
                "maxTtl": "max_ttl",
                "nodeIdentities": "node_identities",
                "serviceIdentities": "service_identities",
                "tokenType": "token_type"
            },
            "vault:database/SecretBackendConnectionCassandra:SecretBackendConnectionCassandra": {
                "connectTimeout": "connect_timeout",
                "insecureTls": "insecure_tls",
                "pemBundle": "pem_bundle",
                "pemJson": "pem_json",
                "protocolVersion": "protocol_version"
            },
            "vault:database/SecretBackendConnectionCouchbase:SecretBackendConnectionCouchbase": {
                "base64Pem": "base64_pem",
                "bucketName": "bucket_name",
                "insecureTls": "insecure_tls",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionElasticsearch:SecretBackendConnectionElasticsearch": {
                "caCert": "ca_cert",
                "caPath": "ca_path",
                "clientCert": "client_cert",
                "clientKey": "client_key",
                "tlsServerName": "tls_server_name",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionHana:SecretBackendConnectionHana": {
                "connectionUrl": "connection_url",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections"
            },
            "vault:database/SecretBackendConnectionInfluxdb:SecretBackendConnectionInfluxdb": {
                "connectTimeout": "connect_timeout",
                "insecureTls": "insecure_tls",
                "pemBundle": "pem_bundle",
                "pemJson": "pem_json",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionMongodb:SecretBackendConnectionMongodb": {
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionMongodbatlas:SecretBackendConnectionMongodbatlas": {
                "privateKey": "private_key",
                "projectId": "project_id",
                "publicKey": "public_key"
            },
            "vault:database/SecretBackendConnectionMssql:SecretBackendConnectionMssql": {
                "connectionUrl": "connection_url",
                "containedDb": "contained_db",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionMysql:SecretBackendConnectionMysql": {
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionMysqlAurora:SecretBackendConnectionMysqlAurora": {
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionMysqlLegacy:SecretBackendConnectionMysqlLegacy": {
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionMysqlRds:SecretBackendConnectionMysqlRds": {
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionOracle:SecretBackendConnectionOracle": {
                "connectionUrl": "connection_url",
                "disconnectSessions": "disconnect_sessions",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "splitStatements": "split_statements",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionPostgresql:SecretBackendConnectionPostgresql": {
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "serviceAccountJson": "service_account_json",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionRedis:SecretBackendConnectionRedis": {
                "caCert": "ca_cert",
                "insecureTls": "insecure_tls"
            },
            "vault:database/SecretBackendConnectionRedshift:SecretBackendConnectionRedshift": {
                "connectionUrl": "connection_url",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretBackendConnectionSnowflake:SecretBackendConnectionSnowflake": {
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "usernameTemplate": "username_template"
            },
            "vault:database/SecretsMountCassandra:SecretsMountCassandra": {
                "allowedRoles": "allowed_roles",
                "connectTimeout": "connect_timeout",
                "insecureTls": "insecure_tls",
                "pemBundle": "pem_bundle",
                "pemJson": "pem_json",
                "pluginName": "plugin_name",
                "protocolVersion": "protocol_version",
                "rootRotationStatements": "root_rotation_statements",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountCouchbase:SecretsMountCouchbase": {
                "allowedRoles": "allowed_roles",
                "base64Pem": "base64_pem",
                "bucketName": "bucket_name",
                "insecureTls": "insecure_tls",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountElasticsearch:SecretsMountElasticsearch": {
                "allowedRoles": "allowed_roles",
                "caCert": "ca_cert",
                "caPath": "ca_path",
                "clientCert": "client_cert",
                "clientKey": "client_key",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "tlsServerName": "tls_server_name",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountHana:SecretsMountHana": {
                "allowedRoles": "allowed_roles",
                "connectionUrl": "connection_url",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountInfluxdb:SecretsMountInfluxdb": {
                "allowedRoles": "allowed_roles",
                "connectTimeout": "connect_timeout",
                "insecureTls": "insecure_tls",
                "pemBundle": "pem_bundle",
                "pemJson": "pem_json",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountMongodb:SecretsMountMongodb": {
                "allowedRoles": "allowed_roles",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountMongodbatla:SecretsMountMongodbatla": {
                "allowedRoles": "allowed_roles",
                "pluginName": "plugin_name",
                "privateKey": "private_key",
                "projectId": "project_id",
                "publicKey": "public_key",
                "rootRotationStatements": "root_rotation_statements",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountMssql:SecretsMountMssql": {
                "allowedRoles": "allowed_roles",
                "connectionUrl": "connection_url",
                "containedDb": "contained_db",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountMysql:SecretsMountMysql": {
                "allowedRoles": "allowed_roles",
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountMysqlAurora:SecretsMountMysqlAurora": {
                "allowedRoles": "allowed_roles",
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountMysqlLegacy:SecretsMountMysqlLegacy": {
                "allowedRoles": "allowed_roles",
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountMysqlRd:SecretsMountMysqlRd": {
                "allowedRoles": "allowed_roles",
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "serviceAccountJson": "service_account_json",
                "tlsCa": "tls_ca",
                "tlsCertificateKey": "tls_certificate_key",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountOracle:SecretsMountOracle": {
                "allowedRoles": "allowed_roles",
                "connectionUrl": "connection_url",
                "disconnectSessions": "disconnect_sessions",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "splitStatements": "split_statements",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountPostgresql:SecretsMountPostgresql": {
                "allowedRoles": "allowed_roles",
                "authType": "auth_type",
                "connectionUrl": "connection_url",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "serviceAccountJson": "service_account_json",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountRedi:SecretsMountRedi": {
                "allowedRoles": "allowed_roles",
                "caCert": "ca_cert",
                "insecureTls": "insecure_tls",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountRedisElasticach:SecretsMountRedisElasticach": {
                "allowedRoles": "allowed_roles",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountRedshift:SecretsMountRedshift": {
                "allowedRoles": "allowed_roles",
                "connectionUrl": "connection_url",
                "disableEscaping": "disable_escaping",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/SecretsMountSnowflake:SecretsMountSnowflake": {
                "allowedRoles": "allowed_roles",
                "connectionUrl": "connection_url",
                "maxConnectionLifetime": "max_connection_lifetime",
                "maxIdleConnections": "max_idle_connections",
                "maxOpenConnections": "max_open_connections",
                "pluginName": "plugin_name",
                "rootRotationStatements": "root_rotation_statements",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:database/secretBackendConnection:SecretBackendConnection": {
                "allowedRoles": "allowed_roles",
                "mysqlAurora": "mysql_aurora",
                "mysqlLegacy": "mysql_legacy",
                "mysqlRds": "mysql_rds",
                "pluginName": "plugin_name",
                "redisElasticache": "redis_elasticache",
                "rootRotationStatements": "root_rotation_statements",
                "verifyConnection": "verify_connection"
            },
            "vault:database/secretBackendRole:SecretBackendRole": {
                "creationStatements": "creation_statements",
                "credentialConfig": "credential_config",
                "credentialType": "credential_type",
                "dbName": "db_name",
                "defaultTtl": "default_ttl",
                "maxTtl": "max_ttl",
                "renewStatements": "renew_statements",
                "revocationStatements": "revocation_statements",
                "rollbackStatements": "rollback_statements"
            },
            "vault:database/secretBackendStaticRole:SecretBackendStaticRole": {
                "dbName": "db_name",
                "rotationPeriod": "rotation_period",
                "rotationSchedule": "rotation_schedule",
                "rotationStatements": "rotation_statements",
                "rotationWindow": "rotation_window"
            },
            "vault:database/secretsMount:SecretsMount": {
                "allowedManagedKeys": "allowed_managed_keys",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "cassandras": "cassandra",
                "couchbases": "couchbase",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "elasticsearches": "elasticsearch",
                "engineCount": "engine_count",
                "externalEntropyAccess": "external_entropy_access",
                "hanas": "hana",
                "influxdbs": "influxdb",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "mongodbs": "mongodb",
                "mssqls": "mssql",
                "mysqlAuroras": "mysql_aurora",
                "mysqlLegacies": "mysql_legacy",
                "mysqlRds": "mysql_rds",
                "mysqls": "mysql",
                "oracles": "oracle",
                "postgresqls": "postgresql",
                "redisElasticaches": "redis_elasticache",
                "redshifts": "redshift",
                "sealWrap": "seal_wrap",
                "snowflakes": "snowflake"
            },
            "vault:gcp/AuthBackendTune:AuthBackendTune": {
                "allowedResponseHeaders": "allowed_response_headers",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "defaultLeaseTtl": "default_lease_ttl",
                "listingVisibility": "listing_visibility",
                "maxLeaseTtl": "max_lease_ttl",
                "passthroughRequestHeaders": "passthrough_request_headers",
                "tokenType": "token_type"
            },
            "vault:gcp/authBackend:AuthBackend": {
                "clientEmail": "client_email",
                "clientId": "client_id",
                "customEndpoint": "custom_endpoint",
                "disableRemount": "disable_remount",
                "privateKeyId": "private_key_id",
                "projectId": "project_id"
            },
            "vault:gcp/authBackendRole:AuthBackendRole": {
                "addGroupAliases": "add_group_aliases",
                "allowGceInference": "allow_gce_inference",
                "boundInstanceGroups": "bound_instance_groups",
                "boundLabels": "bound_labels",
                "boundProjects": "bound_projects",
                "boundRegions": "bound_regions",
                "boundServiceAccounts": "bound_service_accounts",
                "boundZones": "bound_zones",
                "maxJwtExp": "max_jwt_exp",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:gcp/getAuthBackendRole:getAuthBackendRole": {
                "boundInstanceGroups": "bound_instance_groups",
                "boundLabels": "bound_labels",
                "boundProjects": "bound_projects",
                "boundRegions": "bound_regions",
                "boundServiceAccounts": "bound_service_accounts",
                "boundZones": "bound_zones",
                "roleId": "role_id",
                "roleName": "role_name",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:gcp/secretBackend:SecretBackend": {
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableRemount": "disable_remount",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds"
            },
            "vault:gcp/secretImpersonatedAccount:SecretImpersonatedAccount": {
                "impersonatedAccount": "impersonated_account",
                "serviceAccountEmail": "service_account_email",
                "serviceAccountProject": "service_account_project",
                "tokenScopes": "token_scopes"
            },
            "vault:gcp/secretRoleset:SecretRoleset": {
                "bindings": "binding",
                "secretType": "secret_type",
                "serviceAccountEmail": "service_account_email",
                "tokenScopes": "token_scopes"
            },
            "vault:gcp/secretStaticAccount:SecretStaticAccount": {
                "bindings": "binding",
                "secretType": "secret_type",
                "serviceAccountEmail": "service_account_email",
                "serviceAccountProject": "service_account_project",
                "staticAccount": "static_account",
                "tokenScopes": "token_scopes"
            },
            "vault:generic/endpoint:Endpoint": {
                "dataJson": "data_json",
                "disableDelete": "disable_delete",
                "disableRead": "disable_read",
                "ignoreAbsentFields": "ignore_absent_fields",
                "writeData": "write_data",
                "writeDataJson": "write_data_json",
                "writeFields": "write_fields"
            },
            "vault:generic/getSecret:getSecret": {
                "dataJson": "data_json",
                "leaseDuration": "lease_duration",
                "leaseId": "lease_id",
                "leaseRenewable": "lease_renewable",
                "leaseStartTime": "lease_start_time",
                "withLeaseStartTime": "with_lease_start_time"
            },
            "vault:generic/secret:Secret": {
                "dataJson": "data_json",
                "deleteAllVersions": "delete_all_versions",
                "disableRead": "disable_read"
            },
            "vault:github/AuthBackendTune:AuthBackendTune": {
                "allowedResponseHeaders": "allowed_response_headers",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "defaultLeaseTtl": "default_lease_ttl",
                "listingVisibility": "listing_visibility",
                "maxLeaseTtl": "max_lease_ttl",
                "passthroughRequestHeaders": "passthrough_request_headers",
                "tokenType": "token_type"
            },
            "vault:github/authBackend:AuthBackend": {
                "baseUrl": "base_url",
                "disableRemount": "disable_remount",
                "organizationId": "organization_id",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:identity/entity:Entity": {
                "externalPolicies": "external_policies"
            },
            "vault:identity/entityAlias:EntityAlias": {
                "canonicalId": "canonical_id",
                "customMetadata": "custom_metadata",
                "mountAccessor": "mount_accessor"
            },
            "vault:identity/entityPolicies:EntityPolicies": {
                "entityId": "entity_id",
                "entityName": "entity_name"
            },
            "vault:identity/getEntity:getEntity": {
                "aliasId": "alias_id",
                "aliasMountAccessor": "alias_mount_accessor",
                "aliasName": "alias_name",
                "creationTime": "creation_time",
                "dataJson": "data_json",
                "directGroupIds": "direct_group_ids",
                "entityId": "entity_id",
                "entityName": "entity_name",
                "groupIds": "group_ids",
                "inheritedGroupIds": "inherited_group_ids",
                "lastUpdateTime": "last_update_time",
                "mergedEntityIds": "merged_entity_ids",
                "namespaceId": "namespace_id"
            },
            "vault:identity/getEntityAlias:getEntityAlias": {
                "canonicalId": "canonical_id",
                "creationTime": "creation_time",
                "lastUpdateTime": "last_update_time",
                "mergedFromCanonicalIds": "merged_from_canonical_ids",
                "mountAccessor": "mount_accessor",
                "mountPath": "mount_path",
                "mountType": "mount_type"
            },
            "vault:identity/getGroup:getGroup": {
                "aliasCanonicalId": "alias_canonical_id",
                "aliasCreationTime": "alias_creation_time",
                "aliasId": "alias_id",
                "aliasLastUpdateTime": "alias_last_update_time",
                "aliasMergedFromCanonicalIds": "alias_merged_from_canonical_ids",
                "aliasMetadata": "alias_metadata",
                "aliasMountAccessor": "alias_mount_accessor",
                "aliasMountPath": "alias_mount_path",
                "aliasMountType": "alias_mount_type",
                "aliasName": "alias_name",
                "creationTime": "creation_time",
                "dataJson": "data_json",
                "groupId": "group_id",
                "groupName": "group_name",
                "lastUpdateTime": "last_update_time",
                "memberEntityIds": "member_entity_ids",
                "memberGroupIds": "member_group_ids",
                "modifyIndex": "modify_index",
                "namespaceId": "namespace_id",
                "parentGroupIds": "parent_group_ids"
            },
            "vault:identity/getOidcClientCreds:getOidcClientCreds": {
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "vault:identity/getOidcOpenidConfig:getOidcOpenidConfig": {
                "authorizationEndpoint": "authorization_endpoint",
                "grantTypesSupporteds": "grant_types_supported",
                "idTokenSigningAlgValuesSupporteds": "id_token_signing_alg_values_supported",
                "jwksUri": "jwks_uri",
                "requestUriParameterSupported": "request_uri_parameter_supported",
                "responseTypesSupporteds": "response_types_supported",
                "scopesSupporteds": "scopes_supported",
                "subjectTypesSupporteds": "subject_types_supported",
                "tokenEndpoint": "token_endpoint",
                "tokenEndpointAuthMethodsSupporteds": "token_endpoint_auth_methods_supported",
                "userinfoEndpoint": "userinfo_endpoint"
            },
            "vault:identity/group:Group": {
                "externalMemberEntityIds": "external_member_entity_ids",
                "externalMemberGroupIds": "external_member_group_ids",
                "externalPolicies": "external_policies",
                "memberEntityIds": "member_entity_ids",
                "memberGroupIds": "member_group_ids"
            },
            "vault:identity/groupAlias:GroupAlias": {
                "canonicalId": "canonical_id",
                "mountAccessor": "mount_accessor"
            },
            "vault:identity/groupMemberEntityIds:GroupMemberEntityIds": {
                "groupId": "group_id",
                "groupName": "group_name",
                "memberEntityIds": "member_entity_ids"
            },
            "vault:identity/groupMemberGroupIds:GroupMemberGroupIds": {
                "groupId": "group_id",
                "memberGroupIds": "member_group_ids"
            },
            "vault:identity/groupPolicies:GroupPolicies": {
                "groupId": "group_id",
                "groupName": "group_name"
            },
            "vault:identity/mfaDuo:MfaDuo": {
                "apiHostname": "api_hostname",
                "integrationKey": "integration_key",
                "methodId": "method_id",
                "mountAccessor": "mount_accessor",
                "namespaceId": "namespace_id",
                "namespacePath": "namespace_path",
                "pushInfo": "push_info",
                "secretKey": "secret_key",
                "usePasscode": "use_passcode",
                "usernameFormat": "username_format"
            },
            "vault:identity/mfaLoginEnforcement:MfaLoginEnforcement": {
                "authMethodAccessors": "auth_method_accessors",
                "authMethodTypes": "auth_method_types",
                "identityEntityIds": "identity_entity_ids",
                "identityGroupIds": "identity_group_ids",
                "mfaMethodIds": "mfa_method_ids",
                "namespaceId": "namespace_id",
                "namespacePath": "namespace_path"
            },
            "vault:identity/mfaOkta:MfaOkta": {
                "apiToken": "api_token",
                "baseUrl": "base_url",
                "methodId": "method_id",
                "mountAccessor": "mount_accessor",
                "namespaceId": "namespace_id",
                "namespacePath": "namespace_path",
                "orgName": "org_name",
                "primaryEmail": "primary_email",
                "usernameFormat": "username_format"
            },
            "vault:identity/mfaPingid:MfaPingid": {
                "adminUrl": "admin_url",
                "authenticatorUrl": "authenticator_url",
                "idpUrl": "idp_url",
                "methodId": "method_id",
                "mountAccessor": "mount_accessor",
                "namespaceId": "namespace_id",
                "namespacePath": "namespace_path",
                "orgAlias": "org_alias",
                "settingsFileBase64": "settings_file_base64",
                "useSignature": "use_signature",
                "usernameFormat": "username_format"
            },
            "vault:identity/mfaTotp:MfaTotp": {
                "keySize": "key_size",
                "maxValidationAttempts": "max_validation_attempts",
                "methodId": "method_id",
                "mountAccessor": "mount_accessor",
                "namespaceId": "namespace_id",
                "namespacePath": "namespace_path",
                "qrSize": "qr_size"
            },
            "vault:identity/oidcAssignment:OidcAssignment": {
                "entityIds": "entity_ids",
                "groupIds": "group_ids"
            },
            "vault:identity/oidcClient:OidcClient": {
                "accessTokenTtl": "access_token_ttl",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientType": "client_type",
                "idTokenTtl": "id_token_ttl",
                "redirectUris": "redirect_uris"
            },
            "vault:identity/oidcKey:OidcKey": {
                "allowedClientIds": "allowed_client_ids",
                "rotationPeriod": "rotation_period",
                "verificationTtl": "verification_ttl"
            },
            "vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID": {
                "allowedClientId": "allowed_client_id",
                "keyName": "key_name"
            },
            "vault:identity/oidcProvider:OidcProvider": {
                "allowedClientIds": "allowed_client_ids",
                "httpsEnabled": "https_enabled",
                "issuerHost": "issuer_host",
                "scopesSupporteds": "scopes_supported"
            },
            "vault:identity/oidcRole:OidcRole": {
                "clientId": "client_id"
            },
            "vault:index/AuthBackendTune:AuthBackendTune": {
                "allowedResponseHeaders": "allowed_response_headers",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "defaultLeaseTtl": "default_lease_ttl",
                "listingVisibility": "listing_visibility",
                "maxLeaseTtl": "max_lease_ttl",
                "passthroughRequestHeaders": "passthrough_request_headers",
                "tokenType": "token_type"
            },
            "vault:index/ProviderAuthLogin:ProviderAuthLogin": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginAws:ProviderAuthLoginAws": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsIamEndpoint": "aws_iam_endpoint",
                "awsProfile": "aws_profile",
                "awsRegion": "aws_region",
                "awsRoleArn": "aws_role_arn",
                "awsRoleSessionName": "aws_role_session_name",
                "awsSecretAccessKey": "aws_secret_access_key",
                "awsSessionToken": "aws_session_token",
                "awsSharedCredentialsFile": "aws_shared_credentials_file",
                "awsStsEndpoint": "aws_sts_endpoint",
                "awsWebIdentityTokenFile": "aws_web_identity_token_file",
                "headerValue": "header_value",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginAzure:ProviderAuthLoginAzure": {
                "clientId": "client_id",
                "resourceGroupName": "resource_group_name",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useRootNamespace": "use_root_namespace",
                "vmName": "vm_name",
                "vmssName": "vmss_name"
            },
            "vault:index/ProviderAuthLoginCert:ProviderAuthLoginCert": {
                "certFile": "cert_file",
                "keyFile": "key_file",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginGcp:ProviderAuthLoginGcp": {
                "serviceAccount": "service_account",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginJwt:ProviderAuthLoginJwt": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginKerberos:ProviderAuthLoginKerberos": {
                "disableFastNegotiation": "disable_fast_negotiation",
                "keytabPath": "keytab_path",
                "krb5confPath": "krb5conf_path",
                "removeInstanceName": "remove_instance_name",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginOci:ProviderAuthLoginOci": {
                "authType": "auth_type",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginOidc:ProviderAuthLoginOidc": {
                "callbackAddress": "callback_address",
                "callbackListenerAddress": "callback_listener_address",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginRadius:ProviderAuthLoginRadius": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginTokenFile:ProviderAuthLoginTokenFile": {
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderAuthLoginUserpass:ProviderAuthLoginUserpass": {
                "passwordFile": "password_file",
                "useRootNamespace": "use_root_namespace"
            },
            "vault:index/ProviderClientAuth:ProviderClientAuth": {
                "certFile": "cert_file",
                "keyFile": "key_file"
            },
            "vault:index/authBackend:AuthBackend": {
                "disableRemount": "disable_remount"
            },
            "vault:index/certAuthBackendRole:CertAuthBackendRole": {
                "allowedCommonNames": "allowed_common_names",
                "allowedDnsSans": "allowed_dns_sans",
                "allowedEmailSans": "allowed_email_sans",
                "allowedNames": "allowed_names",
                "allowedOrganizationUnits": "allowed_organization_units",
                "allowedOrganizationalUnits": "allowed_organizational_units",
                "allowedUriSans": "allowed_uri_sans",
                "displayName": "display_name",
                "ocspCaCertificates": "ocsp_ca_certificates",
                "ocspEnabled": "ocsp_enabled",
                "ocspFailOpen": "ocsp_fail_open",
                "ocspQueryAllServers": "ocsp_query_all_servers",
                "ocspServersOverrides": "ocsp_servers_override",
                "requiredExtensions": "required_extensions",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:index/egpPolicy:EgpPolicy": {
                "enforcementLevel": "enforcement_level"
            },
            "vault:index/getAuthBackend:getAuthBackend": {
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "listingVisibility": "listing_visibility",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds"
            },
            "vault:index/getNomadAccessToken:getNomadAccessToken": {
                "accessorId": "accessor_id",
                "secretId": "secret_id"
            },
            "vault:index/getPolicyDocument:getPolicyDocument": {
                "rules": "rule"
            },
            "vault:index/getPolicyDocumentRule:getPolicyDocumentRule": {
                "allowedParameters": "allowed_parameter",
                "deniedParameters": "denied_parameter",
                "maxWrappingTtl": "max_wrapping_ttl",
                "minWrappingTtl": "min_wrapping_ttl",
                "requiredParameters": "required_parameters"
            },
            "vault:index/getPolicyDocumentRuleAllowedParameter:getPolicyDocumentRuleAllowedParameter": {
                "values": "value"
            },
            "vault:index/getPolicyDocumentRuleDeniedParameter:getPolicyDocumentRuleDeniedParameter": {
                "values": "value"
            },
            "vault:index/getRaftAutopilotState:getRaftAutopilotState": {
                "failureTolerance": "failure_tolerance",
                "optimisticFailureTolerance": "optimistic_failure_tolerance",
                "redundancyZones": "redundancy_zones",
                "redundancyZonesJson": "redundancy_zones_json",
                "serversJson": "servers_json",
                "upgradeInfo": "upgrade_info",
                "upgradeInfoJson": "upgrade_info_json"
            },
            "vault:index/mfaDuo:MfaDuo": {
                "apiHostname": "api_hostname",
                "integrationKey": "integration_key",
                "mountAccessor": "mount_accessor",
                "pushInfo": "push_info",
                "secretKey": "secret_key",
                "usernameFormat": "username_format"
            },
            "vault:index/mfaOkta:MfaOkta": {
                "apiToken": "api_token",
                "baseUrl": "base_url",
                "mountAccessor": "mount_accessor",
                "orgName": "org_name",
                "primaryEmail": "primary_email",
                "usernameFormat": "username_format"
            },
            "vault:index/mfaPingid:MfaPingid": {
                "adminUrl": "admin_url",
                "authenticatorUrl": "authenticator_url",
                "idpUrl": "idp_url",
                "mountAccessor": "mount_accessor",
                "namespaceId": "namespace_id",
                "orgAlias": "org_alias",
                "settingsFileBase64": "settings_file_base64",
                "useSignature": "use_signature",
                "usernameFormat": "username_format"
            },
            "vault:index/mfaTotp:MfaTotp": {
                "keySize": "key_size",
                "qrSize": "qr_size"
            },
            "vault:index/mount:Mount": {
                "allowedManagedKeys": "allowed_managed_keys",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "externalEntropyAccess": "external_entropy_access",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "sealWrap": "seal_wrap"
            },
            "vault:index/namespace:Namespace": {
                "customMetadata": "custom_metadata",
                "namespaceId": "namespace_id",
                "pathFq": "path_fq"
            },
            "vault:index/nomadSecretBackend:NomadSecretBackend": {
                "caCert": "ca_cert",
                "clientCert": "client_cert",
                "clientKey": "client_key",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableRemount": "disable_remount",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "maxTokenNameLength": "max_token_name_length",
                "maxTtl": "max_ttl"
            },
            "vault:index/quotaLeaseCount:QuotaLeaseCount": {
                "maxLeases": "max_leases"
            },
            "vault:index/quotaRateLimit:QuotaRateLimit": {
                "blockInterval": "block_interval"
            },
            "vault:index/raftAutopilot:RaftAutopilot": {
                "cleanupDeadServers": "cleanup_dead_servers",
                "deadServerLastContactThreshold": "dead_server_last_contact_threshold",
                "disableUpgradeMigration": "disable_upgrade_migration",
                "lastContactThreshold": "last_contact_threshold",
                "maxTrailingLogs": "max_trailing_logs",
                "minQuorum": "min_quorum",
                "serverStabilizationTime": "server_stabilization_time"
            },
            "vault:index/raftSnapshotAgentConfig:RaftSnapshotAgentConfig": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsS3Bucket": "aws_s3_bucket",
                "awsS3DisableTls": "aws_s3_disable_tls",
                "awsS3EnableKms": "aws_s3_enable_kms",
                "awsS3Endpoint": "aws_s3_endpoint",
                "awsS3ForcePathStyle": "aws_s3_force_path_style",
                "awsS3KmsKey": "aws_s3_kms_key",
                "awsS3Region": "aws_s3_region",
                "awsS3ServerSideEncryption": "aws_s3_server_side_encryption",
                "awsSecretAccessKey": "aws_secret_access_key",
                "awsSessionToken": "aws_session_token",
                "azureAccountKey": "azure_account_key",
                "azureAccountName": "azure_account_name",
                "azureBlobEnvironment": "azure_blob_environment",
                "azureContainerName": "azure_container_name",
                "azureEndpoint": "azure_endpoint",
                "filePrefix": "file_prefix",
                "googleDisableTls": "google_disable_tls",
                "googleEndpoint": "google_endpoint",
                "googleGcsBucket": "google_gcs_bucket",
                "googleServiceAccountKey": "google_service_account_key",
                "intervalSeconds": "interval_seconds",
                "localMaxSpace": "local_max_space",
                "pathPrefix": "path_prefix",
                "storageType": "storage_type"
            },
            "vault:index/rgpPolicy:RgpPolicy": {
                "enforcementLevel": "enforcement_level"
            },
            "vault:index/token:Token": {
                "clientToken": "client_token",
                "displayName": "display_name",
                "explicitMaxTtl": "explicit_max_ttl",
                "leaseDuration": "lease_duration",
                "leaseStarted": "lease_started",
                "noDefaultPolicy": "no_default_policy",
                "noParent": "no_parent",
                "numUses": "num_uses",
                "renewIncrement": "renew_increment",
                "renewMinLease": "renew_min_lease",
                "roleName": "role_name",
                "wrappedToken": "wrapped_token",
                "wrappingAccessor": "wrapping_accessor",
                "wrappingTtl": "wrapping_ttl"
            },
            "vault:index:Provider": {
                "addAddressToEnv": "add_address_to_env",
                "authLogin": "auth_login",
                "authLoginAws": "auth_login_aws",
                "authLoginAzure": "auth_login_azure",
                "authLoginCert": "auth_login_cert",
                "authLoginGcp": "auth_login_gcp",
                "authLoginJwt": "auth_login_jwt",
                "authLoginKerberos": "auth_login_kerberos",
                "authLoginOci": "auth_login_oci",
                "authLoginOidc": "auth_login_oidc",
                "authLoginRadius": "auth_login_radius",
                "authLoginTokenFile": "auth_login_token_file",
                "authLoginUserpass": "auth_login_userpass",
                "caCertDir": "ca_cert_dir",
                "caCertFile": "ca_cert_file",
                "clientAuth": "client_auth",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "maxRetries": "max_retries",
                "maxRetriesCcc": "max_retries_ccc",
                "setNamespaceFromToken": "set_namespace_from_token",
                "skipChildToken": "skip_child_token",
                "skipGetVaultVersion": "skip_get_vault_version",
                "skipTlsVerify": "skip_tls_verify",
                "tlsServerName": "tls_server_name",
                "tokenName": "token_name",
                "vaultVersionOverride": "vault_version_override"
            },
            "vault:jwt/AuthBackendTune:AuthBackendTune": {
                "allowedResponseHeaders": "allowed_response_headers",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "defaultLeaseTtl": "default_lease_ttl",
                "listingVisibility": "listing_visibility",
                "maxLeaseTtl": "max_lease_ttl",
                "passthroughRequestHeaders": "passthrough_request_headers",
                "tokenType": "token_type"
            },
            "vault:jwt/authBackend:AuthBackend": {
                "boundIssuer": "bound_issuer",
                "defaultRole": "default_role",
                "disableRemount": "disable_remount",
                "jwksCaPem": "jwks_ca_pem",
                "jwksUrl": "jwks_url",
                "jwtSupportedAlgs": "jwt_supported_algs",
                "jwtValidationPubkeys": "jwt_validation_pubkeys",
                "namespaceInState": "namespace_in_state",
                "oidcClientId": "oidc_client_id",
                "oidcClientSecret": "oidc_client_secret",
                "oidcDiscoveryCaPem": "oidc_discovery_ca_pem",
                "oidcDiscoveryUrl": "oidc_discovery_url",
                "oidcResponseMode": "oidc_response_mode",
                "oidcResponseTypes": "oidc_response_types",
                "providerConfig": "provider_config"
            },
            "vault:jwt/authBackendRole:AuthBackendRole": {
                "allowedRedirectUris": "allowed_redirect_uris",
                "boundAudiences": "bound_audiences",
                "boundClaims": "bound_claims",
                "boundClaimsType": "bound_claims_type",
                "boundSubject": "bound_subject",
                "claimMappings": "claim_mappings",
                "clockSkewLeeway": "clock_skew_leeway",
                "disableBoundClaimsParsing": "disable_bound_claims_parsing",
                "expirationLeeway": "expiration_leeway",
                "groupsClaim": "groups_claim",
                "maxAge": "max_age",
                "notBeforeLeeway": "not_before_leeway",
                "oidcScopes": "oidc_scopes",
                "roleName": "role_name",
                "roleType": "role_type",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type",
                "userClaim": "user_claim",
                "userClaimJsonPointer": "user_claim_json_pointer",
                "verboseOidcLogging": "verbose_oidc_logging"
            },
            "vault:kmip/secretBackend:SecretBackend": {
                "defaultTlsClientKeyBits": "default_tls_client_key_bits",
                "defaultTlsClientKeyType": "default_tls_client_key_type",
                "defaultTlsClientTtl": "default_tls_client_ttl",
                "disableRemount": "disable_remount",
                "listenAddrs": "listen_addrs",
                "serverHostnames": "server_hostnames",
                "serverIps": "server_ips",
                "tlsCaKeyBits": "tls_ca_key_bits",
                "tlsCaKeyType": "tls_ca_key_type",
                "tlsMinVersion": "tls_min_version"
            },
            "vault:kmip/secretRole:SecretRole": {
                "operationActivate": "operation_activate",
                "operationAddAttribute": "operation_add_attribute",
                "operationAll": "operation_all",
                "operationCreate": "operation_create",
                "operationDestroy": "operation_destroy",
                "operationDiscoverVersions": "operation_discover_versions",
                "operationGet": "operation_get",
                "operationGetAttributeList": "operation_get_attribute_list",
                "operationGetAttributes": "operation_get_attributes",
                "operationLocate": "operation_locate",
                "operationNone": "operation_none",
                "operationRegister": "operation_register",
                "operationRekey": "operation_rekey",
                "operationRevoke": "operation_revoke",
                "tlsClientKeyBits": "tls_client_key_bits",
                "tlsClientKeyType": "tls_client_key_type",
                "tlsClientTtl": "tls_client_ttl"
            },
            "vault:kubernetes/authBackendConfig:AuthBackendConfig": {
                "disableIssValidation": "disable_iss_validation",
                "disableLocalCaJwt": "disable_local_ca_jwt",
                "kubernetesCaCert": "kubernetes_ca_cert",
                "kubernetesHost": "kubernetes_host",
                "pemKeys": "pem_keys",
                "tokenReviewerJwt": "token_reviewer_jwt"
            },
            "vault:kubernetes/authBackendRole:AuthBackendRole": {
                "aliasNameSource": "alias_name_source",
                "boundServiceAccountNames": "bound_service_account_names",
                "boundServiceAccountNamespaces": "bound_service_account_namespaces",
                "roleName": "role_name",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:kubernetes/getAuthBackendConfig:getAuthBackendConfig": {
                "disableIssValidation": "disable_iss_validation",
                "disableLocalCaJwt": "disable_local_ca_jwt",
                "kubernetesCaCert": "kubernetes_ca_cert",
                "kubernetesHost": "kubernetes_host",
                "pemKeys": "pem_keys"
            },
            "vault:kubernetes/getAuthBackendRole:getAuthBackendRole": {
                "aliasNameSource": "alias_name_source",
                "boundServiceAccountNames": "bound_service_account_names",
                "boundServiceAccountNamespaces": "bound_service_account_namespaces",
                "roleName": "role_name",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:kubernetes/getServiceAccountToken:getServiceAccountToken": {
                "clusterRoleBinding": "cluster_role_binding",
                "kubernetesNamespace": "kubernetes_namespace",
                "leaseDuration": "lease_duration",
                "leaseId": "lease_id",
                "leaseRenewable": "lease_renewable",
                "serviceAccountName": "service_account_name",
                "serviceAccountNamespace": "service_account_namespace",
                "serviceAccountToken": "service_account_token"
            },
            "vault:kubernetes/secretBackend:SecretBackend": {
                "allowedManagedKeys": "allowed_managed_keys",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableLocalCaJwt": "disable_local_ca_jwt",
                "externalEntropyAccess": "external_entropy_access",
                "kubernetesCaCert": "kubernetes_ca_cert",
                "kubernetesHost": "kubernetes_host",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "sealWrap": "seal_wrap",
                "serviceAccountJwt": "service_account_jwt"
            },
            "vault:kubernetes/secretBackendRole:SecretBackendRole": {
                "allowedKubernetesNamespaces": "allowed_kubernetes_namespaces",
                "extraAnnotations": "extra_annotations",
                "extraLabels": "extra_labels",
                "generatedRoleRules": "generated_role_rules",
                "kubernetesRoleName": "kubernetes_role_name",
                "kubernetesRoleType": "kubernetes_role_type",
                "nameTemplate": "name_template",
                "serviceAccountName": "service_account_name",
                "tokenDefaultTtl": "token_default_ttl",
                "tokenMaxTtl": "token_max_ttl"
            },
            "vault:kv/SecretV2CustomMetadata:SecretV2CustomMetadata": {
                "casRequired": "cas_required",
                "deleteVersionAfter": "delete_version_after",
                "maxVersions": "max_versions"
            },
            "vault:kv/getSecret:getSecret": {
                "dataJson": "data_json",
                "leaseDuration": "lease_duration",
                "leaseId": "lease_id",
                "leaseRenewable": "lease_renewable"
            },
            "vault:kv/getSecretSubkeysV2:getSecretSubkeysV2": {
                "dataJson": "data_json"
            },
            "vault:kv/getSecretV2:getSecretV2": {
                "createdTime": "created_time",
                "customMetadata": "custom_metadata",
                "dataJson": "data_json",
                "deletionTime": "deletion_time"
            },
            "vault:kv/secret:Secret": {
                "dataJson": "data_json"
            },
            "vault:kv/secretBackendV2:SecretBackendV2": {
                "casRequired": "cas_required",
                "deleteVersionAfter": "delete_version_after",
                "maxVersions": "max_versions"
            },
            "vault:kv/secretV2:SecretV2": {
                "customMetadata": "custom_metadata",
                "dataJson": "data_json",
                "deleteAllVersions": "delete_all_versions",
                "disableRead": "disable_read"
            },
            "vault:ldap/authBackend:AuthBackend": {
                "caseSensitiveNames": "case_sensitive_names",
                "clientTlsCert": "client_tls_cert",
                "clientTlsKey": "client_tls_key",
                "denyNullBind": "deny_null_bind",
                "disableRemount": "disable_remount",
                "insecureTls": "insecure_tls",
                "maxPageSize": "max_page_size",
                "tlsMaxVersion": "tls_max_version",
                "tlsMinVersion": "tls_min_version",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type",
                "useTokenGroups": "use_token_groups",
                "usernameAsAlias": "username_as_alias"
            },
            "vault:ldap/getDynamicCredentials:getDynamicCredentials": {
                "distinguishedNames": "distinguished_names",
                "leaseDuration": "lease_duration",
                "leaseId": "lease_id",
                "leaseRenewable": "lease_renewable",
                "roleName": "role_name"
            },
            "vault:ldap/getStaticCredentials:getStaticCredentials": {
                "lastPassword": "last_password",
                "lastVaultRotation": "last_vault_rotation",
                "roleName": "role_name",
                "rotationPeriod": "rotation_period"
            },
            "vault:ldap/secretBackend:SecretBackend": {
                "allowedManagedKeys": "allowed_managed_keys",
                "auditNonHmacRequestKeys": "audit_non_hmac_request_keys",
                "auditNonHmacResponseKeys": "audit_non_hmac_response_keys",
                "clientTlsCert": "client_tls_cert",
                "clientTlsKey": "client_tls_key",
                "connectionTimeout": "connection_timeout",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableRemount": "disable_remount",
                "externalEntropyAccess": "external_entropy_access",
                "insecureTls": "insecure_tls",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "passwordPolicy": "password_policy",
                "requestTimeout": "request_timeout",
                "sealWrap": "seal_wrap"
            },
            "vault:ldap/secretBackendDynamicRole:SecretBackendDynamicRole": {
                "creationLdif": "creation_ldif",
                "defaultTtl": "default_ttl",
                "deletionLdif": "deletion_ldif",
                "maxTtl": "max_ttl",
                "roleName": "role_name",
                "rollbackLdif": "rollback_ldif",
                "usernameTemplate": "username_template"
            },
            "vault:ldap/secretBackendLibrarySet:SecretBackendLibrarySet": {
                "disableCheckInEnforcement": "disable_check_in_enforcement",
                "maxTtl": "max_ttl",
                "serviceAccountNames": "service_account_names"
            },
            "vault:ldap/secretBackendStaticRole:SecretBackendStaticRole": {
                "roleName": "role_name",
                "rotationPeriod": "rotation_period"
            },
            "vault:managed/KeysAw:KeysAw": {
                "accessKey": "access_key",
                "allowGenerateKey": "allow_generate_key",
                "allowReplaceKey": "allow_replace_key",
                "allowStoreKey": "allow_store_key",
                "anyMount": "any_mount",
                "keyBits": "key_bits",
                "keyType": "key_type",
                "kmsKey": "kms_key",
                "secretKey": "secret_key"
            },
            "vault:managed/KeysAzure:KeysAzure": {
                "allowGenerateKey": "allow_generate_key",
                "allowReplaceKey": "allow_replace_key",
                "allowStoreKey": "allow_store_key",
                "anyMount": "any_mount",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "keyBits": "key_bits",
                "keyName": "key_name",
                "keyType": "key_type",
                "tenantId": "tenant_id",
                "vaultName": "vault_name"
            },
            "vault:managed/KeysPkc:KeysPkc": {
                "allowGenerateKey": "allow_generate_key",
                "allowReplaceKey": "allow_replace_key",
                "allowStoreKey": "allow_store_key",
                "anyMount": "any_mount",
                "forceRwSession": "force_rw_session",
                "keyBits": "key_bits",
                "keyId": "key_id",
                "keyLabel": "key_label",
                "tokenLabel": "token_label"
            },
            "vault:managed/keys:Keys": {
                "azures": "azure"
            },
            "vault:mongodbatlas/secretBackend:SecretBackend": {
                "privateKey": "private_key",
                "publicKey": "public_key"
            },
            "vault:mongodbatlas/secretRole:SecretRole": {
                "cidrBlocks": "cidr_blocks",
                "ipAddresses": "ip_addresses",
                "maxTtl": "max_ttl",
                "organizationId": "organization_id",
                "projectId": "project_id",
                "projectRoles": "project_roles"
            },
            "vault:okta/AuthBackendGroup:AuthBackendGroup": {
                "groupName": "group_name"
            },
            "vault:okta/authBackend:AuthBackend": {
                "baseUrl": "base_url",
                "bypassOktaMfa": "bypass_okta_mfa",
                "disableRemount": "disable_remount",
                "groups": "group",
                "maxTtl": "max_ttl",
                "users": "user"
            },
            "vault:okta/authBackendGroup:AuthBackendGroup": {
                "groupName": "group_name"
            },
            "vault:pkiSecret/getBackendIssuer:getBackendIssuer": {
                "caChains": "ca_chain",
                "issuerId": "issuer_id",
                "issuerName": "issuer_name",
                "issuerRef": "issuer_ref",
                "keyId": "key_id",
                "leafNotAfterBehavior": "leaf_not_after_behavior",
                "manualChains": "manual_chain"
            },
            "vault:pkiSecret/getBackendIssuers:getBackendIssuers": {
                "keyInfo": "key_info",
                "keyInfoJson": "key_info_json"
            },
            "vault:pkiSecret/getBackendKey:getBackendKey": {
                "keyId": "key_id",
                "keyName": "key_name",
                "keyRef": "key_ref",
                "keyType": "key_type"
            },
            "vault:pkiSecret/getBackendKeys:getBackendKeys": {
                "keyInfo": "key_info",
                "keyInfoJson": "key_info_json"
            },
            "vault:pkiSecret/secretBackendCert:SecretBackendCert": {
                "altNames": "alt_names",
                "autoRenew": "auto_renew",
                "caChain": "ca_chain",
                "commonName": "common_name",
                "excludeCnFromSans": "exclude_cn_from_sans",
                "ipSans": "ip_sans",
                "issuerRef": "issuer_ref",
                "issuingCa": "issuing_ca",
                "minSecondsRemaining": "min_seconds_remaining",
                "otherSans": "other_sans",
                "privateKey": "private_key",
                "privateKeyFormat": "private_key_format",
                "privateKeyType": "private_key_type",
                "renewPending": "renew_pending",
                "serialNumber": "serial_number",
                "uriSans": "uri_sans",
                "userIds": "user_ids"
            },
            "vault:pkiSecret/secretBackendConfigCa:SecretBackendConfigCa": {
                "pemBundle": "pem_bundle"
            },
            "vault:pkiSecret/secretBackendConfigIssuers:SecretBackendConfigIssuers": {
                "defaultFollowsLatestIssuer": "default_follows_latest_issuer"
            },
            "vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls": {
                "crlDistributionPoints": "crl_distribution_points",
                "issuingCertificates": "issuing_certificates",
                "ocspServers": "ocsp_servers"
            },
            "vault:pkiSecret/secretBackendCrlConfig:SecretBackendCrlConfig": {
                "autoRebuild": "auto_rebuild",
                "autoRebuildGracePeriod": "auto_rebuild_grace_period",
                "crossClusterRevocation": "cross_cluster_revocation",
                "deltaRebuildInterval": "delta_rebuild_interval",
                "enableDelta": "enable_delta",
                "ocspDisable": "ocsp_disable",
                "ocspExpiry": "ocsp_expiry",
                "unifiedCrl": "unified_crl",
                "unifiedCrlOnExistingPaths": "unified_crl_on_existing_paths"
            },
            "vault:pkiSecret/secretBackendIntermediateCertRequest:SecretBackendIntermediateCertRequest": {
                "addBasicConstraints": "add_basic_constraints",
                "altNames": "alt_names",
                "commonName": "common_name",
                "excludeCnFromSans": "exclude_cn_from_sans",
                "ipSans": "ip_sans",
                "keyBits": "key_bits",
                "keyId": "key_id",
                "keyName": "key_name",
                "keyRef": "key_ref",
                "keyType": "key_type",
                "managedKeyId": "managed_key_id",
                "managedKeyName": "managed_key_name",
                "otherSans": "other_sans",
                "postalCode": "postal_code",
                "privateKey": "private_key",
                "privateKeyFormat": "private_key_format",
                "privateKeyType": "private_key_type",
                "streetAddress": "street_address",
                "uriSans": "uri_sans"
            },
            "vault:pkiSecret/secretBackendIntermediateSetSigned:SecretBackendIntermediateSetSigned": {
                "importedIssuers": "imported_issuers",
                "importedKeys": "imported_keys"
            },
            "vault:pkiSecret/secretBackendIssuer:SecretBackendIssuer": {
                "crlDistributionPoints": "crl_distribution_points",
                "enableAiaUrlTemplating": "enable_aia_url_templating",
                "issuerId": "issuer_id",
                "issuerName": "issuer_name",
                "issuerRef": "issuer_ref",
                "issuingCertificates": "issuing_certificates",
                "leafNotAfterBehavior": "leaf_not_after_behavior",
                "manualChains": "manual_chain",
                "ocspServers": "ocsp_servers",
                "revocationSignatureAlgorithm": "revocation_signature_algorithm"
            },
            "vault:pkiSecret/secretBackendKey:SecretBackendKey": {
                "keyBits": "key_bits",
                "keyId": "key_id",
                "keyName": "key_name",
                "keyType": "key_type",
                "managedKeyId": "managed_key_id",
                "managedKeyName": "managed_key_name"
            },
            "vault:pkiSecret/secretBackendRole:SecretBackendRole": {
                "allowAnyName": "allow_any_name",
                "allowBareDomains": "allow_bare_domains",
                "allowGlobDomains": "allow_glob_domains",
                "allowIpSans": "allow_ip_sans",
                "allowLocalhost": "allow_localhost",
                "allowSubdomains": "allow_subdomains",
                "allowWildcardCertificates": "allow_wildcard_certificates",
                "allowedDomains": "allowed_domains",
                "allowedDomainsTemplate": "allowed_domains_template",
                "allowedOtherSans": "allowed_other_sans",
                "allowedSerialNumbers": "allowed_serial_numbers",
                "allowedUriSans": "allowed_uri_sans",
                "allowedUriSansTemplate": "allowed_uri_sans_template",
                "allowedUserIds": "allowed_user_ids",
                "basicConstraintsValidForNonCa": "basic_constraints_valid_for_non_ca",
                "clientFlag": "client_flag",
                "codeSigningFlag": "code_signing_flag",
                "countries": "country",
                "emailProtectionFlag": "email_protection_flag",
                "enforceHostnames": "enforce_hostnames",
                "extKeyUsageOids": "ext_key_usage_oids",
                "extKeyUsages": "ext_key_usage",
                "generateLease": "generate_lease",
                "issuerRef": "issuer_ref",
                "keyBits": "key_bits",
                "keyType": "key_type",
                "keyUsages": "key_usage",
                "localities": "locality",
                "maxTtl": "max_ttl",
                "noStore": "no_store",
                "notBeforeDuration": "not_before_duration",
                "organizationUnit": "ou",
                "organizations": "organization",
                "policyIdentifier": "policy_identifier",
                "policyIdentifiers": "policy_identifiers",
                "postalCodes": "postal_code",
                "provinces": "province",
                "requireCn": "require_cn",
                "serverFlag": "server_flag",
                "streetAddresses": "street_address",
                "useCsrCommonName": "use_csr_common_name",
                "useCsrSans": "use_csr_sans"
            },
            "vault:pkiSecret/secretBackendRootCert:SecretBackendRootCert": {
                "altNames": "alt_names",
                "commonName": "common_name",
                "excludeCnFromSans": "exclude_cn_from_sans",
                "ipSans": "ip_sans",
                "issuerId": "issuer_id",
                "issuerName": "issuer_name",
                "issuingCa": "issuing_ca",
                "keyBits": "key_bits",
                "keyId": "key_id",
                "keyName": "key_name",
                "keyRef": "key_ref",
                "keyType": "key_type",
                "managedKeyId": "managed_key_id",
                "managedKeyName": "managed_key_name",
                "maxPathLength": "max_path_length",
                "otherSans": "other_sans",
                "permittedDnsDomains": "permitted_dns_domains",
                "postalCode": "postal_code",
                "privateKeyFormat": "private_key_format",
                "serialNumber": "serial_number",
                "streetAddress": "street_address",
                "uriSans": "uri_sans"
            },
            "vault:pkiSecret/secretBackendRootSignIntermediate:SecretBackendRootSignIntermediate": {
                "altNames": "alt_names",
                "caChains": "ca_chain",
                "certificateBundle": "certificate_bundle",
                "commonName": "common_name",
                "excludeCnFromSans": "exclude_cn_from_sans",
                "ipSans": "ip_sans",
                "issuerRef": "issuer_ref",
                "issuingCa": "issuing_ca",
                "maxPathLength": "max_path_length",
                "otherSans": "other_sans",
                "permittedDnsDomains": "permitted_dns_domains",
                "postalCode": "postal_code",
                "serialNumber": "serial_number",
                "streetAddress": "street_address",
                "uriSans": "uri_sans",
                "useCsrValues": "use_csr_values"
            },
            "vault:pkiSecret/secretBackendSign:SecretBackendSign": {
                "altNames": "alt_names",
                "autoRenew": "auto_renew",
                "caChains": "ca_chain",
                "commonName": "common_name",
                "excludeCnFromSans": "exclude_cn_from_sans",
                "ipSans": "ip_sans",
                "issuerRef": "issuer_ref",
                "issuingCa": "issuing_ca",
                "minSecondsRemaining": "min_seconds_remaining",
                "otherSans": "other_sans",
                "renewPending": "renew_pending",
                "serialNumber": "serial_number",
                "uriSans": "uri_sans"
            },
            "vault:rabbitMq/SecretBackendRoleVhostTopic:SecretBackendRoleVhostTopic": {
                "vhosts": "vhost"
            },
            "vault:rabbitMq/secretBackend:SecretBackend": {
                "connectionUri": "connection_uri",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableRemount": "disable_remount",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
                "passwordPolicy": "password_policy",
                "usernameTemplate": "username_template",
                "verifyConnection": "verify_connection"
            },
            "vault:rabbitMq/secretBackendRole:SecretBackendRole": {
                "vhostTopics": "vhost_topic",
                "vhosts": "vhost"
            },
            "vault:saml/authBackend:AuthBackend": {
                "acsUrls": "acs_urls",
                "defaultRole": "default_role",
                "disableRemount": "disable_remount",
                "entityId": "entity_id",
                "idpCert": "idp_cert",
                "idpEntityId": "idp_entity_id",
                "idpMetadataUrl": "idp_metadata_url",
                "idpSsoUrl": "idp_sso_url",
                "verboseLogging": "verbose_logging"
            },
            "vault:saml/authBackendRole:AuthBackendRole": {
                "boundAttributes": "bound_attributes",
                "boundAttributesType": "bound_attributes_type",
                "boundSubjects": "bound_subjects",
                "boundSubjectsType": "bound_subjects_type",
                "groupsAttribute": "groups_attribute",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:secrets/syncAssociation:SyncAssociation": {
                "secretName": "secret_name",
                "syncStatus": "sync_status",
                "updatedAt": "updated_at"
            },
            "vault:secrets/syncAwsDestination:SyncAwsDestination": {
                "accessKeyId": "access_key_id",
                "customTags": "custom_tags",
                "secretAccessKey": "secret_access_key",
                "secretNameTemplate": "secret_name_template"
            },
            "vault:secrets/syncAzureDestination:SyncAzureDestination": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "customTags": "custom_tags",
                "keyVaultUri": "key_vault_uri",
                "secretNameTemplate": "secret_name_template",
                "tenantId": "tenant_id"
            },
            "vault:secrets/syncConfig:SyncConfig": {
                "queueCapacity": "queue_capacity"
            },
            "vault:secrets/syncGcpDestination:SyncGcpDestination": {
                "customTags": "custom_tags",
                "secretNameTemplate": "secret_name_template"
            },
            "vault:secrets/syncGhDestination:SyncGhDestination": {
                "accessToken": "access_token",
                "repositoryName": "repository_name",
                "repositoryOwner": "repository_owner",
                "secretNameTemplate": "secret_name_template"
            },
            "vault:secrets/syncVercelDestination:SyncVercelDestination": {
                "accessToken": "access_token",
                "deploymentEnvironments": "deployment_environments",
                "projectId": "project_id",
                "secretNameTemplate": "secret_name_template",
                "teamId": "team_id"
            },
            "vault:ssh/secretBackendCa:SecretBackendCa": {
                "generateSigningKey": "generate_signing_key",
                "privateKey": "private_key",
                "publicKey": "public_key"
            },
            "vault:ssh/secretBackendRole:SecretBackendRole": {
                "algorithmSigner": "algorithm_signer",
                "allowBareDomains": "allow_bare_domains",
                "allowHostCertificates": "allow_host_certificates",
                "allowSubdomains": "allow_subdomains",
                "allowUserCertificates": "allow_user_certificates",
                "allowUserKeyIds": "allow_user_key_ids",
                "allowedCriticalOptions": "allowed_critical_options",
                "allowedDomains": "allowed_domains",
                "allowedDomainsTemplate": "allowed_domains_template",
                "allowedExtensions": "allowed_extensions",
                "allowedUserKeyConfigs": "allowed_user_key_config",
                "allowedUserKeyLengths": "allowed_user_key_lengths",
                "allowedUsers": "allowed_users",
                "allowedUsersTemplate": "allowed_users_template",
                "cidrList": "cidr_list",
                "defaultCriticalOptions": "default_critical_options",
                "defaultExtensions": "default_extensions",
                "defaultUser": "default_user",
                "defaultUserTemplate": "default_user_template",
                "keyIdFormat": "key_id_format",
                "keyType": "key_type",
                "maxTtl": "max_ttl",
                "notBeforeDuration": "not_before_duration"
            },
            "vault:terraformcloud/secretBackend:SecretBackend": {
                "basePath": "base_path",
                "defaultLeaseTtlSeconds": "default_lease_ttl_seconds",
                "disableRemount": "disable_remount",
                "maxLeaseTtlSeconds": "max_lease_ttl_seconds"
            },
            "vault:terraformcloud/secretCreds:SecretCreds": {
                "leaseId": "lease_id",
                "teamId": "team_id",
                "tokenId": "token_id"
            },
            "vault:terraformcloud/secretRole:SecretRole": {
                "maxTtl": "max_ttl",
                "teamId": "team_id",
                "userId": "user_id"
            },
            "vault:tokenauth/authBackendRole:AuthBackendRole": {
                "allowedEntityAliases": "allowed_entity_aliases",
                "allowedPolicies": "allowed_policies",
                "allowedPoliciesGlobs": "allowed_policies_glob",
                "disallowedPolicies": "disallowed_policies",
                "disallowedPoliciesGlobs": "disallowed_policies_glob",
                "pathSuffix": "path_suffix",
                "roleName": "role_name",
                "tokenBoundCidrs": "token_bound_cidrs",
                "tokenExplicitMaxTtl": "token_explicit_max_ttl",
                "tokenMaxTtl": "token_max_ttl",
                "tokenNoDefaultPolicy": "token_no_default_policy",
                "tokenNumUses": "token_num_uses",
                "tokenPeriod": "token_period",
                "tokenPolicies": "token_policies",
                "tokenTtl": "token_ttl",
                "tokenType": "token_type"
            },
            "vault:transform/getDecode:getDecode": {
                "batchInputs": "batch_input",
                "batchResults": "batch_results",
                "decodedValue": "decoded_value",
                "roleName": "role_name"
            },
            "vault:transform/getEncode:getEncode": {
                "batchInputs": "batch_input",
                "batchResults": "batch_results",
                "encodedValue": "encoded_value",
                "roleName": "role_name"
            },
            "vault:transform/template:Template": {
                "decodeFormats": "decode_formats",
                "encodeFormat": "encode_format"
            },
            "vault:transform/transformation:Transformation": {
                "allowedRoles": "allowed_roles",
                "deletionAllowed": "deletion_allowed",
                "maskingCharacter": "masking_character",
                "tweakSource": "tweak_source"
            },
            "vault:transit/getEncrypt:getEncrypt": {
                "keyVersion": "key_version"
            },
            "vault:transit/secretBackendKey:SecretBackendKey": {
                "allowPlaintextBackup": "allow_plaintext_backup",
                "autoRotateInterval": "auto_rotate_interval",
                "autoRotatePeriod": "auto_rotate_period",
                "convergentEncryption": "convergent_encryption",
                "deletionAllowed": "deletion_allowed",
                "keySize": "key_size",
                "latestVersion": "latest_version",
                "minAvailableVersion": "min_available_version",
                "minDecryptionVersion": "min_decryption_version",
                "minEncryptionVersion": "min_encryption_version",
                "supportsDecryption": "supports_decryption",
                "supportsDerivation": "supports_derivation",
                "supportsEncryption": "supports_encryption",
                "supportsSigning": "supports_signing"
            }
        },
        "renamedConfigProperties": {
            "addAddressToEnv": "add_address_to_env",
            "authLogin": "auth_login",
            "authLoginAws": "auth_login_aws",
            "authLoginAzure": "auth_login_azure",
            "authLoginCert": "auth_login_cert",
            "authLoginGcp": "auth_login_gcp",
            "authLoginJwt": "auth_login_jwt",
            "authLoginKerberos": "auth_login_kerberos",
            "authLoginOci": "auth_login_oci",
            "authLoginOidc": "auth_login_oidc",
            "authLoginRadius": "auth_login_radius",
            "authLoginTokenFile": "auth_login_token_file",
            "authLoginUserpass": "auth_login_userpass",
            "caCertDir": "ca_cert_dir",
            "caCertFile": "ca_cert_file",
            "clientAuth": "client_auth",
            "maxLeaseTtlSeconds": "max_lease_ttl_seconds",
            "maxRetries": "max_retries",
            "maxRetriesCcc": "max_retries_ccc",
            "setNamespaceFromToken": "set_namespace_from_token",
            "skipChildToken": "skip_child_token",
            "skipGetVaultVersion": "skip_get_vault_version",
            "skipTlsVerify": "skip_tls_verify",
            "tlsServerName": "tls_server_name",
            "tokenName": "token_name",
            "vaultVersionOverride": "vault_version_override"
        }
    }
}